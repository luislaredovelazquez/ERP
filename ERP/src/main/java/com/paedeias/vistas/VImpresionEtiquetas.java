/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.paedeias.vistas;

import com.paedeias.controladores.impresiones.ImpresionEtiquetas;
import com.paedeias.helpers.*;
import com.paedeias.identidades.Articuloproveedor;
import com.paedeias.identidades.Articulos;
import com.paedeias.identidades.Proveedores;
import java.awt.BorderLayout;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.awt.Window;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.print.*;
import java.text.DecimalFormat;
import java.text.MessageFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ALL
 */
public class VImpresionEtiquetas extends javax.swing.JPanel {

    /**
     * Creates new form VImpresionEtiquetas
     */
    public VImpresionEtiquetas() {
        initComponents();
        inicializar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Buscar Artículos:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(102, 102, 102)));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setText("Código del Artículo");

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(11, 70, 119));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Buscar");
        jButton1.setContentAreaFilled(false);
        jButton1.setOpaque(true);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 102, 102));
        jLabel3.setText("Factura");

        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(11, 70, 119));
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Buscar");
        jButton4.setContentAreaFilled(false);
        jButton4.setOpaque(true);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        jLabel4.setText("Compra");

        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(11, 70, 119));
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Buscar");
        jButton5.setContentAreaFilled(false);
        jButton5.setOpaque(true);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jLabel3)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4)
                    .addComponent(jLabel4)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5)))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Artículos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(102, 102, 102)));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton2.setBackground(new java.awt.Color(11, 70, 119));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Agregar");
        jButton2.setContentAreaFilled(false);
        jButton2.setOpaque(true);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextField2.setText("1");
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 102, 102));
        jLabel2.setText("Cantidad");

        jButton6.setBackground(new java.awt.Color(11, 70, 119));
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Eliminar");
        jButton6.setContentAreaFilled(false);
        jButton6.setOpaque(true);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setBackground(new java.awt.Color(11, 70, 119));
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setText("Agregar todas");
        jButton7.setContentAreaFilled(false);
        jButton7.setOpaque(true);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton7)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jButton6)
                    .addComponent(jButton7)))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jButton3.setBackground(new java.awt.Color(11, 70, 119));
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Imprimir");
        jButton3.setContentAreaFilled(false);
        jButton3.setOpaque(true);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 102, 102));
        jLabel5.setText("Proveedor ");

        jTextField5.setEditable(false);
        jTextField5.setText("No Encontrado");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 102, 102));
        jLabel6.setText("Fecha");

        jTextField6.setEditable(false);
        jTextField6.setText("Fecha no Encontrada");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jLabel5)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        if(!listaArticulos.isEmpty())
        listaArticulos.clear();
        hArticulos ha= new hArticulos();
        
        listaArticulos = ha.consultaArticulos("codigo", "LIKE", jTextField1.getText());
        
         vector = new Vector();

         for(Object o: listaArticulos){
             Articulos iarticulos = (Articulos)o;
             Vector<Object> unaFila = new Vector<Object>();
             unaFila.add(iarticulos.getId());
             unaFila.add(iarticulos.getCodigo());
             unaFila.add(iarticulos.getDescripcion());
             unaFila.add(df.format(iarticulos.getPrecioVenta()));
             unaFila.add(df.format(iarticulos.getPrecioCompra()));
             unaFila.add(iarticulos.getExistencia());
             unaFila.add(iarticulos.getAlmacenDevoluciones());
             unaFila.add(iarticulos.getReservado()); 
             vector.add(unaFila); 

         }

            dtm = new DefaultTableModel(vector,encabezadoArticulos) {

              @Override
              public boolean isCellEditable(int row, int column) {
              return false;
                }
              };

              jTable1.setModel(dtm);
              jTable1.getSelectionModel().setSelectionInterval(0, 0);
              jTextField1.setText("");
              jTextField2.requestFocus();
              jTextField5.setText("No Encontrado");
              jTextField6.setText("Fecha No Encontrada");  
              captura = "Sin captura";
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
        jButton1.doClick();
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if(jTable1.getSelectedRow() == -1)
        {
            JOptionPane.showMessageDialog(null, "Por favor seleccione primero una fila");
            return;
        }
        
        
        Articulos articulo = new Articulos();
        articulo.setDescripcion(listaArticulos.get(jTable1.getSelectedRow()).getDescripcion());
        articulo.setExistencia(Long.valueOf(jTextField2.getText()));
        articulo.setExistenciaAlmacen((int)listaArticulos.get(jTable1.getSelectedRow()).getExistencia()+listaArticulos.get(jTable1.getSelectedRow()).getExistenciaAlmacen());
        articulo.setCodigo(listaArticulos.get(jTable1.getSelectedRow()).getCodigo());
        
        
        
        if(!jTextField4.getText().isEmpty())
        {
        hArticuloProveedor hap = new hArticuloProveedor();
        // List<Articuloproveedor> lsinonimos = hap.consultaArtProv3("c.id", "=", jTextField4.getText(), "idArticulo", "=", listaArticulos.get(jTable1.getSelectedRow()).getCodigo());
        List<Articuloproveedor> lsinonimos = hap.consultaArtProv3("id", "=", jTextField4.getText(), "idArticulo", "=", articulo.getCodigo());
        
        if(!lsinonimos.isEmpty())
        {
        articulo.setSinonimoPrincipal(lsinonimos.get(lsinonimos.size()-1).getSinonimo());
        }
        else
        articulo.setSinonimoPrincipal(sinonimo);
        }else if(!jTextField3.getText().isEmpty())
        {
        hArticuloProveedor hap = new hArticuloProveedor();
        // List<Articuloproveedor> lsinonimos = hap.consultaArtProv3("c.id", "=", jTextField4.getText(), "idArticulo", "=", listaArticulos.get(jTable1.getSelectedRow()).getCodigo());
        List<Articuloproveedor> lsinonimos = hap.consultaArtProv3("factura", "=", jTextField3.getText(), "idArticulo", "=", articulo.getCodigo());
        
        if(!lsinonimos.isEmpty())
        {
        articulo.setSinonimoPrincipal(lsinonimos.get(lsinonimos.size()-1).getSinonimo());
        }
        else
        articulo.setSinonimoPrincipal(sinonimo);
        
        }        
        else
        {
          hArticuloProveedor hap = new hArticuloProveedor();
        // List<Articuloproveedor> lsinonimos = hap.consultaArtProv3("c.id", "=", jTextField4.getText(), "idArticulo", "=", listaArticulos.get(jTable1.getSelectedRow()).getCodigo());
        List<Articuloproveedor> lsinonimos = hap.consultaArtProv("idArticulo", "=",articulo.getCodigo());
        
        if(!lsinonimos.isEmpty())
        {
                // TODO add your handling code here:
        VImpresionEtiquetas.TablaResumen seleccionar = new VImpresionEtiquetas.TablaResumen(lsinonimos);
        JDialog dialogo = new JDialog((JFrame)Window.getWindows()[0],"Sinónimos",true);
        dialogo.getContentPane().add(seleccionar);
        dialogo.setSize(500, 600);
        dialogo.setLocationRelativeTo((JFrame)Window.getWindows()[0]);
        dialogo.setVisible(true);    
            
        articulo.setSinonimoPrincipal(seleccionar.getSinonimoSeleccionado());
        }
        else
        articulo.setSinonimoPrincipal(sinonimo);  
        }
        listaArticulos2.add(articulo);
        
        
        
        
        jTextField1.setText("");
        jTextField2.setText("1");
        
             Vector<Object> unaFila = new Vector<Object>();
             unaFila.add(articulo.getCodigo());
             unaFila.add(articulo.getDescripcion());
             unaFila.add(articulo.getExistencia());
             vector2.add(unaFila); 


             
              dtm2.fireTableStructureChanged();

//              jTable2.setModel(dtm2);
              jTable2.getSelectionModel().setSelectionInterval(0, 0);
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        Book book = new Book();
        PrinterJob job = PrinterJob.getPrinterJob();
        PageFormat pf = new PageFormat();
             //sólo para impresione
             
             Paper p = new Paper();
             p.setSize(283.38916256157637,141.87192118226602);
             p.setImageableArea(0,0,283.38916256157637, 141.87192118226602);
             pf.setPaper(p);
             

        int it1=0;
        while(it1<listaArticulos2.size())
        {
        int it2=0;
        while(it2<listaArticulos2.get(it1).getExistencia())
        {   
        if(!listaArticulos2.get(it1).getSinonimoPrincipal().isEmpty())
        sinonimo = listaArticulos2.get(it1).getSinonimoPrincipal();    
        
        ImpresionEtiquetas impresione = new ImpresionEtiquetas();    
        impresione.inicializar(listaArticulos2.get(it1).getDescripcion(),listaArticulos2.get(it1).getExistenciaAlmacen()+" "+new hCuentasPorCobrar().generarFecha().substring(0,10)+" ", listaArticulos2.get(it1).getCodigo(),captura,sinonimo);           
        book.append(impresione, pf);   
        it2++;
        }
        it1++;
        }    
               if (job.printDialog())
            {
            try {
                //sólo para impresione
                
             job.setPageable(book);    
            //sólo para impresione
            job.print();
            } catch (PrinterException ex) {
                Logger.getLogger(VImpresionEtiquetas.class.getName()).log(Level.SEVERE, null, ex);
            }
            }
               
     
             
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
                // TODO add your handling code here:
        hComprasMayoreo hcm = new hComprasMayoreo();

        if(!listaArticulos.isEmpty())
        listaArticulos.clear();
       
        
        listaArticulos = hcm.consultarArticulosEF(jTextField3.getText());
        
         vector = new Vector();

         for(Object o: listaArticulos){
             Articulos iarticulos = (Articulos)o;
             Vector<Object> unaFila = new Vector<Object>();
             unaFila.add(iarticulos.getId());
             unaFila.add(iarticulos.getCodigo());
             unaFila.add(iarticulos.getDescripcion());
             unaFila.add(df.format(iarticulos.getPrecioVenta()));
             unaFila.add(df.format(iarticulos.getPrecioCompra()));
             unaFila.add(iarticulos.getExistencia());
             unaFila.add(iarticulos.getAlmacenDevoluciones());
             unaFila.add(iarticulos.getReservado()); 
             vector.add(unaFila); 

         }
         
         if(!listaArticulos.isEmpty())
         {
         jTextField5.setText(listaArticulos.get(0).getTipoEtiqueta());
         jTextField6.setText(listaArticulos.get(0).getUnidad());
         captura = listaArticulos.get(0).getClasificacion();
         }else
         {
         jTextField5.setText("No Encontrado");
         jTextField6.setText("Fecha No Encontrada");     
         captura = "Sin captura";
         }

            dtm = new DefaultTableModel(vector,encabezadoArticulos) {

              @Override
              public boolean isCellEditable(int row, int column) {
              return false;
                }
              };

              jTable1.setModel(dtm);
              jTable1.getSelectionModel().setSelectionInterval(0, 0);
          //    jTextField3.setText("");
              jTextField2.requestFocus();

    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        hComprasMayoreo hcm = new hComprasMayoreo();

        if(!listaArticulos.isEmpty())
        listaArticulos.clear();
       
        
        listaArticulos = hcm.consultarArticulosE(jTextField4.getText());
        
         vector = new Vector();

         for(Object o: listaArticulos){
             Articulos iarticulos = (Articulos)o;
             Vector<Object> unaFila = new Vector<Object>();
             unaFila.add(iarticulos.getId());
             unaFila.add(iarticulos.getCodigo());
             unaFila.add(iarticulos.getDescripcion());
             unaFila.add(df.format(iarticulos.getPrecioVenta()));
             unaFila.add(df.format(iarticulos.getPrecioCompra()));
             unaFila.add(iarticulos.getExistencia());
             unaFila.add(iarticulos.getAlmacenDevoluciones());
             unaFila.add(iarticulos.getReservado());              
             
             vector.add(unaFila); 

         }
         
         if(!listaArticulos.isEmpty())
         {
         jTextField5.setText(listaArticulos.get(0).getTipoEtiqueta());
         jTextField6.setText(listaArticulos.get(0).getUnidad());
         captura = listaArticulos.get(0).getClasificacion();
         }else
         {
         jTextField5.setText("No Encontrado");
         jTextField6.setText("Fecha No Encontrada");     
         captura = "Sin captura";
         }

            dtm = new DefaultTableModel(vector,encabezadoArticulos) {

              @Override
              public boolean isCellEditable(int row, int column) {
              return false;
                }
              };

              jTable1.setModel(dtm);
              jTable1.getSelectionModel().setSelectionInterval(0, 0);
           //   jTextField4.setText("");
              jTextField2.requestFocus();
              
        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
        jButton4.doClick();
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
        jButton5.doClick();
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
        jButton2.doClick();
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        if(jTable2.getSelectedRow() == -1)
        {
            JOptionPane.showMessageDialog(null, "Por favor seleccione primero una fila");
            return;
        }
        listaArticulos2.remove(jTable2.getSelectedRow());
        
        dtm2.removeRow(jTable2.getSelectedRow());
        dtm2.fireTableStructureChanged();
        
        
        
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        
        for(int i=0; i<listaArticulos.size(); i++)
        {
          Articulos articulo = new Articulos();
        articulo.setDescripcion(listaArticulos.get(i).getDescripcion());
        articulo.setExistencia(listaArticulos.get(i).getExistencia());
        articulo.setExistenciaAlmacen((int)listaArticulos.get(i).getExistencia()+listaArticulos.get(i).getExistenciaAlmacen());
        articulo.setCodigo(listaArticulos.get(i).getCodigo());
        
        
        
        if(!jTextField4.getText().isEmpty())
        {
        hArticuloProveedor hap = new hArticuloProveedor();
        // List<Articuloproveedor> lsinonimos = hap.consultaArtProv3("c.id", "=", jTextField4.getText(), "idArticulo", "=", listaArticulos.get(jTable1.getSelectedRow()).getCodigo());
        List<Articuloproveedor> lsinonimos = hap.consultaArtProv3("id", "=", jTextField4.getText(), "idArticulo", "=", articulo.getCodigo());
        
        if(!lsinonimos.isEmpty())
        {
        articulo.setSinonimoPrincipal(lsinonimos.get(lsinonimos.size()-1).getSinonimo());
        }
        else
        articulo.setSinonimoPrincipal(sinonimo);
        }else if(!jTextField3.getText().isEmpty())
        {
        hArticuloProveedor hap = new hArticuloProveedor();
        // List<Articuloproveedor> lsinonimos = hap.consultaArtProv3("c.id", "=", jTextField4.getText(), "idArticulo", "=", listaArticulos.get(jTable1.getSelectedRow()).getCodigo());
        List<Articuloproveedor> lsinonimos = hap.consultaArtProv3("factura", "=", jTextField3.getText(), "idArticulo", "=", articulo.getCodigo());
        
        if(!lsinonimos.isEmpty())
        {
        articulo.setSinonimoPrincipal(lsinonimos.get(lsinonimos.size()-1).getSinonimo());
        }
        else
        articulo.setSinonimoPrincipal(sinonimo);
        
        }        
        else
        {
        hArticuloProveedor hap = new hArticuloProveedor();
        // List<Articuloproveedor> lsinonimos = hap.consultaArtProv3("c.id", "=", jTextField4.getText(), "idArticulo", "=", listaArticulos.get(jTable1.getSelectedRow()).getCodigo());
        List<Articuloproveedor> lsinonimos = hap.consultaArtProv("idArticulo", "=",articulo.getCodigo());
        
        if(!lsinonimos.isEmpty())
        {
        articulo.setSinonimoPrincipal(lsinonimos.get(lsinonimos.size()-1).getSinonimo());
        }
        else
        articulo.setSinonimoPrincipal(sinonimo);  
        }
        listaArticulos2.add(articulo);
        
        
        

        
             Vector<Object> unaFila = new Vector<Object>();
             unaFila.add(articulo.getCodigo());
             unaFila.add(articulo.getDescripcion());
             unaFila.add(articulo.getExistencia());
             vector2.add(unaFila); 

        }
                     
             jTextField1.setText("");
              jTextField2.setText("1");
              dtm2.fireTableStructureChanged();
        
//              jTable2.setModel(dtm2);
              jTable2.getSelectionModel().setSelectionInterval(0, 0);
      
    }//GEN-LAST:event_jButton7ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    // End of variables declaration//GEN-END:variables
    DefaultTableModel dtm;
    DefaultTableModel dtm2;
    Vector vector;
    Vector vector2;
    Vector<String> encabezadoArticulos;
    Vector<String> encabezadoArticulos2;
    List<Articulos> listaArticulos;
    List<Articulos> listaArticulos2;
    String sinonimo = "Sin sinónimo";
    String captura = "Sin captura";
    DecimalFormat df;
    
    public void inicializar()
    {
        df = new DecimalFormat("0.00");
        vector = new Vector();
        vector2 = new Vector();
        
        encabezadoArticulos = new Vector<String>();
        encabezadoArticulos.add("Id");
        encabezadoArticulos.add("Código");
        encabezadoArticulos.add("Descripción");
        encabezadoArticulos.add("Venta");
        encabezadoArticulos.add("Compra");
        encabezadoArticulos.add("Existencia");
        encabezadoArticulos.add("Almacén Devoluciones");
        encabezadoArticulos.add("Reservado");
        
        encabezadoArticulos2 = new Vector<String>();
        encabezadoArticulos2.add("Código");
        encabezadoArticulos2.add("Descripción");
        encabezadoArticulos2.add("Impresiones");
      
      dtm = new DefaultTableModel(vector,encabezadoArticulos);
      jTable1.setModel(dtm);
      
      dtm2 = new DefaultTableModel(vector2,encabezadoArticulos2);
      jTable2.setModel(dtm2);
      
      listaArticulos = new ArrayList<Articulos>();
      listaArticulos2 = new ArrayList<Articulos>();
      
      jTable1.getSelectionModel().addListSelectionListener(new ListSelectionListener() {

            public void valueChanged(ListSelectionEvent e) {
                
                if(jTable1.getSelectedRow()==-1)
                    return;
                if(listaArticulos.isEmpty())
                    return;
                jTextField2.setText(String.valueOf(listaArticulos.get(jTable1.getSelectedRow()).getExistencia()));
            }
      
      });
      
    }
    
    
     public class TablaResumen extends JPanel   {

    JPanel panelPrincipal;
    JTable tablaResumen;
    Vector vectorResumen,encabezadoResumen;
    DefaultTableModel dtmResumen;
    String sinonimoSeleccionado="";

    public TablaResumen(List<Articuloproveedor> lsinonimos){

     setLayout(new GridLayout());
     panelPrincipal = new JPanel();
     panelPrincipal.setLayout(new GridLayout());
   
     

     tablaResumen = new JTable();

     encabezadoResumen = new Vector<String>();
     encabezadoResumen.add("Proveedor");
     encabezadoResumen.add("Sinónimo");

     hProveedores hp = new hProveedores();
     List<Proveedores> p = new ArrayList<Proveedores>();
     vectorResumen = new Vector();
     for(int i=0; i<lsinonimos.size(); i++)
     {
     Vector<Object> vecten1r = new Vector();
     p = hp.consultaProveedores("nombreCorto", "=", lsinonimos.get(i).getIdProveedor());
     if(!p.isEmpty())
     {
     vecten1r.add(p.get(0).getNombre());    
     vecten1r.add(lsinonimos.get(i).getSinonimo());
     vectorResumen.add(vecten1r);
     }
     }
         
      dtmResumen = new DefaultTableModel(vectorResumen,encabezadoResumen) {

              @Override
              public boolean isCellEditable(int row, int column) {
              return false;
                }
              }; 

      tablaResumen.setModel(dtmResumen);
      
      tablaResumen.addMouseListener(new MouseListener(){

                public void mouseClicked(MouseEvent e) {
                 
                if(e.getClickCount() == 2)
                   {
                       setSinonimoSeleccionado(dtmResumen.getValueAt(tablaResumen.getSelectedRow(),1).toString());
                   }
                }

                public void mousePressed(MouseEvent e) {
                 return;   
                }

                public void mouseReleased(MouseEvent e) {
                 return;
                }

                public void mouseEntered(MouseEvent e) {
                 return;  
                }

                public void mouseExited(MouseEvent e) {
                 return;  
                }
      
      
      
      });
    


      panelPrincipal.add(new JScrollPane(tablaResumen), BorderLayout.CENTER);

      add(panelPrincipal);

    }

        public String getSinonimoSeleccionado() {
            return sinonimoSeleccionado;
        }

        public void setSinonimoSeleccionado(String sinonimoSeleccionado) {
            this.sinonimoSeleccionado = sinonimoSeleccionado;
        }
    
    

}
    
    
    
}
