/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.paedeias.vistas;

import com.paedeias.controladores.*;
import com.paedeias.controladores.impresiones.ImpresionPedidoReservacion;
import com.paedeias.controladores.impresiones.ImpresionVenta;
import com.paedeias.controladores.impresiones.PageableText;
import com.paedeias.helpers.*;
import com.paedeias.identidades.*;
import java.awt.Window;
import java.awt.print.PageFormat;
import java.awt.print.Paper;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.io.IOException;
import java.sql.Timestamp;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ALL
 */
public class VActualiza_Reservacion extends javax.swing.JPanel {

    /**
     * Creates new form VAlta_Reservacion
     */
    public VActualiza_Reservacion(Reservaciones reservacion) {
        initComponents();
        inicializar(reservacion);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jPasswordField1 = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jTextField25 = new javax.swing.JTextField();
        jButton8 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jTextField10 = new javax.swing.JTextField();
        jTextField11 = new javax.swing.JTextField();
        jTextField12 = new javax.swing.JTextField();
        jTextField13 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jTextField14 = new javax.swing.JTextField();
        jTextField15 = new javax.swing.JTextField();
        jTextField16 = new javax.swing.JTextField();
        jTextField17 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jTextField18 = new javax.swing.JTextField();
        jTextField19 = new javax.swing.JTextField();
        jTextField20 = new javax.swing.JTextField();
        jTextField21 = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        jTextField22 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel25 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel26 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox();
        jLabel27 = new javax.swing.JLabel();
        jTextField23 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel28 = new javax.swing.JLabel();
        jTextField24 = new javax.swing.JTextField();
        jButton9 = new javax.swing.JButton();
        jTextField26 = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jTextField27 = new javax.swing.JTextField();
        jButton11 = new javax.swing.JButton();
        jLabel36 = new javax.swing.JLabel();
        jTextField28 = new javax.swing.JTextField();
        jButton13 = new javax.swing.JButton();
        jLabel37 = new javax.swing.JLabel();
        jTextField29 = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jButton10 = new javax.swing.JButton();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jButton12 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Reservación"));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setText("Folio");

        jTextField1.setEditable(false);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 102, 102));
        jLabel2.setText("Fecha");

        jTextField2.setEditable(false);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 102, 102));
        jLabel3.setText("Usuario");

        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jPasswordField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPasswordField1ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        jLabel4.setText("Contraseña");

        jButton1.setBackground(new java.awt.Color(11, 70, 119));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Validar");
        jButton1.setContentAreaFilled(false);
        jButton1.setOpaque(true);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jButton1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Cliente"));

        jComboBox1.setEnabled(false);
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 102, 102));
        jLabel5.setText("Cliente");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 102, 102));
        jLabel6.setText("Nombre");

        jTextField4.setEditable(false);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(102, 102, 102));
        jLabel7.setText("RFC");

        jTextField5.setEditable(false);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(102, 102, 102));
        jLabel8.setText("Realiza");

        jTextField6.setEditable(false);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(102, 102, 102));
        jLabel9.setText("Límite de Crédito");

        jTextField7.setEditable(false);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(102, 102, 102));
        jLabel10.setText("Saldo");

        jTextField8.setEditable(false);

        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(102, 102, 102));
        jLabel29.setText("Buscar Cliente:");

        jTextField25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField25ActionPerformed(evt);
            }
        });

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mainicons/btn_buscar.png"))); // NOI18N
        jButton8.setBorderPainted(false);
        jButton8.setContentAreaFilled(false);
        jButton8.setEnabled(false);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel6))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField6)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField8)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel29)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField25, javax.swing.GroupLayout.PREFERRED_SIZE, 523, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel29)
                        .addComponent(jTextField25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9)
                        .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel10)
                        .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Registro"));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(102, 102, 102));
        jLabel11.setText("Siniestro");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(102, 102, 102));
        jLabel12.setText("Taller");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(102, 102, 102));
        jLabel13.setText("Marca");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(102, 102, 102));
        jLabel14.setText("No. de Serie");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(102, 102, 102));
        jLabel15.setText("Observaciones");

        jTextField9.setEditable(false);

        jTextField10.setEditable(false);

        jTextField11.setEditable(false);

        jTextField12.setEditable(false);

        jTextField13.setEditable(false);

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(102, 102, 102));
        jLabel16.setText("No. de Motor");

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(102, 102, 102));
        jLabel17.setText("Tipo");

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(102, 102, 102));
        jLabel18.setText("Reporte");

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(102, 102, 102));
        jLabel19.setText("Modelo");

        jTextField14.setEditable(false);

        jTextField15.setEditable(false);

        jTextField16.setEditable(false);

        jTextField17.setEditable(false);

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(102, 102, 102));
        jLabel20.setText("Color");

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(102, 102, 102));
        jLabel21.setText("Poliza");

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(102, 102, 102));
        jLabel22.setText("Puertas");

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(102, 102, 102));
        jLabel23.setText("Asegurado");

        jTextField18.setEditable(false);

        jTextField19.setEditable(false);
        jTextField19.setText("4");

        jTextField20.setEditable(false);

        jTextField21.setEditable(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel16))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextField11)
                                    .addComponent(jTextField12, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel18)
                                    .addComponent(jLabel17)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel19)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField17, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel23)
                            .addComponent(jLabel22)
                            .addComponent(jLabel21)
                            .addComponent(jLabel20))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField20)
                            .addComponent(jTextField21)
                            .addComponent(jTextField19)
                            .addComponent(jTextField18, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jTextField9))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20)
                    .addComponent(jTextField21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21)
                    .addComponent(jTextField20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)
                    .addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22)
                    .addComponent(jTextField19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(jTextField17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23)
                    .addComponent(jTextField18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Articulo"));

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(102, 102, 102));
        jLabel24.setText("Número de Vale");

        jTextField22.setEditable(false);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(102, 102, 102));
        jLabel25.setText("Buscar artículos donde");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Código", "Descripción", "Línea" }));

        jLabel26.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(102, 102, 102));
        jLabel26.setText("sea");

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Igual", "Como" }));

        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(102, 102, 102));
        jLabel27.setText("a");

        jTextField23.setEditable(false);
        jTextField23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField23ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mainicons/btn_buscar.png"))); // NOI18N
        jButton2.setBorderPainted(false);
        jButton2.setContentAreaFilled(false);
        jButton2.setEnabled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(11, 70, 119));
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Eliminar Renglon");
        jButton3.setContentAreaFilled(false);
        jButton3.setEnabled(false);
        jButton3.setOpaque(true);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(11, 70, 119));
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Agregar Renglón");
        jButton4.setContentAreaFilled(false);
        jButton4.setEnabled(false);
        jButton4.setOpaque(true);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(102, 102, 102));
        jLabel28.setText("Cantidad");

        jTextField24.setEditable(false);
        jTextField24.setText("1");

        jButton9.setBackground(new java.awt.Color(11, 70, 119));
        jButton9.setForeground(new java.awt.Color(255, 255, 255));
        jButton9.setText("Modificar Precio");
        jButton9.setContentAreaFilled(false);
        jButton9.setEnabled(false);
        jButton9.setOpaque(true);
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jTextField26.setEditable(false);
        jTextField26.setText("0000.00");

        jLabel32.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(102, 102, 102));
        jLabel32.setText("Precio Venta");

        jLabel35.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(102, 102, 102));
        jLabel35.setText("Vale");

        jTextField27.setEditable(false);

        jButton11.setBackground(new java.awt.Color(11, 70, 119));
        jButton11.setForeground(new java.awt.Color(255, 255, 255));
        jButton11.setText("Modificar Vale");
        jButton11.setContentAreaFilled(false);
        jButton11.setEnabled(false);
        jButton11.setOpaque(true);
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jLabel36.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(102, 102, 102));
        jLabel36.setText("Descripción");

        jTextField28.setEditable(false);

        jButton13.setBackground(new java.awt.Color(11, 70, 119));
        jButton13.setForeground(new java.awt.Color(255, 255, 255));
        jButton13.setText("Modificar Descripción");
        jButton13.setContentAreaFilled(false);
        jButton13.setEnabled(false);
        jButton13.setOpaque(true);
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jLabel37.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(102, 102, 102));
        jLabel37.setText("Cotizar sobre %");

        jTextField29.setEditable(false);
        jTextField29.setText("30");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel36)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField28)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel24)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField22, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel25)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel26)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel27)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField23, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel28)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField24, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel32)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField26, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel35)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField27, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel37)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField29, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel24)
                        .addComponent(jTextField22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel25)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel26)
                        .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel27)
                        .addComponent(jTextField23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(jTextField24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton9)
                    .addComponent(jLabel32)
                    .addComponent(jTextField26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel35)
                    .addComponent(jTextField27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton11)
                    .addComponent(jLabel37)
                    .addComponent(jTextField29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton3)
                        .addComponent(jButton4)
                        .addComponent(jButton13))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel36)
                        .addComponent(jTextField28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Resumen"));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable2.setCellSelectionEnabled(true);
        jScrollPane2.setViewportView(jTable2);

        jButton5.setBackground(new java.awt.Color(11, 70, 119));
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Actualizar Partidas");
        jButton5.setContentAreaFilled(false);
        jButton5.setEnabled(false);
        jButton5.setOpaque(true);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(11, 70, 119));
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Ticket a Almacén");
        jButton6.setContentAreaFilled(false);
        jButton6.setEnabled(false);
        jButton6.setOpaque(true);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jCheckBox1.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox1.setText("Facturada");
        jCheckBox1.setEnabled(false);

        jLabel30.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(102, 102, 102));
        jLabel30.setText("Total");

        jLabel31.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel31.setText("0000.00");

        jButton10.setBackground(new java.awt.Color(11, 70, 119));
        jButton10.setForeground(new java.awt.Color(255, 255, 255));
        jButton10.setText("Actualizar Reservación");
        jButton10.setContentAreaFilled(false);
        jButton10.setEnabled(false);
        jButton10.setOpaque(true);
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jLabel33.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(102, 102, 102));
        jLabel33.setText("Partidas");

        jLabel34.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel34.setText("0000");

        jButton12.setBackground(new java.awt.Color(11, 70, 119));
        jButton12.setForeground(new java.awt.Color(255, 255, 255));
        jButton12.setText("CFDI");
        jButton12.setContentAreaFilled(false);
        jButton12.setEnabled(false);
        jButton12.setOpaque(true);
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jCheckBox1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel30)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel31)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel33)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel34)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6)
                        .addGap(2, 2, 2)
                        .addComponent(jButton5)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(jButton6)
                    .addComponent(jCheckBox1)
                    .addComponent(jLabel30)
                    .addComponent(jLabel31)
                    .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel33)
                    .addComponent(jLabel34)
                    .addComponent(jButton12))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        boolean bandera = autenticar.validarAutorizaciones(jTextField3.getText(),String.valueOf(jPasswordField1.getPassword()),"Administración");
        if(bandera==false)
        bandera = autenticar.validarAutorizaciones(jTextField3.getText(),String.valueOf(jPasswordField1.getPassword()),"Area");    
         idUsuario=autenticar.getId();
         if(autenticar.getUsuariogeneral()!=null)
         nombreUsuario = autenticar.getUsuariogeneral().getNombres()+" "+ autenticar.getUsuariogeneral().getApellidoP() +" "+ autenticar.getUsuariogeneral().getApellidoM();
        if(bandera)
        {
            
            jTextField6.setText(nombreUsuario);
            jTextField3.setEditable(false);
            jPasswordField1.setEditable(false);
            jComboBox1.setEnabled(true);
            
            jButton2.setEnabled(true);
            jButton4.setEnabled(true);
            jButton3.setEnabled(true);
            jButton12.setEnabled(true);
            jButton8.setEnabled(true);
            jButton6.setEnabled(true);
            jButton9.setEnabled(true);
            jButton10.setEnabled(true);
            jButton11.setEnabled(true);
            jButton13.setEnabled(true);
            jButton1.setEnabled(false);
            
            jTextField10.setEditable(true);
            jTextField11.setEditable(true);
            jTextField12.setEditable(true);
            jTextField13.setEditable(true);
            jTextField14.setEditable(true);
            jTextField15.setEditable(true);
            jTextField16.setEditable(true);
            jTextField17.setEditable(true);
            jTextField21.setEditable(true);
            jTextField20.setEditable(true);
            jTextField19.setEditable(true);
            jTextField18.setEditable(true);
            jTextField9.setEditable(true);
            jTextField22.setEditable(true);
            jTextField23.setEditable(true);
            jTextField24.setEditable(true);
            jTextField26.setEditable(true);
            jTextField27.setEditable(true);
            jTextField28.setEditable(true);
            
            if(jCheckBox1.isSelected())
            {
                jButton5.setEnabled(false);
                jButton6.setEnabled(false);
                jButton10.setEnabled(false);
                jButton3.setEnabled(false);
                jButton4.setEnabled(false);
                jButton9.setEnabled(false);
                jButton11.setEnabled(false);
                jButton13.setEnabled(false);
            }
            
        }else
        JOptionPane.showMessageDialog(null,"Nombre de Usuario o Contraseña Incorrecta");    
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        hArticulolinea harticulolinea = new hArticulolinea();
        
        String valores [] = {"codigo","descripcion","lineaPrincipal"};
        String comparadores [] = {"=","LIKE"};
        
        String campo = valores[jComboBox2.getSelectedIndex()];
        String compara = comparadores[jComboBox3.getSelectedIndex()];
        String condicion = jTextField23.getText();
        
        listaArticulos = articulos.consultaArticulos(campo,compara,condicion);
        if(listaArticulos.isEmpty())
        listaArticulos = harticulolinea.consultaArticuloxNombre(jTextField23.getText());  
        
        
        vector = new Vector();

         for(Object o: listaArticulos){
             Articulos iarticulos = (Articulos)o;
             Vector<Object> unaFila = new Vector<Object>();
             unaFila.add(iarticulos.getCodigo());
             unaFila.add(iarticulos.getDescripcion());
             unaFila.add(iarticulos.getPrecioCompra());
             unaFila.add(iarticulos.getPrecioVenta());
             unaFila.add(iarticulos.getExistencia());
             
         /*    int acumulado = 0;
             List<Almacendevoluciones> listadev = halmacendevoluciones.consultaPartidas("codigoArticulo", "=", iarticulos.getCodigo());
             int suma=0;
             while(suma<listadev.size())
             {
                 acumulado = acumulado + listadev.get(suma).getCantidad();
                 suma++;
             } */
             unaFila.add(iarticulos.getAlmacenDevoluciones());
             unaFila.add(iarticulos.getReservado());
             vector.add(unaFila);
         }
         
            dtm = new DefaultTableModel(vector,encabezadoArticulos) {

              @Override
              public boolean isCellEditable(int row, int column) {
              return false;
                }
              };

           jTable1.setModel(dtm);
           jTable1.getSelectionModel().setSelectionInterval(0, 0);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        
        
        
        if(jTable1.getSelectedRow() == -1)
        {
            JOptionPane.showMessageDialog(null,"Por favor seleccione una fila");
            return;
        }
        
        if(listaArticulos.get(jTable1.getSelectedRow()).getExistencia() < Integer.valueOf(jTextField24.getText()))
        {
            JOptionPane.showMessageDialog(null, "No hay existencia suficiente en el catálogo de artículos para descargar esta partida");
            return;
        } 
        
        
        int existencia =  (int)listaArticulos.get(jTable1.getSelectedRow()).getExistencia() - Integer.valueOf(jTextField24.getText());
           
            if(existencia < 0)
            {
                JOptionPane.showMessageDialog(null, "No existe existencia suficiente en el catálogo de artículos para reservar la cantidad deseada, por favor aumente la existencia");
                return;
            }
            
        hKardex hkar = new hKardex();
        Kardex parkar = hkar.consultaUltimoRenglon("articulo", "=", listaArticulos.get(jTable1.getSelectedRow()).getCodigo());
        
        if(parkar == null)
        {
            JOptionPane.showMessageDialog(null, "Este artículo no se encuentra registrado en Kardex");
            return;
        }
        
        if(Integer.compare(parkar.getExistencias(),(int)listaArticulos.get(jTable1.getSelectedRow()).getExistencia() + 
                (int)listaArticulos.get(jTable1.getSelectedRow()).getAlmacenDevoluciones()) != 0)
        {
            JOptionPane.showMessageDialog(null, "La existencia de este artículo no coincide en Kardex, consulte a un Administrador para modificar existencia");
            return;            
        }
        
        Partidasreservaciones pr = new Partidasreservaciones();
        pr.setCantidad(Integer.valueOf(jTextField24.getText()));
        pr.setCodArt(listaArticulos.get(jTable1.getSelectedRow()).getCodigo());
        pr.setCodRes(jTextField1.getText()); //Poner código de reservación al cerrar la reservación
        pr.setCosto(listaArticulos.get(jTable1.getSelectedRow()).getPrecioCompra());
        pr.setDescripcion(listaArticulos.get(jTable1.getSelectedRow()).getDescripcion());
        pr.setPrecio(Double.valueOf(jTextField26.getText()));
        pr.setReservado((int)listaArticulos.get(jTable1.getSelectedRow()).getReservado());
        pr.setIdArt(listaArticulos.get(jTable1.getSelectedRow()).getId());
        pr.setSurtido(0);
        pr.setVale(jTextField22.getText());
        pr.setCantidadAlmacen(listaArticulos.get(jTable1.getSelectedRow()).getExistencia());
        
        double costoMasCinco = pr.getCosto() + (pr.getCosto() * CGlobalConfig.getUtilidad());
        costoMasCinco = costoMasCinco + (costoMasCinco * CGlobalConfig.getIvaVenta());
        if(pr.getPrecio() < costoMasCinco)
        {
            JOptionPane.showMessageDialog(null,"El precio de venta menos el iva es menor que el costo del artículo");
            return;
        }
        
        if(!listapr.isEmpty())
        {
            for(int i=0; i<listapr.size(); i++)
            {
                if(pr.getCodArt().equals(listapr.get(i).getCodArt()) &&
                   Double.compare(pr.getCosto(),listapr.get(i).getCosto()) == 0 &&
                   Double.compare(pr.getPrecio(),listapr.get(i).getPrecio())==0)     
                                        {
                    JOptionPane.showMessageDialog(null, "No se puede agregar el mismo artículo con el mismo precio y el mismo costo");
                    return;
                }
            }
        }
        total = total + (pr.getPrecio()*pr.getCantidad());
        listapr.add(pr);
        
            Vector<Object> unaFila = new Vector<Object>();
             unaFila.add(listapr.size());
             unaFila.add(pr.getCodArt());
             unaFila.add(pr.getDescripcion());
             unaFila.add(String.valueOf(pr.getCosto()));
             unaFila.add(String.valueOf(pr.getPrecio()));
             unaFila.add(String.valueOf(pr.getCantidad()));
             unaFila.add(String.valueOf(pr.getReservado()));
             unaFila.add(pr.getVale());
             vectorPartidas.add(unaFila);
             dtmPartidas = new DefaultTableModel(vectorPartidas,encabezadoPartidas) {

              @Override
              public boolean isCellEditable(int row, int column) {
              return false;
                }
              };
           
           jLabel31.setText(df.format(total));  
           jTable2.setModel(dtmPartidas);
           jTable2.getSelectionModel().setSelectionInterval(0, 0);
           
           jButton5.setEnabled(true);
           jButton9.setEnabled(false);
           jButton11.setEnabled(false);
           jButton10.setEnabled(false);
           jButton12.setEnabled(false);
           jButton6.setEnabled(false);
           jButton13.setEnabled(false);
           
           jLabel34.setText(String.valueOf(listapr.size()));
           
           
           
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:      
              String password;
              JPasswordField passwordField = new JPasswordField();
              Object[] obj = {"Por favor escriba la contraseña de algún administrador:\n\n", passwordField};
              Object stringArray[] = {"OK","Cancelar"};
               
               int opcion = JOptionPane.showOptionDialog(null, obj, "Contraseña requerida",
               JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, stringArray, obj); 
             
             if(opcion != JOptionPane.YES_OPTION)      
             return;
             else if(opcion == JOptionPane.YES_OPTION) //el usuario dio click en aceptar
             {
             password =  new String(passwordField.getPassword()); //se toma el campo de texto del joptionpane y se autentifica
             Autenticar autenticar = new Autenticar();
             if (!autenticar.validarPwdAdministracion(password))
             {
             if (!autenticar.validarPwdAlmacen(password))    
             {    
             JOptionPane.showMessageDialog(null, "Contraseña incorrecta");
             return;
             }
             }
             
             }
        
         if(jTable2.getSelectedRow() == -1)
        {
            JOptionPane.showMessageDialog(null,"Por favor seleccione una fila");
            return;
        }
        
        total = total - (listapr.get(jTable2.getSelectedRow()).getCantidad() * listapr.get(jTable2.getSelectedRow()).getPrecio());
        listapr.remove(jTable2.getSelectedRow());
        dtmPartidas.removeRow(jTable2.getSelectedRow());
        dtmPartidas.fireTableDataChanged();
        jLabel31.setText(df.format(total));  
        jLabel34.setText(String.valueOf(listapr.size()));
        
        jButton9.setEnabled(false);
        jButton11.setEnabled(false);
        jButton10.setEnabled(false);
        jButton12.setEnabled(false);
        jButton6.setEnabled(false);
        jButton13.setEnabled(false);
        
        jButton5.setEnabled(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        if(jComboBox1.getSelectedIndex() == -1)
            return;
        
        jTextField4.setText(listaclientes.get(jComboBox1.getSelectedIndex()).getNombre());        
        jTextField5.setText(listaclientes.get(jComboBox1.getSelectedIndex()).getRfc());        
        jTextField7.setText(String.valueOf(listaclientes.get(jComboBox1.getSelectedIndex()).getDiasCredito()));        
        jTextField8.setText(String.valueOf(listaclientes.get(jComboBox1.getSelectedIndex()).getSaldo()));        
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
            // TODO add your handling code here:
        
        ConexionWeb conexionweb = new ConexionWeb();
        String transaccion="";
        
        try{
        
        jButton5.setEnabled(false);
        
        
    //    if(listapr.isEmpty() || respaldopartidas.isEmpty())
   //     return;
        
        hKardex hkardex = new  hKardex();  
        hArticulos harticulos = new hArticulos();
        List<Articulos> articulos = new ArrayList<Articulos>();
        List<Partidasreservaciones> listatemporal = new ArrayList<Partidasreservaciones>();

        for(int e=0; e<listapr.size(); e++)
        {
            
            List<Articulos> validarArticulo = harticulos.consultaArticulos("codigo", "=", listapr.get(e).getCodArt());
            if((long)listapr.get(e).getCantidadAlmacen() != -1 && 
               Long.compare(validarArticulo.get(0).getExistencia(), (long)listapr.get(e).getCantidadAlmacen()) != 0)    
            {
            JOptionPane.showMessageDialog(null, "El artículo "+validarArticulo.get(0).getCodigo()+" ha sido utilizado en otra venta activa, \n"
                    + "por favor, elimine la partida que contiene este artículo y vuelva a buscarlo para actualizar la existencia");    
            return;
            }
            
            
            
        }
        
        
        
        if(listapr.size()>respaldopartidas.size())
        {
            
        for(int e=0; e<listapr.size(); e++)
        {
            listatemporal.add(listapr.get(e));
        }    
            
        int indpar = 0;
        while(indpar < listatemporal.size())
        {
          int indrespaldo=0;
          while(indrespaldo<respaldopartidas.size())
          {
           if(listatemporal.get(indpar).getCodArt().equals(respaldopartidas.get(indrespaldo).getCodArt()) &&
              Integer.compare(listatemporal.get(indpar).getCantidad(),respaldopartidas.get(indrespaldo).getCantidad()) == 0 &&
              Double.compare(listatemporal.get(indpar).getPrecio(),respaldopartidas.get(indrespaldo).getPrecio())==0)   
           {
               
               for(int u=0; u<listapr.size(); u++)
               {
                   if(listatemporal.get(indpar).getCodArt().equals(listapr.get(u).getCodArt()) &&
                   Integer.compare(listatemporal.get(indpar).getCantidad(),listapr.get(u).getCantidad()) == 0 &&
                   Double.compare(listatemporal.get(indpar).getPrecio(),listapr.get(u).getPrecio())==0)
                   listapr.remove(u);    
               }
               respaldopartidas.remove(indrespaldo);
           }
            indrespaldo++;
          }
            indpar++;
        }
        }else
        {
        int indpar = 0;
        for(int e=0; e<respaldopartidas.size(); e++)
        {
            listatemporal.add(respaldopartidas.get(e));
        }         
        while(indpar < listatemporal.size())
        {
          int indrespaldo=0;
          while(indrespaldo<listapr.size())
          {
           if(listatemporal.get(indpar).getCodArt().equals(listapr.get(indrespaldo).getCodArt()) &&
              Integer.compare(listatemporal.get(indpar).getCantidad(),listapr.get(indrespaldo).getCantidad()) == 0 &&
              Double.compare(listatemporal.get(indpar).getPrecio(),listapr.get(indrespaldo).getPrecio())==0)   
           {
               for(int u=0; u<respaldopartidas.size(); u++)
               {
                   if(listatemporal.get(indpar).getCodArt().equals(respaldopartidas.get(u).getCodArt()) &&
                   Integer.compare(listatemporal.get(indpar).getCantidad(),respaldopartidas.get(u).getCantidad()) == 0 &&
                   Double.compare(listatemporal.get(indpar).getPrecio(),respaldopartidas.get(u).getPrecio())==0)
                   respaldopartidas.remove(u);    
               }
               listapr.remove(indrespaldo);
           }
            indrespaldo++;
          }
            indpar++;
        }   
        }
            int eliminarp = 0;
       
       if(!CPrincipal.getConexion().crearTransaccion())
       return;
       
        if(CGlobalConfig.isWeb())
        transaccion = conexionweb.iniciarTransaccion() + " "; 
       
        while(eliminarp < respaldopartidas.size())
        {
          if(!CGlobalConfig.isWeb())  
          hpartidasreservacion.borrarPReservaciones("id", "=", String.valueOf(respaldopartidas.get(eliminarp).getId()));
          else
          transaccion = transaccion + hpartidasreservacion.crearQueryBorrarPReservaciones("id", "=", String.valueOf(respaldopartidas.get(eliminarp).getId())) + " ";    
          
          Kardex  kardex = hkardex.consultaUltimoRenglon("articulo", "=", respaldopartidas.get(eliminarp).getCodArt());
          
          listaArticulos = harticulos.consultaArticulos("codigo", "=", respaldopartidas.get(eliminarp).getCodArt());
           
           if(kardex == null)
           {
                    //Se registra la pieza en Kardex
                    kardex = new Kardex();
                    kardex.setAlmacenista("");
                    kardex.setAnticipos(listaArticulos.get(0).getAnticipos());
                    kardex.setArticulo(listaArticulos.get(0).getCodigo());
                    kardex.setEntrada(0);
                    kardex.setExistencias((int)listaArticulos.get(0).getExistencia());
                    kardex.setIdArticulo(listaArticulos.get(0).getId());
                    kardex.setModificacion("Registro");
                    kardex.setMovimiento("Registro de Artículo");
                    kardex.setNoMov("1");
                    kardex.setPrecioVenta(listaArticulos.get(0).getPrecioVenta());
                    kardex.setRefFerrari("Registro");
                    kardex.setReservados((int)listaArticulos.get(0).getReservado());
                    kardex.setResponsable("1");
                    kardex.setResponsable2("Registro Automático");
                    kardex.setSalida(0);
                    kardex.setUltimoCosto(listaArticulos.get(0).getUltimoCosto());
                    kardex.setVendidoEn(0.0);
                    
                if(!CGlobalConfig.isWeb())
                hkardex.guardarEnKardex(kardex); 
                else
                transaccion = transaccion + hkardex.crearQueryGuardarEnKardexCompleto(kardex) + " ";     
           }
           
           Kardex renglon = new Kardex();  

           int cantidadKardex = kardex.getExistencias() + respaldopartidas.get(eliminarp).getCantidad();
           renglon.setNoMov(String.valueOf(Long.valueOf(kardex.getNoMov())+1));
           renglon.setReservados(kardex.getReservados()-respaldopartidas.get(eliminarp).getCantidad());
           renglon.setAnticipos(kardex.getAnticipos());
           if(cantidadKardex < 0)
            cantidadKardex = 0;    
           renglon.setExistencias(cantidadKardex);
           renglon.setAlmacenista("");
           renglon.setEntrada(respaldopartidas.get(eliminarp).getCantidad());
           renglon.setArticulo(kardex.getArticulo());
           renglon.setIdArticulo(kardex.getIdArticulo());
           renglon.setModificacion("Devolución Reservación "+reser);
           renglon.setMovimiento("Dev. Reservación con Folio "+reser);
           renglon.setPrecioVenta(respaldopartidas.get(eliminarp).getPrecio());
           renglon.setRefFerrari("Siniestro "+jTextField10.getText());
           renglon.setResponsable(String.valueOf(CConfiguracion.getId()));
           renglon.setSalida(0);
           renglon.setUltimoCosto(respaldopartidas.get(eliminarp).getCosto());
           renglon.setResponsable2(CConfiguracion.getNombres()+" "+CConfiguracion.getApellidoP()+" "+CConfiguracion.getApellidoM());
           renglon.setVendidoEn(0.00);
           
           if(!CGlobalConfig.isWeb())
           hkardex.guardarEnKardex(renglon); 
           else
           transaccion = transaccion + hkardex.crearQueryGuardarEnKardexCompleto(renglon) + " ";    
            
           listaArticulos.get(0).setExistencia(listaArticulos.get(0).getExistencia()+respaldopartidas.get(eliminarp).getCantidad());
           listaArticulos.get(0).setReservado(listaArticulos.get(0).getReservado()-respaldopartidas.get(eliminarp).getCantidad());

           if(!CGlobalConfig.isWeb())
           harticulos.actualizarArticulos(listaArticulos.get(0),"codigo", "=", respaldopartidas.get(eliminarp).getCodArt());
           else
           transaccion = transaccion + harticulos.crearQueryActualizarArticulos(listaArticulos.get(0),"codigo", "=", respaldopartidas.get(eliminarp).getCodArt()) + " ";    
            
            eliminarp++;
        }
        
        
        
        int agregarp=0;
        while(agregarp < listapr.size())
        {
            listapr.get(agregarp).setCodRes(String.valueOf(reser)); 
            
           if(!CGlobalConfig.isWeb()) 
            hpartidasreservacion.guardarPReservaciones(listapr.get(agregarp));
           else
           transaccion = transaccion + hpartidasreservacion.crearQueryGuardarPReservaciones2(listapr.get(agregarp)) + " ";        
            
               Kardex  kardex = hkardex.consultaUltimoRenglon("articulo", "=", listapr.get(agregarp).getCodArt());
          
          listaArticulos = harticulos.consultaArticulos("codigo", "=", listapr.get(agregarp).getCodArt());
           
           if(kardex == null)
           {
                    //Se registra la pieza en Kardex
                    kardex = new Kardex();
                    kardex.setAlmacenista("");
                    kardex.setAnticipos(listaArticulos.get(0).getAnticipos());
                    kardex.setArticulo(listaArticulos.get(0).getCodigo());
                    kardex.setEntrada(0);
                    kardex.setExistencias((int)listaArticulos.get(0).getExistencia());
                    kardex.setIdArticulo(listaArticulos.get(0).getId());
                    kardex.setModificacion("Registro");
                    kardex.setMovimiento("Registro de Artículo");
                    kardex.setNoMov("1");
                    kardex.setPrecioVenta(listaArticulos.get(0).getPrecioVenta());
                    kardex.setRefFerrari("Registro");
                    kardex.setReservados((int)listaArticulos.get(0).getReservado());
                    kardex.setResponsable("1");
                    kardex.setResponsable2("Registro Automático");
                    kardex.setSalida(0);
                    kardex.setUltimoCosto(listaArticulos.get(0).getUltimoCosto());
                    kardex.setVendidoEn(0.0);
                    
                if(!CGlobalConfig.isWeb())
                hkardex.guardarEnKardex(kardex); 
                else
                transaccion = transaccion + hkardex.crearQueryGuardarEnKardexCompleto(kardex) + " ";     
           }
           
           Kardex renglon = new Kardex();  

           int cantidadKardex = kardex.getExistencias() - listapr.get(agregarp).getCantidad();
           renglon.setNoMov(String.valueOf(Long.valueOf(kardex.getNoMov())+1));
           renglon.setReservados(kardex.getReservados()+listapr.get(agregarp).getCantidad());
           renglon.setAnticipos(kardex.getAnticipos());
           if(cantidadKardex < 0)
            cantidadKardex = 0;    
           renglon.setExistencias(cantidadKardex);
           renglon.setAlmacenista("");
           renglon.setEntrada(0);
           renglon.setArticulo(kardex.getArticulo());
           renglon.setIdArticulo(kardex.getIdArticulo());
           renglon.setModificacion("Agregado a Reservación "+reser);
           renglon.setMovimiento("Agr. Reservación con Folio "+reser);
           renglon.setPrecioVenta(listapr.get(agregarp).getPrecio());
           renglon.setRefFerrari("Siniestro "+jTextField10.getText());
           renglon.setResponsable(String.valueOf(CConfiguracion.getId()));
           renglon.setSalida(listapr.get(agregarp).getCantidad());
           renglon.setUltimoCosto(listapr.get(agregarp).getCosto());
           renglon.setResponsable2(CConfiguracion.getNombres()+" "+CConfiguracion.getApellidoP()+" "+CConfiguracion.getApellidoM());
           renglon.setVendidoEn(0.00);
           
           if(!CGlobalConfig.isWeb())
           hkardex.guardarEnKardex(renglon); 
           else
           transaccion = transaccion + hkardex.crearQueryGuardarEnKardexCompleto(renglon) + " ";    
            
           listaArticulos.get(0).setExistencia(listaArticulos.get(0).getExistencia()-listapr.get(agregarp).getCantidad());
           listaArticulos.get(0).setReservado(listaArticulos.get(0).getReservado()+listapr.get(agregarp).getCantidad());
           
           if(!CGlobalConfig.isWeb())
           harticulos.actualizarArticulos(listaArticulos.get(0),"codigo", "=", listapr.get(agregarp).getCodArt());
           else
           transaccion = transaccion + harticulos.crearQueryActualizarArticulos(listaArticulos.get(0),"codigo", "=", listapr.get(agregarp).getCodArt()) + " ";    
           
            agregarp++;
        }
        CPrincipal.getConexion().finalizarTransaccion();
        
        if(CGlobalConfig.isWeb())
               {
               transaccion = transaccion + conexionweb.finalizarTransaccion();    
               conexionweb.escribirEnWeb(transaccion);
               }
        
        // listapr.get(indpar).setVale(jTextField22.getText());
        //    hpartidasreservacion.guardarPReservaciones(listapr.get(indpar));
        //   
        jButton6.setEnabled(false);
        jButton5.setEnabled(false);
        JOptionPane.showMessageDialog(null,"Partidas Guardadas!");
        
          } catch(Exception e)
        {
            CPrincipal.getConexion().cancelarTransaccion();
            e.printStackTrace();            
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        jButton6.setEnabled(false);
        int it1 = 0;
        List<Partidas> listapar = new ArrayList<Partidas>();
        while(it1 < listapr.size())
        {
            listapr.get(it1).setSurtido(1);
            hpartidasreservacion.actualizarPReservaciones(listapr.get(it1), "id", "=", String.valueOf(listapr.get(it1).getId()));
            Partidas partida1 = new Partidas();
            partida1.setDescripcionArticulo(listapr.get(it1).getDescripcion());
            partida1.setCantidad(listapr.get(it1).getCantidad());
            partida1.setCodigoArticulo(listapr.get(it1).getCodArt());
            listapar.add(partida1);
            
            it1++;
        }        
        
        hCuentasPorCobrar hcc = new hCuentasPorCobrar();   
        
                  try
        {        
        String titulo = "RESERVACIÓN "+jTextField1.getText();    
        ImpresionPedidoReservacion ip = new ImpresionPedidoReservacion();
        ip.inicializar(String.valueOf(0), String.valueOf(listapr.size()), autenticar.getUsuariogeneral().getNombres() + " "+ autenticar.getUsuariogeneral().getApellidoP() + " " + autenticar.getUsuariogeneral().getApellidoM(),
                hcc.generarFecha().substring(0, 19), listapar,titulo);
        PrinterJob job = PrinterJob.getPrinterJob();
       // job.setPrintable(ip);
        // PageFormat format = job.pageDialog(job.defaultPage());
        PageFormat format = new PageFormat();
        
        
        Paper p = new Paper();
        
        p.setSize(CGlobalConfig.getAnchoImp(),CGlobalConfig.getAltoImp());
        p.setImageableArea(CGlobalConfig.getxImp(),CGlobalConfig.getyImp(),CGlobalConfig.getAnchoImp(),CGlobalConfig.getAltoImp());
        format.setPaper(p);

        job.setPageable(new PageableText(ip.generarCadenaImpresion(), format));
        
        if (job.printDialog())
            job.print();
        } catch (IOException ex) {
            Logger.getLogger(VActualiza_Reservacion.class.getName()).log(Level.SEVERE, null, ex);
        }catch (PrinterException ex) {
            Logger.getLogger(ImpresionVenta.class.getName()).log(Level.SEVERE, null, ex);
        }   
        jButton5.setEnabled(false);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
        jButton1.doClick();
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jPasswordField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPasswordField1ActionPerformed
        // TODO add your handling code here:
        jButton1.doClick();
    }//GEN-LAST:event_jPasswordField1ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
            if(!listaclientes.isEmpty())
        {
            listaclientes.clear();
            jComboBox1.removeAllItems();
        }
        
        listaclientes = hclientes.consultaClientes("nombre","LIKE",jTextField25.getText());
           
        if(!listaclientes.isEmpty())
        {
        
           int indprov = 0;
           while(indprov < listaclientes.size()) 
           {
               jComboBox1.addItem(listaclientes.get(indprov).getNombre());
               indprov++;
           }
         
           
           
        }  
        
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jTextField25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField25ActionPerformed
        // TODO add your handling code here:
        jButton8.doClick();
    }//GEN-LAST:event_jTextField25ActionPerformed

    private void jTextField23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField23ActionPerformed
        // TODO add your handling code here:
        jButton2.doClick();
    }//GEN-LAST:event_jTextField23ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        if(jTable2.getSelectedRow() == -1)
        {
            JOptionPane.showMessageDialog(null,"Por favor seleccione una fila");
            return;
        }
        
       if(!Validadores.validarDoble("Modificar Costo", jTextField26.getText()))
       {
           return;
       }
       
        
       double validacion = listapr.get(jTable2.getSelectedRow()).getCosto() + (listapr.get(jTable2.getSelectedRow()).getCosto() * CGlobalConfig.getUtilidad());
       validacion = validacion + (validacion * CGlobalConfig.getIvaVenta());
       if(Double.valueOf(jTextField26.getText()) < validacion)  
       {
           JOptionPane.showMessageDialog(null, "Este precio de venta sin iva es menor al precio de compra");
           return;
        }
        
       int eleccion =  JOptionPane.showConfirmDialog(null, "¿Está seguro de querer modificar el precio de esta reservación?");
       if(eleccion == JOptionPane.YES_OPTION)
       {   
           double nuevoPrecio = Double.valueOf(jTextField26.getText());
           total = total - (listapr.get(jTable2.getSelectedRow()).getCantidad() * listapr.get(jTable2.getSelectedRow()).getPrecio());          
           
           listapr.get(jTable2.getSelectedRow()).setPrecio(nuevoPrecio);
           
           try
           {
           if(listapr.get(jTable2.getSelectedRow()).getId() > 0)
           hpartidasreservacion.actualizarPReservaciones(listapr.get(jTable2.getSelectedRow()), "id", "=", String.valueOf(listapr.get(jTable2.getSelectedRow()).getId()));
           }catch(NullPointerException e){System.out.println("id nulo");}
           
           total = total + (listapr.get(jTable2.getSelectedRow()).getCantidad() * nuevoPrecio);
           dtmPartidas.setValueAt(df.format(nuevoPrecio), jTable2.getSelectedRow(), 4);
           dtmPartidas.fireTableDataChanged();
           
           jTable2.getSelectionModel().setSelectionInterval(0, 0);
           jLabel31.setText(df.format(total)); 
           
       }else return;
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        jButton10.setEnabled(false);
        
         if(listaclientes.isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Usted no ha seleccionado a ningún cliente");
            return;
        }
        
        Reservaciones reservacion = new Reservaciones();
        reservacion.setAsegurado(jTextField18.getText());
        reservacion.setCancelada(0);
        reservacion.setCodcliente(String.valueOf(listaclientes.get(jComboBox1.getSelectedIndex()).getId()));
        reservacion.setCodigo((long)0);
        reservacion.setCodventa((long)0);
        reservacion.setColor(jTextField21.getText());
        reservacion.setDevolucion(0);
        reservacion.setFacturada(0);
        reservacion.setFecha(jTextField2.getText());
        reservacion.setFechaDevol("0000-00-00");
        reservacion.setMarca(jTextField12.getText());
        reservacion.setModelo(jTextField17.getText());
        reservacion.setNomCli(jTextField4.getText());
        reservacion.setObsCancel("");
        reservacion.setPlacas(jTextField16.getText());
        reservacion.setPoliza(jTextField20.getText());
        reservacion.setPuertas(jTextField19.getText());
        reservacion.setSerie(jTextField13.getText());
        reservacion.setSiniestro(jTextField10.getText());
        reservacion.setSolicito(jTextField6.getText());
        reservacion.setTaller(jTextField11.getText());
        reservacion.setTipoAuto(jTextField15.getText());
        reservacion.setNomotor(jTextField14.getText());
        reservacion.setObservaciones(jTextField9.getText());
        reservacion.setNovale(jTextField22.getText());
        
        hreservaciones.actualizarReservaciones(reservacion, "id", "=", String.valueOf(reser));
        JOptionPane.showMessageDialog(null,"Reservación Guardada!");
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
                // TODO add your handling code here:
        if(jTable2.getSelectedRow() == -1)
        {
            JOptionPane.showMessageDialog(null,"Por favor seleccione una fila");
            return;
        }

           listapr.get(jTable2.getSelectedRow()).setVale(jTextField27.getText());
           
           try
           {
           if(listapr.get(jTable2.getSelectedRow()).getId() > 0)
           hpartidasreservacion.actualizarPReservaciones(listapr.get(jTable2.getSelectedRow()), "id", "=", String.valueOf(listapr.get(jTable2.getSelectedRow()).getId()));
           }catch(NullPointerException e){System.out.println("id nulo");}
           
           dtmPartidas.setValueAt(jTextField27.getText(), jTable2.getSelectedRow(), 7);
           dtmPartidas.fireTableDataChanged();
           
           jTable2.getSelectionModel().setSelectionInterval(0, 0);
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
                // TODO add your handling code here:
        ConexionWeb conexionweb = new ConexionWeb();
        String transaccion="";
        
        if(jCheckBox1.isSelected())
        {
            JOptionPane.showMessageDialog(null, "Esta reservación ya ha sido facturada!");
            return;
        }
        
                      Calendar cal = Calendar.getInstance(); // will be equal to now  
                       cal.add(Calendar.DAY_OF_YEAR, listaclientes.get(jComboBox1.getSelectedIndex()).getDiasCredito() );  
            long milisec = cal.getTimeInMillis();  
            Timestamp time= new Timestamp(milisec);    
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
            String fecha = sdf.format(time);  
            
        int numPartidas = 0;
        int numArticulos = 0;
        double numSubtotal = 0.0;
        double numTotal = 0.0;
        
        int it1 = 0;
        while(it1 < listapr.size())
        {
            numArticulos = numArticulos + listapr.get(it1).getCantidad();
            numSubtotal = numSubtotal + listapr.get(it1).getPrecio();
            numTotal = numTotal + (listapr.get(it1).getPrecio() * listapr.get(it1).getCantidad());
            it1++;
        }
         numPartidas = listapr.size();
        
 //       hVentaReservaciones hvr = new hVentaReservaciones();
 //       hPartidasVReservaciones hpvr = new hPartidasVReservaciones();
        
//        Ventareservacion vr = new Ventareservacion();
//        Partidasventareservacion pvr = new Partidasventareservacion();
  
        
    
        

        
         VConfirmaVenta vconfirmaventa = new VConfirmaVenta((JFrame)Window.getWindows()[0],true);
         vconfirmaventa.setArticulos(numArticulos);
         vconfirmaventa.setPartidas(numPartidas);
         vconfirmaventa.setSubtotal(numSubtotal);
         vconfirmaventa.setTotal(numTotal);
         Usuarios user = new Usuarios();
         user.setApellidoM(CConfiguracion.getApellidoM());
         user.setApellidoP(CConfiguracion.getApellidoP());
         user.setContrasena(CConfiguracion.getContrasena());
         user.setCorreo(CConfiguracion.getCorreo());
         user.setFoto(CConfiguracion.getFoto());
         user.setId(CConfiguracion.getId());
         user.setNombres(CConfiguracion.getNombres());
         user.setPuesto(CConfiguracion.getPuesto());
         vconfirmaventa.setUser(user);
         vconfirmaventa.setCliente(listaclientes.get(jComboBox1.getSelectedIndex()).getNombre());
         vconfirmaventa.setUsuario(user.getNombres()+" "+user.getApellidoP()
                 +" "+user.getApellidoM());
         vconfirmaventa.inicializa();
         vconfirmaventa.setLocationRelativeTo(null);
         vconfirmaventa.setVisible(true);
         
         if(vconfirmaventa.isExito())
         {
         
        
        Ventas v = new Ventas();
        hVentas hv = new hVentas();
        Partidas p = new Partidas();
        hPartidas hp = new hPartidas();
        int numVenta = 0;
        
        double iva = 0.0;
        double subtotal = 0.0;
        double total = 0.0;
        
        //caso público en general

        if(listaclientes.get(jComboBox1.getSelectedIndex()).getNombre().equalsIgnoreCase("Público en general"))
        {
            iva = 0;
            subtotal = numSubtotal;
            total = numTotal;
        }
        //caso cliente con RFC
        else
        {
            subtotal = numTotal / 1.16;
            iva = numTotal - subtotal;
            total = subtotal + iva;    
        }   

        List<Ventas> revisarVenta = hv.consultaReservacion(String.valueOf(reser));
        hArticulos harticulos = new hArticulos();
        List<Articulos> articulos = new ArrayList<Articulos>();
        
        if(revisarVenta.isEmpty())
        {
        v.setArticulos(numArticulos);
        v.setEstado("Vivo");
        v.setIdadministrador((long)-1); //poner el id de Zita
        v.setIdcliente(listaclientes.get(jComboBox1.getSelectedIndex()).getId());
        if(vconfirmaventa.getUser()==null) //si no hay un objeto en vconfirmaventa se toma el de aquél que abrio el sistema
        v.setIdusuario(CConfiguracion.getId());
        else
        v.setIdusuario(vconfirmaventa.getUser().getId());   
        v.setIva(0);
        v.setObservaciones("Reservación "+reser);
        v.setPartidas(numPartidas);
        v.setSubtotal(numSubtotal);
        v.setTipoDeVenta("Reservación");
        v.setTotal(numTotal);
        v.setVale(String.valueOf(reser));
        
        if(CGlobalConfig.isWeb())
        transaccion = conexionweb.iniciarTransaccion() + " "; 
        
        if(!CGlobalConfig.isWeb())
        numVenta = hv.guardarVentas(v);
        else
        {
        transaccion = transaccion +  hv.crearQueryGuardar(v) + " ";   
        transaccion = transaccion + conexionweb.ultimoId() + " ";
        }
        
        int it2 = 0;
        while(it2 < listapr.size())
        {
        p.setBeneficio(0.0);
        p.setCantidad(listapr.get(it2).getCantidad());
        p.setCodigoArticulo(listapr.get(it2).getCodArt());
        p.setConBeneficio(listapr.get(it2).getPrecio());
        p.setDescripcionArticulo(listapr.get(it2).getDescripcion());
        p.setIdVenta((long)numVenta);
        p.setPrecioCompra(listapr.get(it2).getCosto());
        p.setPrecioVenta(listapr.get(it2).getPrecio());
        p.setSubtotal(listapr.get(it2).getPrecio() * listapr.get(it2).getCantidad());
        p.setTipoBeneficio("Sin Beneficio");
        p.setUbicacion("Reservaciones");    
        p.setIdArticulo(listapr.get(it2).getIdArt());
        
        articulos = harticulos.consultaArticulos("codigo", "=", listapr.get(it2).getCodArt());
        
       hKardex hkardex = new  hKardex();
       Kardex kardex = hkardex.consultaUltimoRenglon("articulo", "=", listapr.get(it2).getCodArt());
           
           if(kardex == null)
           {
                    //Se registra la pieza en Kardex
                    kardex = new Kardex();
                    kardex.setAlmacenista("");
                    kardex.setAnticipos(articulos.get(0).getAnticipos());
                    kardex.setArticulo(articulos.get(0).getCodigo());
                    kardex.setEntrada(0);
                    kardex.setExistencias((int)articulos.get(0).getExistencia());
                    kardex.setIdArticulo(articulos.get(0).getId());
                    kardex.setModificacion("Registro");
                    kardex.setMovimiento("Registro de Artículo");
                    kardex.setNoMov("1");
                    kardex.setPrecioVenta(articulos.get(0).getPrecioVenta());
                    kardex.setRefFerrari("Registro");
                    kardex.setReservados((int)articulos.get(0).getReservado());
                    kardex.setResponsable("1");
                    kardex.setResponsable2("Registro Automático");
                    kardex.setSalida(0);
                    kardex.setUltimoCosto(articulos.get(0).getUltimoCosto());
                    kardex.setVendidoEn(0.0);
                    
                if(!CGlobalConfig.isWeb())
                hkardex.guardarEnKardex(kardex); 
                else
                transaccion = transaccion + hkardex.crearQueryGuardarEnKardexCompleto(kardex) + " ";     
           }
           
           Kardex renglon = new Kardex();  

           int cantidadKardex = kardex.getReservados() - listapr.get(it2).getCantidad();
           renglon.setNoMov(String.valueOf(Long.valueOf(kardex.getNoMov())+1));
           if(cantidadKardex < 0)
           cantidadKardex = 0;    
           renglon.setReservados(cantidadKardex);
           renglon.setAnticipos(kardex.getAnticipos());
           renglon.setExistencias(kardex.getExistencias());
           renglon.setAlmacenista("");
           renglon.setEntrada(0);
           renglon.setArticulo(kardex.getArticulo());
           renglon.setIdArticulo(kardex.getIdArticulo());
           
           if(!CGlobalConfig.isWeb())
           renglon.setModificacion("Reservación con Referencia "+jTextField22.getText());
           else
           renglon.setModificacion("\'Reservación con Referencia "+jTextField22.getText()+"\'");
        
           if(!CGlobalConfig.isWeb())
           renglon.setMovimiento("V. Reservación con Folio "+numVenta);
           else
           renglon.setMovimiento("concat_ws(\'\', \'V. Reservación con Folio \',@ultimo_id)");
           
           renglon.setPrecioVenta(listapr.get(it2).getPrecio());
           
           if(!CGlobalConfig.isWeb())
           renglon.setRefFerrari("Reservación "+reser);
           else
           renglon.setRefFerrari("\'Reservación "+reser+"\'");    
               
           renglon.setResponsable(String.valueOf(CConfiguracion.getId()));
           renglon.setSalida(listapr.get(it2).getCantidad());
           renglon.setUltimoCosto(listapr.get(it2).getCosto());
           renglon.setResponsable2(CConfiguracion.getNombres()+" "+CConfiguracion.getApellidoP()+" "+CConfiguracion.getApellidoM());
           renglon.setVendidoEn(listapr.get(it2).getPrecio());
           
        if(!CGlobalConfig.isWeb())
        hkardex.guardarEnKardex(renglon); 
        else
        transaccion = transaccion + hkardex.crearQueryGuardarEnKardex(renglon) + " ";  
        
        articulos.get(0).setReservado(articulos.get(0).getReservado() - listapr.get(it2).getCantidad());
        
        if(!CGlobalConfig.isWeb())
        harticulos.actualizarArticulos(articulos.get(0), "codigo", "=", listapr.get(it2).getCodArt());
        else
        transaccion = transaccion + harticulos.crearQueryActualizarArticulos(articulos.get(0), "codigo", "=", listapr.get(it2).getCodArt()) + " ";
        
        if(!CGlobalConfig.isWeb())
        hp.guardarPartidas(p);
        else
        transaccion = transaccion + hp.crearQueryGuardarPartidas(p) + " ";
            
           it2++;          
        }
        
        hCuentasPorCobrar hcc = new hCuentasPorCobrar();
        Cuentasporcobrar cc = new Cuentasporcobrar();
        
        
        
        cc.setFechaVencimiento(fecha.substring(0, 10));
        if(!CGlobalConfig.isWeb())
        cc.setObservacion("Reservación con Folio "+reser);
        else
        cc.setObservacion("\'Reservación con Folio "+reser+"\'");
        cc.setPagado(0);
        cc.setSaldo(total);
        if(!CGlobalConfig.isWeb())
        cc.setTipo("RE"+numVenta);
        else
        cc.setTipo("concat_ws(\'\', \'RE\',@ultimo_id)");    
        cc.setVenta(String.valueOf(numVenta));
        cc.setCliente(listaclientes.get(jComboBox1.getSelectedIndex()).getId());
        cc.setFactura((long)-1);
        
        if(!CGlobalConfig.isWeb())
        hcc.guardarCtaPorCobrar(cc);        
        else
        transaccion = transaccion + hcc.crearQueryGuardarCtaPorCobrar(cc) + " ";   
        
         if(CGlobalConfig.isWeb())
               {
               transaccion = transaccion + conexionweb.finalizarTransaccion();    
               conexionweb.escribirEnWeb(transaccion);
               Ventas ultimaventa = hv.consultaUltimaVenta("idusuario", "=", String.valueOf(v.getIdusuario()));
               numVenta = ultimaventa.getId().intValue();
               }
            
        }else
        {
         numVenta = revisarVenta.get(0).getId().intValue();   
        }
        
 /*       vr.setCliente(listaclientes.get(jComboBox1.getSelectedIndex()).getId());
        vr.setDevolucion(0);
        vr.setDiasCredito(listaclientes.get(jComboBox1.getSelectedIndex()).getDiasCredito());
        vr.setFacturada(0);
        vr.setFechaCobrar(fecha.substring(0, 10));
        vr.setFechaDevolucion("0000-00-00");
        vr.setImporte(numTotal);
        vr.setIva(numTotal * CGlobalConfig.getIvaVenta());
        vr.setTipoPago("Reservación "+reser+" Venta "+numVenta);
        if(vconfirmaventa.getUser()==null) //si no hay un objeto en vconfirmaventa se toma el de aquél que abrio el sistema
        vr.setVendedor(CConfiguracion.getId());
        else
        vr.setVendedor(vconfirmaventa.getUser().getId()); 
        int vreser = hvr.guardarvReervaciones(vr);
        
        
        int it0 = 0;
        while(it0<listapr.size())
        {
        pvr.setCantidad(listapr.get(it0).getCantidad());
        pvr.setCodArticulo(listapr.get(it0).getCodArt());
        pvr.setPrecio(listapr.get(it0).getPrecio());
        pvr.setNumeroVenta(vreser);
        hpvr.guardarPVReservaciones(pvr);
        it0++;
        } */
        
       

        Numero_a_Letra numeroaletra = new Numero_a_Letra();
        Factura ventafactura = new Factura();
        
        hFacturasCFDI hfacturas = new hFacturasCFDI();
        Factura revision = hfacturas.consultaUltimaFactura("idConceptoFactura", "=", "RE"+numVenta);
        if(revision != null && revision.getCadenaCompleta() != null)
        {
            int eleccion = JOptionPane.showConfirmDialog(null, "Esta venta ya ha sido facturada, por favor revise RE"+numVenta+" en el catálogo de facturas \n"
                                                + "¿Desea proseguir?");
            if(eleccion != JOptionPane.YES_OPTION)
            return;
        }
        
        
        ventafactura.setFormaDePago("transferencia");
        ventafactura.setSubtotal(df.format(subtotal));
        ventafactura.setImpuesto(df.format(iva));
        ventafactura.setTotal(df.format(total));
        ventafactura.setIdConceptoFactura("RE"+numVenta);
        if(revisarVenta.isEmpty())
        {
        ventafactura.setTotalLetra(numeroaletra.Convertir(df.format(v.getTotal()), true));
        ventafactura.setIdReceptorF(v.getIdcliente().intValue());
        }
         else
        {
        ventafactura.setTotalLetra(numeroaletra.Convertir(df.format(revisarVenta.get(0).getTotal()), true));
        ventafactura.setIdReceptorF(revisarVenta.get(0).getIdcliente().intValue());           
         }          
        
        ventafactura.setMotivo("Reservación con Folio "+reser);
        ventafactura.setMovimiento("Reservacion");
        ventafactura.setNumMovimiento(String.valueOf(reser));
        
        VDetalle_FacturaCFDI factura = new VDetalle_FacturaCFDI(ventafactura,"reservacion",String.valueOf(reser));
        int indice = ((JTabbedPane) getParent().getParent().getParent()).getSelectedIndex();
        indice += 1;
        ((JTabbedPane) getParent().getParent().getParent()).add(new JScrollPane(factura), indice);
        ((JTabbedPane) getParent().getParent().getParent()).setTabComponentAt(indice, new botonCierre("Factura", indice));
        
        if(revisarVenta.isEmpty())
        {
        JOptionPane.showMessageDialog(null, "Se ha generado la venta con Folio "+numVenta);   
        }
         }
         
        jButton5.setEnabled(false);
        jButton10.setEnabled(false);
        
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
                // TODO add your handling code here:
        if(jTable2.getSelectedRow() == -1)
        {
            JOptionPane.showMessageDialog(null,"Por favor seleccione una fila");
            return;
        }
        
        int eleccion = JOptionPane.showConfirmDialog(null, "¿Desea cambiar la descripción de esta reservación?");
        if(eleccion == JOptionPane.YES_OPTION)
        {
           listapr.get(jTable2.getSelectedRow()).setDescripcion(jTextField28.getText());
           
           try
           {
           if(listapr.get(jTable2.getSelectedRow()).getId() > 0)
           hpartidasreservacion.actualizarPReservaciones(listapr.get(jTable2.getSelectedRow()), "id", "=", String.valueOf(listapr.get(jTable2.getSelectedRow()).getId()));
           }catch(NullPointerException e){System.out.println("id nulo");}
           
           dtmPartidas.setValueAt(jTextField28.getText(), jTable2.getSelectedRow(), 2);
           dtmPartidas.fireTableDataChanged();
           
           jTable2.getSelectionModel().setSelectionInterval(0, 0);
        }
    }//GEN-LAST:event_jButton13ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    public static javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JTextField jTextField17;
    private javax.swing.JTextField jTextField18;
    private javax.swing.JTextField jTextField19;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField20;
    private javax.swing.JTextField jTextField21;
    private javax.swing.JTextField jTextField22;
    private javax.swing.JTextField jTextField23;
    private javax.swing.JTextField jTextField24;
    private javax.swing.JTextField jTextField25;
    private javax.swing.JTextField jTextField26;
    private javax.swing.JTextField jTextField27;
    private javax.swing.JTextField jTextField28;
    private javax.swing.JTextField jTextField29;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables
    Autenticar autenticar;
    hArticulos articulos;
    List<Articulos> listaArticulos;
    List<Partidasreservaciones> listapr;
    List<Partidasreservaciones> respaldopartidas;
    Vector vector,vectorPartidas;
    hAlmacendevoluciones halmacendevoluciones;
    DefaultTableModel dtm,dtmPartidas;
    Vector<String> encabezadoArticulos,encabezadoPartidas;
    hClientes hclientes;
    List<Clientes> listaclientes;
    hReservaciones hreservaciones;
    hPartidasReservaciones hpartidasreservacion;
    Long reser = (long)0;
    DecimalFormat df;
    String nombreUsuario = "";
    Long idUsuario=(long)0;
    double total = 0;
    
    private void inicializar(Reservaciones reservacion) {
    df = new DecimalFormat("0.00");    
    reser = reservacion.getId();    
    autenticar = new Autenticar();
    articulos = new hArticulos();
    listaArticulos = new ArrayList<Articulos>();
    halmacendevoluciones = new hAlmacendevoluciones();
    hreservaciones = new hReservaciones();
    jButton1.setEnabled(CConfiguracion.isActualizarReservaciones());
    
        encabezadoArticulos = new Vector<String>();
        encabezadoArticulos.add("Código");
        encabezadoArticulos.add("Descripción");
        encabezadoArticulos.add("Compra");
        encabezadoArticulos.add("Venta");
        encabezadoArticulos.add("Existencia");
        encabezadoArticulos.add("En A. Devoluciones");
        encabezadoArticulos.add("Reservados");
        
        
        vector = new Vector();
        dtm = new DefaultTableModel(vector,encabezadoArticulos) {

              @Override
              public boolean isCellEditable(int row, int column) {
              return false;
                }
              };

           jTable1.setModel(dtm);
           
        encabezadoPartidas = new Vector<String>();
        encabezadoPartidas.add("N");
        encabezadoPartidas.add("Código");
        encabezadoPartidas.add("Descripción");
        encabezadoPartidas.add("Compra");
        encabezadoPartidas.add("Venta");
        encabezadoPartidas.add("Cantidad a Reservar");
        encabezadoPartidas.add("Reservados");
        encabezadoPartidas.add(CGlobalConfig.getCampor13());
        vectorPartidas = new Vector();
        dtmPartidas = new DefaultTableModel(vectorPartidas,encabezadoPartidas) {

              @Override
              public boolean isCellEditable(int row, int column) {
              return false;
                }
              };

           jTable2.setModel(dtmPartidas);   
           listapr = new ArrayList<Partidasreservaciones>();
           respaldopartidas = new ArrayList<Partidasreservaciones>();
         hclientes = new hClientes();
         listaclientes = new ArrayList<Clientes>();
         listaclientes = hclientes.consultaClientes("","*","");
         
         int lc = 0;
         while(lc<listaclientes.size())
         {
             jComboBox1.addItem(listaclientes.get(lc).getNombre());
             lc++;
         }
            
            java.util.Date utilDate = new java.util.Date();
            long milisec = utilDate.getTime();
            Timestamp time= new Timestamp(milisec);    
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ");
            String fecha = sdf.format(time);  
            jTextField2.setText(fecha.substring(0, 19));
                      

            jTextField1.setText(String.valueOf(reservacion.getId()));
    
            hpartidasreservacion = new hPartidasReservaciones();
        
        int indcliente = 0;
        while(indcliente < listaclientes.size())
        {
            if(reservacion.getCodcliente().compareTo(String.valueOf(listaclientes.get(indcliente).getId()))==0)
            {
            jComboBox1.setSelectedIndex(indcliente);  
            }
            indcliente++;
        }
        
        jTextField18.setText(reservacion.getAsegurado());
        jTextField21.setText(reservacion.getColor());
        jTextField2.setText(reservacion.getFecha());
        jTextField12.setText(reservacion.getMarca());
        jTextField17.setText(reservacion.getModelo());
        jTextField4.setText(reservacion.getNomCli());
        jTextField16.setText(reservacion.getPlacas());
        jTextField20.setText(reservacion.getPoliza());
        jTextField19.setText(String.valueOf(reservacion.getPuertas()));
        jTextField13.setText(reservacion.getSerie());
        jTextField10.setText(reservacion.getSiniestro());
        jTextField6.setText(reservacion.getSolicito());
        jTextField11.setText(reservacion.getTaller());
        jTextField15.setText(reservacion.getTipoAuto());
        jTextField9.setText(reservacion.getObservaciones());
        jTextField22.setText(reservacion.getNovale());
        jTextField14.setText(reservacion.getNomotor());
        
        if(reservacion.getFacturada() == 1)
        {
        jCheckBox1.setSelected(true);   
        jButton10.setEnabled(false);
        jButton12.setEnabled(false);
        jButton6.setEnabled(false);
        jButton5.setEnabled(false);
        jButton3.setEnabled(false);
        jButton4.setEnabled(false);
        }
        hVentas hventas = new hVentas();
        List<Ventas> lven = hventas.consultaReservacion(String.valueOf(reser));
        if(!lven.isEmpty())
        {   
        jButton10.setEnabled(false);
        jButton12.setEnabled(false);
        jButton6.setEnabled(false);
        jButton5.setEnabled(false);
        jButton3.setEnabled(false);
        jButton4.setEnabled(false);
        }
        
        
        listapr = hpartidasreservacion.consultaPReservaciones("codRes", "=", String.valueOf(reservacion.getId()));
        int indpartidas = 0;
        while(indpartidas<listapr.size())
        {
            listapr.get(indpartidas).setCantidadAlmacen(-1);
            respaldopartidas.add(listapr.get(indpartidas));
            Vector<Object> unaFila = new Vector<Object>();
             unaFila.add(indpartidas+1);
             unaFila.add( listapr.get(indpartidas).getCodArt());
             unaFila.add( listapr.get(indpartidas).getDescripcion());
             unaFila.add(String.valueOf(listapr.get(indpartidas).getCosto()));
             unaFila.add(String.valueOf(listapr.get(indpartidas).getPrecio()));
             unaFila.add(String.valueOf(listapr.get(indpartidas).getCantidad()));
             unaFila.add(String.valueOf(listapr.get(indpartidas).getReservado()));
             unaFila.add( listapr.get(indpartidas).getVale());
             vectorPartidas.add(unaFila);
            total = total + (listapr.get(indpartidas).getCantidad() * listapr.get(indpartidas).getPrecio());
            indpartidas++;
        }
        
              dtmPartidas = new DefaultTableModel(vectorPartidas,encabezadoPartidas) {

              @Override
              public boolean isCellEditable(int row, int column) {
              return false;
                }
              };
            
           jTable2.setModel(dtmPartidas);
           jTable2.getSelectionModel().setSelectionInterval(0, 0);
           jLabel31.setText(df.format(total));
           
           jTable1.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent e) {   
            
                if(jTable1.getSelectedRow() == -1)
                    return;
                
        if(jTextField29.getText().isEmpty())
        {
         JOptionPane.showMessageDialog(null,"El campo utilidad está vacío");   
        }
            
        if(!Validadores.validarEntero("Utilidad", jTextField29.getText()))
        {
         return;   
        }
                
                if(!listaArticulos.isEmpty())
                {
                    jTextField26.setText(df.format(listaArticulos.get(jTable1.getSelectedRow()).getPrecioCompra() 
                            + (listaArticulos.get(jTable1.getSelectedRow()).getPrecioCompra() * (Double.valueOf(jTextField29.getText()) / 100))));
                }
            
            }
        });
           
         jTable2.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent e) {   
            
                if(jTable2.getSelectedRow() == -1)
                    return;
                
                if(!listapr.isEmpty())
                {
                    jTextField26.setText(df.format(listapr.get(jTable2.getSelectedRow()).getPrecio()));
                    jTextField27.setText(listapr.get(jTable2.getSelectedRow()).getVale());
                    jTextField28.setText(listapr.get(jTable2.getSelectedRow()).getDescripcion());
                }
            
            }
        });
         
         if(!listapr.isEmpty())
         {
         jTextField26.setText(df.format(listapr.get(0).getPrecio()));
         jTextField27.setText(listapr.get(0).getVale());
         jTextField28.setText(listapr.get(0).getDescripcion());         
         }
         
         jLabel34.setText(String.valueOf(listapr.size()));
         
            jLabel11.setText(CGlobalConfig.getCampor1());
            jLabel12.setText(CGlobalConfig.getCampor2());
            jLabel13.setText(CGlobalConfig.getCampor3());
            jLabel14.setText(CGlobalConfig.getCampor4());
            
            jLabel16.setText(CGlobalConfig.getCampor5());
            jLabel17.setText(CGlobalConfig.getCampor6());
            jLabel18.setText(CGlobalConfig.getCampor7());
            jLabel19.setText(CGlobalConfig.getCampor8());
            
            jLabel20.setText(CGlobalConfig.getCampor9());
            jLabel21.setText(CGlobalConfig.getCampor10());
            jLabel22.setText(CGlobalConfig.getCampor11());
            jLabel23.setText(CGlobalConfig.getCampor12());
            
            jLabel24.setText(CGlobalConfig.getCampor13());
            jLabel35.setText(CGlobalConfig.getCampor13());
            jButton11.setText("Modificar "+CGlobalConfig.getCampor13());
    }
}
