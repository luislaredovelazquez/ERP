/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FAlta_Articulos.java
 *
 * Created on 21/03/2012, 11:41:42 AM
 */

package com.paedeias.vistas;

import com.paedeias.controladores.CConfiguracion;
import com.paedeias.controladores.CGlobalConfig;
import com.paedeias.controladores.CPrincipal;
import com.paedeias.helpers.*;
import com.paedeias.identidades.*;
import java.awt.Window;
import java.awt.event.ActionEvent;
import java.awt.event.MouseEvent;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import java.awt.BorderLayout;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.awt.event.ActionListener;
import java.awt.event.MouseListener;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author Luis
 */
public class VActualiza_Articulo extends javax.swing.JPanel {

    /** Creates new form FAlta_Articulos */
    public VActualiza_Articulo(Articulos a) {
        this.a = a;
        initComponents();
        inicializar();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        list1 = new javax.swing.JList();
        jButton1 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jTextField14 = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        list2 = new javax.swing.JList();
        jButton2 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jTextField17 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jTextField18 = new javax.swing.JTextField();
        jButton11 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        list3 = new javax.swing.JList();
        jButton3 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jTextField16 = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jTextField10 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jTextField20 = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jComboBox2 = new javax.swing.JComboBox();
        jTextField7 = new javax.swing.JTextField();
        jComboBox4 = new javax.swing.JComboBox();
        jTextField13 = new javax.swing.JTextField();
        jButton10 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jTextField15 = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jButton9 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        jButton4.setBackground(new java.awt.Color(11, 70, 119));
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Actualizar");
        jButton4.setContentAreaFilled(false);
        jButton4.setOpaque(true);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(11, 70, 119));
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Cancelar");
        jButton5.setContentAreaFilled(false);
        jButton5.setOpaque(true);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Panel de Líneas"));

        jScrollPane1.setViewportView(list1);

        jButton1.setBackground(new java.awt.Color(11, 70, 119));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Operar Líneas");
        jButton1.setContentAreaFilled(false);
        jButton1.setOpaque(true);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton6.setBackground(new java.awt.Color(11, 70, 119));
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Eliminar");
        jButton6.setContentAreaFilled(false);
        jButton6.setOpaque(true);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 102, 102));
        jLabel3.setText("Principal");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 366, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton6)
                    .addComponent(jLabel3)
                    .addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Panel de Locaciones"));

        jScrollPane2.setViewportView(list2);

        jButton2.setBackground(new java.awt.Color(11, 70, 119));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Operar Locaciones");
        jButton2.setContentAreaFilled(false);
        jButton2.setOpaque(true);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton7.setBackground(new java.awt.Color(11, 70, 119));
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setContentAreaFilled(false);
        jButton7.setLabel("Eliminar");
        jButton7.setOpaque(true);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton7)))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Artículo"));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setText("Código");

        jTextField2.setEditable(false);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 102, 102));
        jLabel2.setText("Descripción");

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(102, 102, 102));
        jLabel18.setText("Código Auxiliar");

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(102, 102, 102));
        jLabel19.setText("Proveedor");

        jButton11.setBackground(new java.awt.Color(11, 70, 119));
        jButton11.setForeground(new java.awt.Color(255, 255, 255));
        jButton11.setText("Operar Proveedores");
        jButton11.setContentAreaFilled(false);
        jButton11.setEnabled(false);
        jButton11.setOpaque(true);
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField17, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton11))
                    .addComponent(jTextField1))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)
                    .addComponent(jTextField17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(jTextField18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Panel de Sinónimos"));

        jScrollPane3.setViewportView(list3);

        jButton3.setBackground(new java.awt.Color(11, 70, 119));
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Operar Sinónimos");
        jButton3.setContentAreaFilled(false);
        jButton3.setOpaque(true);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton8.setBackground(new java.awt.Color(11, 70, 119));
        jButton8.setForeground(new java.awt.Color(255, 255, 255));
        jButton8.setText("Eliminar");
        jButton8.setContentAreaFilled(false);
        jButton8.setOpaque(true);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 102, 102));
        jLabel5.setText("Principal");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                .addGap(10, 10, 10)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton8)
                    .addComponent(jLabel5)
                    .addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Precios"));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 102, 102));
        jLabel6.setText("Precio de Venta");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(102, 102, 102));
        jLabel7.setText("Precio de Compra");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(102, 102, 102));
        jLabel9.setText("Último costo");

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(102, 102, 102));
        jLabel15.setText("IVA");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(28, 28, 28)
                        .addComponent(jTextField3))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel9)
                            .addComponent(jLabel15))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField4, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                            .addComponent(jTextField5)
                            .addComponent(jTextField11))))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Inventario"));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(102, 102, 102));
        jLabel12.setText("Mínimo de Piezas");

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(102, 102, 102));
        jLabel13.setText("Máximo de Piezas");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(102, 102, 102));
        jLabel14.setText("Promedio de Piezas");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(102, 102, 102));
        jLabel8.setText("Clasificación");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "A", "B", "C", "1" }));
        jComboBox1.setSelectedIndex(3);

        jTextField20.setEditable(false);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel14)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel12))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextField10)
                                    .addComponent(jTextField9)
                                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jTextField20))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTextField20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Existencias"));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(102, 102, 102));
        jLabel10.setText("Existencia");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(102, 102, 102));
        jLabel11.setText("Reservado");

        jTextField6.setEditable(false);

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "PZA", "SERVICIO" }));

        jTextField7.setEditable(false);

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Agregar", "Quitar" }));
        jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox4ActionPerformed(evt);
            }
        });

        jButton10.setBackground(new java.awt.Color(11, 70, 119));
        jButton10.setForeground(new java.awt.Color(255, 255, 255));
        jButton10.setText("Agregar");
        jButton10.setContentAreaFilled(false);
        jButton10.setOpaque(true);
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        jLabel4.setText("Anticipos");

        jTextField15.setEditable(false);

        jCheckBox1.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBox1.setForeground(new java.awt.Color(102, 102, 102));
        jCheckBox1.setText("Quitar de Paretto");

        jCheckBox2.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBox2.setForeground(new java.awt.Color(102, 102, 102));
        jCheckBox2.setText("Artículo Nuevo");

        jCheckBox3.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBox3.setForeground(new java.awt.Color(102, 102, 102));
        jCheckBox3.setText("Oferta");
        jCheckBox3.setEnabled(false);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(8, 8, 8)
                        .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField13, javax.swing.GroupLayout.DEFAULT_SIZE, 49, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton10)
                        .addGap(1, 1, 1))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jCheckBox2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jCheckBox1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jCheckBox3))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(13, 13, 13)
                                .addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox1)
                    .addComponent(jCheckBox2)
                    .addComponent(jCheckBox3))
                .addContainerGap())
        );

        jButton9.setBackground(new java.awt.Color(11, 70, 119));
        jButton9.setForeground(new java.awt.Color(255, 255, 255));
        jButton9.setText("Habilitar");
        jButton9.setContentAreaFilled(false);
        jButton9.setOpaque(true);
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButton9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton5))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(jButton4)
                    .addComponent(jButton9))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
  //      JFrame mseleccion = new JFrame();
  //      mseleccion.setLocationRelativeTo(null);
  //      mseleccion.setLayout(new GridLayout());
        PSeleccionar_Linea seleccionar = new PSeleccionar_Linea();
        JDialog dialogo = new JDialog((JFrame)Window.getWindows()[0],"Lineas",true);
        dialogo.getContentPane().add(seleccionar);
        dialogo.setSize(200, 400);
        dialogo.setLocationRelativeTo((JFrame)Window.getWindows()[0]);
        dialogo.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        PSeleccionar_Ubicacion seleccionar = new PSeleccionar_Ubicacion();
        JDialog dialogo = new JDialog((JFrame)Window.getWindows()[0],"Ubicaciones",true);
        dialogo.getContentPane().add(seleccionar);
        dialogo.setSize(200, 400);
        dialogo.setLocationRelativeTo((JFrame)Window.getWindows()[0]);
        dialogo.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        PSinonimo seleccionar = new PSinonimo();
        JDialog dialogo = new JDialog((JFrame)Window.getWindows()[0],"Sinonimos",true);
        dialogo.getContentPane().add(seleccionar);
        dialogo.setSize(900, 400);
        dialogo.setLocationRelativeTo((JFrame)Window.getWindows()[0]);
        dialogo.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
     // TODO add your handling code here:
        try {
        List<Articulos> validarArticulo = harticulos.consultaArticulos("id", "=", String.valueOf(a.getId()));
        //primero validación del artículo
        
        boolean validacion=true;
        if(
        Integer.compare(validarArticulo.get(0).getAlmacenDevoluciones(), a.getAlmacenDevoluciones())==0&&
        Integer.compare(validarArticulo.get(0).getAnticipos(), a.getAnticipos())==0&&
        Integer.compare(validarArticulo.get(0).getBloqueado(), a.getBloqueado())==0&&
        Integer.compare(validarArticulo.get(0).getIeps(), a.getIeps())==0&&
        Integer.compare(validarArticulo.get(0).getIva(), a.getIva())==0&&
        Integer.compare(validarArticulo.get(0).getOferta(), a.getOferta())==0&&
        Long.compare(validarArticulo.get(0).getExistencia(), a.getExistencia())==0&&
        Long.compare(validarArticulo.get(0).getId(), a.getId())==0&&
        Long.compare(validarArticulo.get(0).getMaximoPzas(), a.getMaximoPzas())==0&&
        Long.compare(validarArticulo.get(0).getMinimoPzas(), a.getMinimoPzas())==0&&
        Long.compare(validarArticulo.get(0).getPromPzas(), a.getPromPzas())==0&&
        Long.compare(validarArticulo.get(0).getReservado(), a.getReservado())==0&&
        Double.compare(validarArticulo.get(0).getPrecioCompra(), a.getPrecioCompra())==0&&
        Double.compare(validarArticulo.get(0).getPrecioVenta(), a.getPrecioVenta())==0&&
        Double.compare(validarArticulo.get(0).getUltimoCosto(), a.getUltimoCosto())==0&&
        validarArticulo.get(0).getClasificacion().equals(a.getClasificacion())&&
        validarArticulo.get(0).getCodigo().equals(a.getCodigo())&&
        validarArticulo.get(0).getDescripcion().equals(a.getDescripcion())&&
        validarArticulo.get(0).getLineaPrincipal().equals(a.getLineaPrincipal())&&
        validarArticulo.get(0).getTipoEtiqueta().equals(a.getTipoEtiqueta())&&
        validarArticulo.get(0).getSinonimoPrincipal().equals(a.getSinonimoPrincipal())&&
        validarArticulo.get(0).getCodigo2().equals(a.getCodigo2())&&
        validarArticulo.get(0).getProveedor().equals(a.getProveedor())&&
        Double.compare(validarArticulo.get(0).getPrecioVenta2(), a.getPrecioVenta2())==0&&
        validarArticulo.get(0).getUnidad().equals(a.getUnidad()))
        validacion = true;
        else
        validacion = false;
        
        if(!validacion)
        {
            JOptionPane.showMessageDialog(null, "Este artículo fue modificado recientemente en otra operación,\n "
                                              + "por favor cierre esta ventana, busque nuevamente el artículo e\n"
                                              + "intente actualizarlo");
            return;
        }
        

                    
        Articulos articulo = new Articulos();
        articulo.setCodigo(jTextField2.getText());
        articulo.setDescripcion(jTextField1.getText());
        articulo.setPrecioVenta(Double.parseDouble(jTextField3.getText()));
        articulo.setPrecioCompra(Double.parseDouble(jTextField4.getText()));
        articulo.setUltimoCosto(Double.parseDouble(jTextField5.getText()));
        articulo.setClasificacion(String.valueOf(jComboBox1.getSelectedItem())); //
        articulo.setExistencia(Long.parseLong(jTextField6.getText()));
        articulo.setReservado(Long.parseLong(jTextField7.getText()));
        articulo.setMinimoPzas(Long.parseLong(jTextField10.getText()));
        articulo.setMaximoPzas(Long.parseLong(jTextField9.getText()));
        articulo.setPromPzas(Long.parseLong(jTextField8.getText()));
        articulo.setIeps(0);
        articulo.setIva(Integer.parseInt(jTextField11.getText()));
        articulo.setUnidad(String.valueOf(jComboBox2.getSelectedItem()));       //
        articulo.setTipoEtiqueta(jTextField20.getText()); //
        articulo.setLineaPrincipal(jTextField14.getText());       //
        articulo.setAnticipos(Integer.parseInt(jTextField15.getText()));
        articulo.setSinonimoPrincipal(jTextField16.getText());
        articulo.setCodigo2(jTextField17.getText());
        articulo.setProveedor(jTextField18.getText());
        articulo.setPrecioVenta2(0.0);
        if(jCheckBox1.isSelected())
        articulo.setParetto(1);
        else
        articulo.setParetto(0);    
        if(jCheckBox2.isSelected())
        articulo.setNuevo(1);
        else
        articulo.setNuevo(0);    
        if(jCheckBox3.isSelected())
        articulo.setOferta(1);
        else
        articulo.setOferta(0);  
        
        if(!CPrincipal.getConexion().crearTransaccion())
        return;
        
        harticulos.actualizarArticulosCatalogo(articulo,"id","=",String.valueOf(a.getId()));
        
    /*    Kardex renglon = new Kardex();
        Kardex kardex = hkardex.consultaUltimoRenglon("articulo", "=", a.getCodigo());                 
        
        if(kardex == null)
        {
                    kardex = new Kardex();    
                    hKardex hkardex = new hKardex();
                    //Se registra la pieza en Kardex
                    kardex = new Kardex();
                    kardex.setAlmacenista("");
                    kardex.setAnticipos(a.getAnticipos());
                    kardex.setArticulo(a.getCodigo());
                    kardex.setEntrada(0);
                    kardex.setExistencias((int)a.getExistencia());
                    kardex.setIdArticulo(a.getId());
                    kardex.setModificacion("Registro");
                    kardex.setMovimiento("Registro de Artículo");
                    kardex.setNoMov("1");
                    kardex.setPrecioVenta(a.getPrecioVenta());
                    kardex.setRefFerrari("Registro");
                    kardex.setReservados((int)a.getReservado());
                    kardex.setResponsable("1");
                    kardex.setResponsable2("Registro Automático");
                    kardex.setSalida(0);
                    kardex.setUltimoCosto(a.getPrecioCompra());
                    kardex.setVendidoEn(0.0);
                    
                    hkardex.guardarEnKardex(kardex); 
        }
        
        renglon.setAlmacenista("");
        renglon.setArticulo(kardex.getArticulo());
        renglon.setEntrada(0);
        renglon.setSalida(0);
        renglon.setExistencias(kardex.getExistencias());
        renglon.setIdArticulo(kardex.getIdArticulo());
        renglon.setModificacion("Actualización Catálogo");
        renglon.setMovimiento("Actualización Catálogo");
        String nuevoMov = String.valueOf(Integer.parseInt(kardex.getNoMov())+1);
        renglon.setNoMov(nuevoMov);
        renglon.setPrecioVenta(articulo.getPrecioVenta());
        renglon.setRefFerrari("Actua"+kardex.getArticulo());
        renglon.setReservados(kardex.getReservados());
        renglon.setAnticipos(kardex.getAnticipos());
        renglon.setResponsable(String.valueOf(CConfiguracion.getId()));
        renglon.setUltimoCosto(articulo.getPrecioCompra()); 
        renglon.setResponsable2("Sin Administrador");
        renglon.setVendidoEn(0.00);
        
        hkardex.guardarEnKardex(renglon); */
        
        a.setCodigo(jTextField2.getText());
        a.setDescripcion(jTextField1.getText());
        a.setPrecioVenta(Double.parseDouble(jTextField3.getText()));
        a.setPrecioCompra(Double.parseDouble(jTextField4.getText()));
        a.setUltimoCosto(Double.parseDouble(jTextField5.getText()));
        a.setClasificacion(String.valueOf(jComboBox1.getSelectedItem())); //
        a.setExistencia(Long.parseLong(jTextField6.getText()));
        a.setReservado(Long.parseLong(jTextField7.getText()));
        a.setMinimoPzas(Long.parseLong(jTextField10.getText()));
        a.setMaximoPzas(Long.parseLong(jTextField9.getText()));
        a.setPromPzas(Long.parseLong(jTextField8.getText()));
        a.setIeps(0);
        a.setIva(Integer.parseInt(jTextField11.getText()));
        a.setUnidad(String.valueOf(jComboBox2.getSelectedItem()));       //
        a.setTipoEtiqueta(jTextField20.getText()); //
        a.setLineaPrincipal(jTextField14.getText());       //
        a.setAnticipos(Integer.parseInt(jTextField15.getText()));
        a.setSinonimoPrincipal(jTextField16.getText());
        a.setCodigo2(jTextField17.getText());
        a.setProveedor(jTextField18.getText());
        a.setPrecioVenta2(0.0);
        if(jCheckBox1.isSelected())
        a.setParetto(1);
        else
        a.setParetto(0);    
        if(jCheckBox2.isSelected())
        a.setNuevo(1);
        else
        a.setNuevo(0);   
        if(jCheckBox3.isSelected())
        a.setOferta(1);
        else
        a.setOferta(0);   

        int indilista1 = 0;

        while(indilista1 < lineasGuardadas.size()) //quitar iguales
        {
         int indilista2 = 0;
         while(indilista2 < al.size())
            {
             if(!lineasGuardadas.isEmpty() && !al.isEmpty() &&
                lineasGuardadas.get(indilista1).getClaveArticulo() == al.get(indilista2).getClaveArticulo() &&
                lineasGuardadas.get(indilista1).getClaveLinea() == al.get(indilista2).getClaveLinea())
             {

                 
                 al.remove(indilista2);
                 lineasGuardadas.remove(indilista1);

                 indilista2--;
             }

             indilista2++;
            }
         indilista1++;
        }

        int indiubi1 = 0;

        while (indiubi1 < ubicacionesGuardadas.size())
        {
            int indiubi2 = 0;
            while(indiubi2 < au.size())
            {
                if(!ubicacionesGuardadas.isEmpty() && !au.isEmpty() &&
                    ubicacionesGuardadas.get(indiubi1).getIdarticulo() == au.get(indiubi2).getIdarticulo() &&
                    ubicacionesGuardadas.get(indiubi1).getIdubicacion() == au.get(indiubi2).getIdubicacion())
                {
                    ubicacionesGuardadas.remove(indiubi1);
                    au.remove(indiubi2);

                    indiubi2--;
                }
                indiubi2++;
            }
          indiubi1++;
        }

        int indiprove1 = 0;

        while (indiprove1 < proveedoresGuardados.size())
        {
            int indiprove2 = 0;
            while(indiprove2 < ap.size())
            {
                if(!proveedoresGuardados.isEmpty() && !ap.isEmpty() &&
                   proveedoresGuardados.get(indiprove1).getIdArticulo() == ap.get(indiprove2).getIdArticulo() &&
                   proveedoresGuardados.get(indiprove1).getIdProveedor() == ap.get(indiprove2).getIdProveedor() &&
                   proveedoresGuardados.get(indiprove1).getSinonimo().equalsIgnoreCase(ap.get(indiprove2).getSinonimo()))
                {
                    proveedoresGuardados.remove(indiprove1);
                    ap.remove(indiprove2);
                    indiprove2--;
                }
                indiprove2++;
            }
            indiprove1++;
        }

      hArticuloProveedor harticuloproveedor = new hArticuloProveedor();
      hArticulolinea harticulolinea = new hArticulolinea();
      hArticuloUbicacion harticuloubicacion = new hArticuloUbicacion();

      int indquitar = 0;

      while(indquitar < al.size())
      {
      harticulolinea.borrarArticuloLinea(String.valueOf(al.get(indquitar).getId()));
      indquitar++;
      }

      indquitar = 0;

      while(indquitar < au.size())
      {
      harticuloubicacion.borrarArticuloUbicacion(String.valueOf(au.get(indquitar).getId()));
      indquitar++;
      }

      indquitar = 0;

      while(indquitar < ap.size())
      {
      harticuloproveedor.borrarArtProv(String.valueOf(ap.get(indquitar).getId()));
      indquitar++;
      }
      
      indquitar = 0;
      
      // falta agregar
      int indagregar = 0;

      while(indagregar < lineasGuardadas.size())
      {
      harticulolinea.guardarArticuloLinea(lineasGuardadas.get(indagregar));
      indagregar++;
      }

      indagregar = 0;

      while(indagregar < ubicacionesGuardadas.size())
      {
      harticuloubicacion.guardarArticuloUbicacion(ubicacionesGuardadas.get(indagregar));
      indagregar++;
      }

      indagregar=0;

      while(indagregar < proveedoresGuardados.size())
      {
      harticuloproveedor.guardarArtProv(proveedoresGuardados.get(indagregar));
      indagregar++;
      }

      indagregar = 0;
      CPrincipal.getConexion().finalizarTransaccion();
      

        JOptionPane.showMessageDialog(this, "Artículo Actualizado", "Artículo Actualizado", JOptionPane.INFORMATION_MESSAGE);

        jTextField1.setEditable(false);
        jTextField2.setEditable(false);
        jTextField3.setEditable(false);
        jTextField4.setEditable(false);
        jTextField5.setEditable(false);
        jTextField6.setEditable(false);
        jTextField7.setEditable(false);
        jTextField8.setEditable(false);
        jTextField9.setEditable(false);
        jTextField10.setEditable(false);
        jTextField11.setEditable(false);
        jTextField14.setEditable(false);
        jTextField15.setEditable(false);
        jTextField16.setEditable(false);
        jTextField17.setEditable(false);
        jTextField18.setEditable(false);
        jTextField20.setEditable(false);
        jComboBox1.setEnabled(false);
        jComboBox2.setEnabled(false);
        jCheckBox1.setEnabled(false);
        jCheckBox2.setEnabled(false);
        jCheckBox3.setEnabled(false);
        jButton1.setEnabled(false);
        jButton2.setEnabled(false);
        jButton3.setEnabled(false);
        jButton4.setEnabled(false);
        jButton5.setEnabled(false);
        jButton6.setEnabled(false);
        jButton7.setEnabled(false);
        jButton8.setEnabled(false);
        jButton9.setEnabled(true);
        jButton11.setEnabled(true);
        VCatalogo_Articulos.boton1.doClick();
         } catch(Exception e)
        {
            CPrincipal.getConexion().cancelarTransaccion();
            e.printStackTrace();            
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        modeloList1.removeAllElements();
        modeloList3.removeAllElements();
        modeloList2.removeAllElements();
        list1.setModel(modeloList1);
        list2.setModel(modeloList2);
        list3.setModel(modeloList3);
        inicializar();
    
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
         if(list1.getSelectedIndex() == -1)
        {
            JOptionPane.showMessageDialog(null, "Seleccione primero el elemento que desea eliminar");
            return;
        }
        
        lineasGuardadas.remove(list1.getSelectedIndex());
        modeloList1.remove(list1.getSelectedIndex());
        list1.setModel(modeloList1);
      //  list1.remove(list1.getSelectedIndex());
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
         if(list2.getSelectedIndex() == -1)
        {
            JOptionPane.showMessageDialog(null, "Seleccione primero el elemento que desea eliminar");
            return;
        }
        
          ubicacionesGuardadas.remove(list2.getSelectedIndex());
          modeloList2.remove(list2.getSelectedIndex());
          list2.setModel(modeloList2);
         // list2.remove(list2.getSelectedIndex());
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        if(list3.getSelectedIndex() == -1)
        {
            JOptionPane.showMessageDialog(null, "Seleccione primero el elemento que desea eliminar");
            return;
        }
         proveedoresGuardados.remove(list3.getSelectedIndex());
        modeloList3.remove(list3.getSelectedIndex());
        list3.setModel(modeloList3);
        // list3.remove(list3.getSelectedIndex());
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
                // TODO add your handling code here:
        jTextField1.setEditable(true);
        jTextField3.setEditable(true);
        jTextField4.setEditable(true);
        jTextField5.setEditable(true);
        jTextField8.setEditable(true);
        jTextField9.setEditable(true);
        jTextField10.setEditable(true);
        jTextField11.setEditable(true);
        jTextField13.setEditable(true);
        jTextField14.setEditable(true);
        jTextField16.setEditable(true);
        jTextField17.setEditable(true);
        jTextField18.setEditable(true);
        
        
        jComboBox1.setEnabled(true);
        jComboBox2.setEnabled(true);
        jComboBox4.setEnabled(true);
        jCheckBox1.setEnabled(true);
        jCheckBox2.setEnabled(true);
        jButton1.setEnabled(true);
        jButton2.setEnabled(true);
        jButton3.setEnabled(true);
        jButton4.setEnabled(true);
        jButton5.setEnabled(true);
        jButton6.setEnabled(true);
        jButton7.setEnabled(true);
        jButton8.setEnabled(true);
        jButton10.setEnabled(true);
        jButton11.setEnabled(true);
        jButton9.setEnabled(false);
        
        if(!CConfiguracion.isActualizarArticulos())
        {         
        jTextField1.setEditable(true);
        jTextField3.setEditable(false);
        jTextField4.setEditable(false);
        jTextField5.setEditable(false);
        jTextField7.setEditable(false);
        jTextField8.setEditable(false);
        jTextField9.setEditable(false);
        jTextField10.setEditable(false);
        jTextField11.setEditable(false);
        jTextField13.setEditable(false);
        jTextField14.setEditable(false);
        jTextField15.setEditable(false);
        jTextField16.setEditable(false);
        jTextField17.setEditable(false);
        jTextField18.setEditable(false);
        jTextField20.setEditable(false);
        jCheckBox1.setEnabled(false);
        jCheckBox2.setEnabled(false);
        jCheckBox3.setEnabled(false);
        jComboBox1.setEnabled(false);
        jComboBox2.setEnabled(false);
        jComboBox4.setEnabled(false);
        jButton1.setEnabled(false);
        jButton2.setEnabled(false);
        jButton3.setEnabled(false);
        jButton5.setEnabled(false);
        jButton6.setEnabled(false);
        jButton7.setEnabled(false);
        jButton8.setEnabled(false);
        jButton10.setEnabled(false);
        jButton9.setEnabled(false);           
        jButton11.setEnabled(false);   
        }
        

    }//GEN-LAST:event_jButton9ActionPerformed

    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox4ActionPerformed
        // TODO add your handling code here:
        jButton10.setText(jComboBox4.getSelectedItem().toString());
    }//GEN-LAST:event_jComboBox4ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        String respuesta = JOptionPane.showInputDialog(null, "Por favor escribe la causa por la cual deseas agregar/eliminar artículos");
        
        ConexionWeb conexionweb = new ConexionWeb();
        String transaccion="";
        
        if(respuesta == null)
            return;       
        
        if(respuesta.isEmpty())
            respuesta = "";
        //primero validación del artículo
        
        boolean validacion=true;
        List<Articulos> b = harticulos.consultaArticulos("codigo", "=", a.getCodigo());
        if(Long.compare(b.get(0).getExistencia(),a.getExistencia())==0)
            validacion = true;
        else
            validacion = false;
        
        if(!validacion)
        {
            JOptionPane.showMessageDialog(null, "Este artículo fue modificado recientemente en otra operación,\n "
                                              + "por favor cierre esta ventana, busque nuevamente el artículo e\n"
                                              + "intente actualizarlo");
            return;
        }
        
        int nuevaCantidad=0;
        if(jComboBox4.getSelectedItem().equals("Agregar"))
           nuevaCantidad = (int)b.get(0).getExistencia() +  Integer.parseInt(jTextField13.getText());
        else if(jComboBox4.getSelectedItem().equals("Quitar"))
        {
           if(b.get(0).getExistencia()>=Integer.parseInt(jTextField13.getText()))  
           nuevaCantidad = (int)b.get(0).getExistencia() -  Integer.parseInt(jTextField13.getText());
           else
           {
            JOptionPane.showMessageDialog(null, "La cantidad seleccionada es mayor a la existencia actual");   
           return;
           }
        }
        
        if(!CPrincipal.getConexion().crearTransaccion())
        return;
        
        if(CGlobalConfig.isWeb())
        transaccion = conexionweb.iniciarTransaccion() + " "; 
        
        a.setExistencia((long)nuevaCantidad);
       
        if(!CGlobalConfig.isWeb())
        harticulos.actualizarExistencias(a.getCodigo(), nuevaCantidad);
        else
        transaccion = transaccion + harticulos.crearQueryActualizarExistencias(a.getCodigo(), nuevaCantidad) + " ";
            
        Kardex renglon = new Kardex();
        Kardex kardex = hkardex.consultaUltimoRenglon("articulo", "=", a.getCodigo());       
        
        if(kardex == null)
        {
                            //Se registra la pieza en Kardex
                    kardex = new Kardex();
                    kardex.setAlmacenista("");
                    kardex.setAnticipos(b.get(0).getAnticipos());
                    kardex.setArticulo(b.get(0).getCodigo());
                    kardex.setEntrada(0);
                    kardex.setExistencias((int)b.get(0).getExistencia());
                    kardex.setIdArticulo(b.get(0).getId());
                    kardex.setModificacion("Registro");
                    kardex.setMovimiento("Registro de Artículo");
                    kardex.setNoMov("1");
                    kardex.setPrecioVenta(b.get(0).getPrecioVenta());
                    kardex.setRefFerrari("Registro");
                    kardex.setReservados((int)b.get(0).getReservado());
                    kardex.setResponsable("1");
                    kardex.setResponsable2("Registro Automático");
                    kardex.setSalida(0);
                    kardex.setUltimoCosto(b.get(0).getUltimoCosto());
                    kardex.setVendidoEn(0.0);

                if(!CGlobalConfig.isWeb())
                hkardex.guardarEnKardex(kardex); 
                else
                transaccion = transaccion + hkardex.crearQueryGuardarEnKardexCompleto(kardex) + " ";     
                    
        }
        
        
        // renglon.setAlmacenista("");
        renglon.setAlmacenista("JAVIERSANCHEZA");
        renglon.setArticulo(b.get(0).getCodigo());
        int nuevaCantidadKardex = 0;
        if(jComboBox4.getSelectedItem().equals("Agregar"))
        {
        nuevaCantidadKardex = Integer.parseInt(jTextField13.getText()) + kardex.getExistencias();
        renglon.setEntrada(Integer.parseInt(jTextField13.getText()));
        renglon.setSalida(0);
        }
        if(jComboBox4.getSelectedItem().equals("Quitar"))
        {      
        nuevaCantidadKardex = kardex.getExistencias() - Integer.parseInt(jTextField13.getText());
        renglon.setEntrada(0);
        renglon.setSalida(Integer.parseInt(jTextField13.getText()));
        }
        
        renglon.setExistencias(nuevaCantidadKardex);
        renglon.setIdArticulo(b.get(0).getId());
        renglon.setModificacion(respuesta);
        // renglon.setModificacion("Justificación de Inventario Sep2013");
        renglon.setMovimiento("Actualización Existencia");
       //  renglon.setMovimiento("Justificación Inventario Sep2013");
        String nuevoMov = String.valueOf(Integer.parseInt(kardex.getNoMov())+1);
        renglon.setNoMov(nuevoMov);
        renglon.setPrecioVenta(b.get(0).getPrecioVenta());
        renglon.setRefFerrari("Actua"+b.get(0).getCodigo());
        // renglon.setRefFerrari("Inventario");
        renglon.setReservados(kardex.getReservados());
        renglon.setAnticipos(kardex.getAnticipos());
        renglon.setResponsable(String.valueOf(CConfiguracion.getId()));
        renglon.setUltimoCosto(b.get(0).getPrecioCompra()); 
        renglon.setResponsable2("Sin Administrador");
        renglon.setVendidoEn(0.00);
        
        if(!CGlobalConfig.isWeb())
        hkardex.guardarEnKardex(renglon); 
        else
        transaccion = transaccion + hkardex.crearQueryGuardarEnKardexCompleto(renglon) + " ";  
        
        CPrincipal.getConexion().finalizarTransaccion();
        
         if(CGlobalConfig.isWeb())
               {
               transaccion = transaccion + conexionweb.finalizarTransaccion();    
               conexionweb.escribirEnWeb(transaccion);
               }
        
        VCatalogo_Articulos.boton1.doClick();
        jButton5.doClick();
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        VActualiza_Articulo.PSeleccionar_Proveedores seleccionar = new VActualiza_Articulo.PSeleccionar_Proveedores();
        JDialog dialogo = new JDialog((JFrame)Window.getWindows()[0],"Proveedores",true);
        dialogo.getContentPane().add(seleccionar);
        dialogo.setSize(400, 500);
        dialogo.setLocationRelativeTo((JFrame)Window.getWindows()[0]);
        dialogo.setVisible(true);
    }//GEN-LAST:event_jButton11ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JTextField jTextField17;
    private javax.swing.JTextField jTextField18;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField20;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JList list1;
    private javax.swing.JList list2;
    private javax.swing.JList list3;
    // End of variables declaration//GEN-END:variables
    hArticulos harticulos;
    hKardex hkardex;
    List<Articulolinea> lineasGuardadas;
    List <Articuloproveedor>proveedoresGuardados;
    List <Articuloubicacion>ubicacionesGuardadas;
    private Articulos a;
    List<Articulolinea> al;
    List<Articuloubicacion> au;
    List<Articuloproveedor> ap;
    DefaultListModel modeloList1,modeloList2,modeloList3;
    DecimalFormat df;


    private void inicializar()
    {
     /* if(CConfiguracion.getPuesto().equals("Ventas"))
        {
            jButton9.setEnabled(false);
        }*/
        
        jButton9.setEnabled(CConfiguracion.isActualizarArticulos());
        df= new DecimalFormat("0.00");
        
        jTextField1.setText(a.getDescripcion());
        jTextField2.setText(a.getCodigo());
        jTextField3.setText(df.format(a.getPrecioVenta()));
        jTextField4.setText(df.format(a.getPrecioCompra()));
        jTextField5.setText(String.valueOf(a.getUltimoCosto()));
        jTextField6.setText(String.valueOf(a.getExistencia()));
        jTextField7.setText(String.valueOf(a.getReservado()));
        jTextField8.setText(String.valueOf(a.getPromPzas()));
        jTextField9.setText(String.valueOf(a.getMaximoPzas()));
        jTextField10.setText(String.valueOf(a.getMinimoPzas()));
        jTextField11.setText(String.valueOf(a.getIva()));
        jTextField13.setText("");
        jTextField14.setText(a.getLineaPrincipal());
        jTextField15.setText(String.valueOf(a.getAnticipos()));
        jTextField16.setText(a.getSinonimoPrincipal());
        jTextField17.setText(a.getCodigo2());
        jTextField18.setText(a.getProveedor());
        jTextField20.setText(a.getTipoEtiqueta());
        if(a.getParetto()==0)
        jCheckBox1.setSelected(false);
        else
        jCheckBox1.setSelected(true);    
        if(a.getNuevo()==0)
        jCheckBox2.setSelected(false);
        else
        jCheckBox2.setSelected(true);   
        if(a.getOferta()==0)
        jCheckBox3.setSelected(false);
        else
        jCheckBox3.setSelected(true); 
        
        jComboBox1.setSelectedItem(a.getClasificacion());
        jComboBox2.setSelectedItem(a.getUnidad());
        
        
        
        
        jComboBox4.setSelectedIndex(0);
        modeloList1 = new DefaultListModel();
        modeloList2 = new DefaultListModel();
        modeloList3 = new DefaultListModel();

        hArticulolinea harticulolinea = new hArticulolinea();
        al = harticulolinea.consultaArticuloLinea(String.valueOf(a.getId()));
        for(Object o: al)
        {
         Articulolinea artlin = (Articulolinea)o;
         modeloList1.addElement(artlin.getNombre()+" - "+artlin.getDescripcion());
        }
        list1.setModel(modeloList1);
        hArticuloUbicacion harticuloubicacion = new hArticuloUbicacion();
        au = harticuloubicacion.consultaArticuloUbicacion(String.valueOf(a.getId()));

        for(Object o: au)
        {
         Articuloubicacion artlin = (Articuloubicacion)o;
         modeloList2.addElement(artlin.getUbicacion());
        }
        list2.setModel(modeloList2);
        hArticuloProveedor harticuloproveedor = new hArticuloProveedor();
        hProveedores hproveedor = new hProveedores();
        ap = harticuloproveedor.consultaArtProv("idArticulo","=",String.valueOf(a.getCodigo()));

        for(Object o: ap)
        {
         Articuloproveedor artprov = (Articuloproveedor)o;
         List<Proveedores> prov = hproveedor.consultaProveedores("nombreCorto", "=", String.valueOf(artprov.getIdProveedor()));
         int i=0;
         String nombreCor = "";
         while(i<prov.size())
         {
         nombreCor = prov.get(i).getNombre();
         i++;
         }
         modeloList3.addElement(artprov.getSinonimo()+" - "+nombreCor);
        }
        list3.setModel(modeloList3);

        lineasGuardadas = new ArrayList(al);
        ubicacionesGuardadas = new ArrayList(au);
        proveedoresGuardados = new ArrayList(ap);


        jTextField1.setEditable(false);
        jTextField2.setEditable(false);
        jTextField3.setEditable(false);
        jTextField4.setEditable(false);
        jTextField5.setEditable(false);
        jTextField7.setEditable(false);
        jTextField8.setEditable(false);
        jTextField9.setEditable(false);
        jTextField10.setEditable(false);
        jTextField11.setEditable(false);
        jTextField13.setEditable(false);
        jTextField14.setEditable(false);
        jTextField15.setEditable(false);
        jTextField16.setEditable(false);
        jTextField17.setEditable(false);
        jTextField18.setEditable(false);
        jTextField20.setEditable(false);
        jComboBox1.setEnabled(false);
        jComboBox2.setEnabled(false);
        jComboBox4.setEnabled(false);
        jCheckBox1.setEnabled(false);
        jCheckBox2.setEnabled(false);
        jCheckBox3.setEnabled(false);
        jButton1.setEnabled(false);
        jButton2.setEnabled(false);
        jButton3.setEnabled(false);
        jButton4.setEnabled(false);
        jButton5.setEnabled(false);
        jButton6.setEnabled(false);
        jButton7.setEnabled(false);
        jButton8.setEnabled(false);
        jButton10.setEnabled(false);
        jButton9.setEnabled(true);       
        
        harticulos = new hArticulos();
        hkardex = new hKardex();
        
        
    }

   
 public class PSeleccionar_Linea extends JPanel   {

    JPanel panelPrincipal, panelEncabezado, panelTabla;
    JTable tablaLineas;
    hLineas hlinea;
    Vector vector,encabezadoLineas;
    DefaultTableModel dtm;
   List<Linea> listaLineas;

    public PSeleccionar_Linea(){
     tablaLineas = new JTable();
     // lineasGuardadas = new ArrayList<Articulolinea>();
     encabezadoLineas = new Vector<String>();
     encabezadoLineas.add("Nombre");
     encabezadoLineas.add("Descripción");

     hlinea = new hLineas();
     listaLineas = hlinea.consultaLineas("","*","");
     vector = new Vector();

       for(Object o: listaLineas){
             Linea lin = (Linea)o;
             Vector<Object> unaFila = new Vector<Object>();
             unaFila.add(lin.getNombre());
             unaFila.add(lin.getDescripcion());
             vector.add(unaFila);
         }

      dtm = new DefaultTableModel(vector,encabezadoLineas) {

              @Override
              public boolean isCellEditable(int row, int column) {
              return false;
                }
              };

      tablaLineas.setModel(dtm);
      tablaLineas.addMouseListener(new MouseListener()
      {

                public void mouseClicked(MouseEvent e) {
                                    if(e.getClickCount() == 2)
                                    {

                                       int indice = tablaLineas.getSelectedRow();
                                       modeloList1.addElement(listaLineas.get(indice).getNombre() + "-" +listaLineas.get(indice).getDescripcion());
                                   //    list1.add(listaLineas.get(indice).getNombre());
                                  //     Articulolinea artlinea = new Articulolinea();
                                  //     artlinea.setClaveLinea(listaLineas.get(indice).getId());
                                  //     lineasGuardadas.add(artlinea);

                                //       hArticulolinea harticulolinea = new hArticulolinea();
                                //       harticulolinea.borrarArticuloLinea(String.valueOf(al.get(list1.getSelectedIndex()).getId()));
                                //       al.remove(list1.getSelectedIndex());
                                //       list1.remove(list1.getSelectedIndex());

                          //   hArticulolinea harticulolinea = new hArticulolinea();
                                       Articulolinea artlinea = new Articulolinea();
                                       artlinea.setClaveLinea(listaLineas.get(indice).getId());
                                       artlinea.setClaveArticulo(a.getId());
                         //    int ultimoInsertado = harticulolinea.guardarArticuloLineaLast(artlinea);

                         //    artlinea.setId(Long.valueOf(ultimoInsertado));
                                       lineasGuardadas.add(artlinea);
                                       

                                      
                                  //     list1.getSize();
                                    }
                }

                public void mousePressed(MouseEvent e) {
                    return;
                }

                public void mouseReleased(MouseEvent e) {
                   return;
                }

                public void mouseEntered(MouseEvent e) {
                    return;
                }

                public void mouseExited(MouseEvent e) {
                   return;
                }

      }
              );

      

      add(new JScrollPane(tablaLineas));
      setLayout(new GridLayout());
    }

}

   public class PSeleccionar_Ubicacion extends JPanel   {

    JPanel panelPrincipal, panelEncabezado, panelTabla;
    JTable tablaUbicacion;
    hUbicacion hubicacion;
    Vector vector,encabezadoUbicacion;
    DefaultTableModel dtm;
    List<Ubicacion> listaUbicacion;
    int indice = 0;

    public PSeleccionar_Ubicacion(){
     tablaUbicacion = new JTable();
    // ubicacionesGuardadas = new ArrayList<Articuloubicacion>();
     encabezadoUbicacion = new Vector<String>();
     encabezadoUbicacion.add("Ubicación");

     hubicacion = new hUbicacion();
     listaUbicacion = hubicacion.consultaUbicaciones("","*","");
     vector = new Vector();

       for(Object o: listaUbicacion){
             Ubicacion lin = (Ubicacion)o;
             Vector<Object> unaFila = new Vector<Object>();
             unaFila.add(lin.getUbicacion());
             vector.add(unaFila);
         }

      dtm = new DefaultTableModel(vector,encabezadoUbicacion) {

              @Override
              public boolean isCellEditable(int row, int column) {
              return false;
                }
              };

      tablaUbicacion.setModel(dtm);
      tablaUbicacion.addMouseListener(new MouseListener()
      {

                public void mouseClicked(MouseEvent e) {
                                    if(e.getClickCount() == 2)
                                    {
                                       indice = tablaUbicacion.getSelectedRow();
                                       modeloList2.addElement(listaUbicacion.get(indice).getUbicacion());
                                       list2.setModel(modeloList2);
                                   


                              // hArticuloUbicacion harticuloubicacion = new hArticuloUbicacion();
                                       Articuloubicacion artubicacion = new Articuloubicacion();
                                       artubicacion.setIdubicacion(listaUbicacion.get(indice).getId());
                                       artubicacion.setIdarticulo(a.getId());
                             // int ultimoInsertado = harticuloubicacion.guardarArticuloUbicacionLast(artubicacion);
                             // artubicacion.setId(Long.valueOf(ultimoInsertado));
                                       ubicacionesGuardadas.add(artubicacion);
                                    }
                }

                public void mousePressed(MouseEvent e) {
                    return;
                }

                public void mouseReleased(MouseEvent e) {
                   return;
                }

                public void mouseEntered(MouseEvent e) {
                    return;
                }

                public void mouseExited(MouseEvent e) {
                   return;
                }

      }
              );

      

      add(new JScrollPane(tablaUbicacion));
      setLayout(new GridLayout());
    }

}

   public class PSeleccionar_Proveedores extends JPanel   {

    JPanel panelPrincipal, panelEncabezado, panelTabla;
    JTable tablaProveedores;
    hProveedores hproveedores;
    Vector vector,encabezadoProveedores;
    DefaultTableModel dtm;
   List<Proveedores> listaProveedores;

    public PSeleccionar_Proveedores(){
     tablaProveedores = new JTable();
     encabezadoProveedores = new Vector<String>();
     encabezadoProveedores.add("Nombre Corto");
     encabezadoProveedores.add("Nombre");

     hproveedores = new hProveedores();
     listaProveedores = hproveedores.consultaProveedores("","*","");
     vector = new Vector();

       for(Object o: listaProveedores){
             Proveedores prov = (Proveedores)o;
             Vector<Object> unaFila = new Vector<Object>();
             unaFila.add(prov.getNombreCorto());
             unaFila.add(prov.getNombre());
             vector.add(unaFila);
         }

      dtm = new DefaultTableModel(vector,encabezadoProveedores) {

              @Override
              public boolean isCellEditable(int row, int column) {
              return false;
                }
              };

      tablaProveedores.setModel(dtm);
      tablaProveedores.addMouseListener(new MouseListener()
      {

                public void mouseClicked(MouseEvent e) {
                                    if(e.getClickCount() == 2)
                                    {

                                       int indice = tablaProveedores.getSelectedRow();
                                       jTextField18.setText(listaProveedores.get(indice).getNombreCorto());
                                  //     list1.getSize();
                                    }
                }

                public void mousePressed(MouseEvent e) {
                    return;
                }

                public void mouseReleased(MouseEvent e) {
                   return;
                }

                public void mouseEntered(MouseEvent e) {
                    return;
                }

                public void mouseExited(MouseEvent e) {
                   return;
                }

      }
              );

   add(new JScrollPane(tablaProveedores));
      setLayout(new GridLayout());
    }

}
public class PSinonimo extends JPanel   {

    JPanel panelPrincipal, panelEncabezado, panelTabla,fila1,fila2;
    JTable tablaProveedores;
    hProveedores hubicacion;
    JLabel leyenda,leyenda1,leyendaS,leyendaP,leyendaId;
    JTextField campoTexto,campoTexto1,campoTextoS,campoTextoP,campoTextoId;
    Vector vector,encabezadoUbicacion;
    DefaultTableModel dtm;
    List<Proveedores> listaProveedores;
    JButton boton,boton1;
    hProveedores proveedores;

    public PSinonimo(){

     setLayout(new GridLayout());
     panelPrincipal = new JPanel();
     panelPrincipal.setLayout(new BorderLayout());
     panelEncabezado = new JPanel();
     panelEncabezado.setLayout(new GridLayout(2,1));
     fila1 = new JPanel();
     fila2 = new JPanel();
     fila1.setLayout(new FlowLayout());
     fila2.setLayout(new FlowLayout());
     proveedores = new hProveedores();

     tablaProveedores = new JTable();
    // proveedoresGuardados = new ArrayList<Articuloproveedor>();

     encabezadoUbicacion = new Vector<String>();
     encabezadoUbicacion.add("Proveedor");

     hubicacion = new hProveedores();
     listaProveedores = hubicacion.consultaProveedores("","*","");
     vector = new Vector();

       for(Object o: listaProveedores){
             Proveedores lin = (Proveedores)o;
             Vector<Object> unaFila = new Vector<Object>();
             unaFila.add(lin.getNombre());
             vector.add(unaFila);
         }

      dtm = new DefaultTableModel(vector,encabezadoUbicacion) {

              @Override
              public boolean isCellEditable(int row, int column) {
              return false;
                }
              }; 

      tablaProveedores.setModel(dtm);
      tablaProveedores.addMouseListener(new MouseListener()
      {

                public void mouseClicked(MouseEvent e) {
                                    if(e.getClickCount() == 2)
                                    {

                    int indice = tablaProveedores.getSelectedRow();
                                       
                                    //   list3.add(listaUbicacion.get(indice).getSinonimo());
                                       // list2.getSize();
                         listaProveedores.get(tablaProveedores.getSelectedRow()).getNombre();
                         campoTextoId.setText(listaProveedores.get(indice).getNombreCorto());
                         campoTextoP.setText((tablaProveedores.getValueAt(indice,0)).toString());
                         campoTexto.setEditable(true);

                                    }
                }

                public void mousePressed(MouseEvent e) {
                    return;
                }

                public void mouseReleased(MouseEvent e) {
                   return;
                }

                public void mouseEntered(MouseEvent e) {
                    return;
                }

                public void mouseExited(MouseEvent e) {
                   return;
                }

      }
              );

      leyendaId = new JLabel("Id");
      campoTextoId = new JTextField(10);
      campoTextoId.setEditable(false);
      leyendaP = new JLabel("Proveedor:");
      campoTextoP = new JTextField(25);
      campoTextoP.setEditable(false);
      leyenda = new JLabel("Sinónimo:");
      campoTexto = new JTextField(15);
      campoTexto.setEditable(false);
      boton = new JButton("Agregar");
      boton.addActionListener(new ActionListener(){

                public void actionPerformed(ActionEvent e) {
                 if(!campoTexto.getText().equals(""))
                 {
                    int ultimoInsertado = -1;
       // hArticuloProveedor harticuloproveedor = new hArticuloProveedor();
                    Articuloproveedor artprov = new Articuloproveedor();
                    artprov.setIdProveedor(campoTextoId.getText());
                    artprov.setSinonimo(campoTexto.getText());
                    artprov.setIdArticulo(a.getCodigo());
       // ultimoInsertado = harticuloproveedor.guardarArtProvLast(artprov);
       // artprov.setId(Long.valueOf(ultimoInsertado));
                    proveedoresGuardados.add(artprov);
                 String nombreCorto = listaProveedores.get(tablaProveedores.getSelectedRow()).getNombre();
                 String nombreCompleto = campoTexto.getText() + " - "+nombreCorto;
                 modeloList3.addElement(nombreCompleto);
                 list3.setModel(modeloList3);
                 campoTexto.setText("");
                 }
                 else
                 {
                 JOptionPane.showMessageDialog(panelPrincipal,"Falta Agregar el Sinónimo","Aviso",JOptionPane.INFORMATION_MESSAGE);
                 }
                }
      });

      fila1.add(leyendaId);
      fila1.add(campoTextoId);
      fila1.add(leyendaP);
      fila1.add(campoTextoP);
      fila1.add(leyenda);
      fila1.add(campoTexto);
      fila1.add(boton);
      panelEncabezado.add(fila1);
      leyenda1 = new JLabel("Filtrar proveedores:");
      campoTexto1 = new JTextField(25);
      boton1 = new JButton("Buscar");
      boton1.addActionListener(new ActionListener(){

                public void actionPerformed(ActionEvent e) {
                 listaProveedores.clear();
                 listaProveedores = proveedores.consultaProveedores("nombre","LIKE",campoTexto1.getText());
                    vector.removeAllElements();
                      for(Object o: listaProveedores){
             Proveedores proveedores = (Proveedores)o;
             Vector<Object> unaFila = new Vector<Object>();
             unaFila.add(proveedores.getNombre());
             vector.add(unaFila);
             dtm.fireTableDataChanged();
             tablaProveedores.setModel(dtm);


         }
                }
      
      });

       tablaProveedores.getModel().addTableModelListener(new TableModelListener()
        {

            public void tableChanged(TableModelEvent e) {
                System.out.println("Cambio");
            }

        }
                );

      fila2.add(leyenda1);
      fila2.add(campoTexto1);
      fila2.add(boton1);
      panelEncabezado.add(fila2);

      panelPrincipal.add(new JScrollPane(tablaProveedores), BorderLayout.CENTER);
      panelPrincipal.add(panelEncabezado,BorderLayout.NORTH);

      add(panelPrincipal);

    }

}

}
