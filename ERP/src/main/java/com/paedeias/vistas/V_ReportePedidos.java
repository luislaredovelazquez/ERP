/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.paedeias.vistas;

import com.ibm.icu.util.Calendar;
import com.paedeias.controladores.CGlobalConfig;
import com.paedeias.controladores.facturacion.DOMUtils;
import com.paedeias.helpers.hArticulos;
import com.paedeias.helpers.hCuentasPorCobrar;
import com.paedeias.helpers.hProveedores;
import com.paedeias.identidades.Articulos;
import com.paedeias.identidades.Proveedores;
import java.io.*;
import java.nio.charset.Charset;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;

import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.bouncycastle.util.encoders.Hex;
import org.w3c.dom.Document;
import org.w3c.dom.Element;



/**
 *
 * @author ALL
 */
public class V_ReportePedidos extends javax.swing.JPanel {

    /**
     * Creates new form V_ReportePedidos
     */
    public V_ReportePedidos() {
        initComponents();
        inicializar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jButton5 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
        jComboBox2 = new javax.swing.JComboBox();
        jComboBox3 = new javax.swing.JComboBox();
        jComboBox4 = new javax.swing.JComboBox();
        jComboBox5 = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jComboBox6 = new javax.swing.JComboBox();

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jButton2.setBackground(new java.awt.Color(11, 70, 119));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Abrir");
        jButton2.setContentAreaFilled(false);
        jButton2.setOpaque(true);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(11, 70, 119));
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Guardar Temporalmente");
        jButton3.setContentAreaFilled(false);
        jButton3.setOpaque(true);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jCheckBox1.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBox1.setForeground(new java.awt.Color(102, 102, 102));
        jCheckBox1.setText("Guardado Automático");

        jButton5.setBackground(new java.awt.Color(11, 70, 119));
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setText("Excel");
        jButton5.setContentAreaFilled(false);
        jButton5.setOpaque(true);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jCheckBox1)
                    .addComponent(jButton5))
                .addContainerGap())
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jButton4.setBackground(new java.awt.Color(11, 70, 119));
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Generar Partidas");
        jButton4.setContentAreaFilled(false);
        jButton4.setOpaque(true);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Todos", "Nacional", "Importado", "Original" }));

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton1.setBackground(new java.awt.Color(11, 70, 119));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Seleccionar todos");
        jButton1.setContentAreaFilled(false);
        jButton1.setOpaque(true);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setText("Usar criterio:");

        jRadioButton1.setBackground(new java.awt.Color(255, 255, 255));
        jRadioButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jRadioButton1.setForeground(new java.awt.Color(102, 102, 102));
        jRadioButton1.setSelected(true);
        jRadioButton1.setText("Mínimo de Piezas");

        jRadioButton2.setBackground(new java.awt.Color(255, 255, 255));
        jRadioButton2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jRadioButton2.setForeground(new java.awt.Color(102, 102, 102));
        jRadioButton2.setText("Paretto");

        jRadioButton3.setBackground(new java.awt.Color(255, 255, 255));
        jRadioButton3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jRadioButton3.setForeground(new java.awt.Color(102, 102, 102));
        jRadioButton3.setText("Ambos");

        jComboBox6.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jRadioButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox5, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2)
                    .addComponent(jRadioButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox5)
                    .addComponent(jButton1)
                    .addComponent(jComboBox6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        
        listaArticulos.clear();
        
        String nomProv1="";
        String nomProv2="";
        String nomProv3="";
        String nomProv4="";
        String nomProv5="";
        
        if(jComboBox2.isEnabled())
        nomProv1=prov1.get(jComboBox2.getSelectedIndex()).getNombreCorto();
        if(jComboBox3.isEnabled())
        nomProv2=prov2.get(jComboBox3.getSelectedIndex()).getNombreCorto();
        if(jComboBox4.isEnabled())
        nomProv3=prov3.get(jComboBox4.getSelectedIndex()).getNombreCorto();
        if(jComboBox5.isEnabled())
        nomProv4=prov4.get(jComboBox5.getSelectedIndex()).getNombreCorto();
        if(jComboBox6.isEnabled())
        nomProv5=prov5.get(jComboBox6.getSelectedIndex()).getNombreCorto();
        
        if(jRadioButton1.isSelected())
        {
        if(jComboBox1.getSelectedItem().toString().equals("Todos"))
        listaArticulos = harticulos.consultaReportePedidos("*",nomProv1,nomProv2,nomProv3,nomProv4,nomProv5);
        else if(jComboBox1.getSelectedItem().toString().equals("Nacional"))
        listaArticulos = harticulos.consultaReportePedidos("N",nomProv1,nomProv2,nomProv3,nomProv4,nomProv5);
        else if(jComboBox1.getSelectedItem().toString().equals("Original"))
        listaArticulos = harticulos.consultaReportePedidos("O",nomProv1,nomProv2,nomProv3,nomProv4,nomProv5);
        else if(jComboBox1.getSelectedItem().toString().equals("Importado"))
        listaArticulos = harticulos.consultaReportePedidos("I",nomProv1,nomProv2,nomProv3,nomProv4,nomProv5);
        }else if(jRadioButton2.isSelected())
        {
        if(jComboBox1.getSelectedItem().toString().equals("Todos"))
        listaArticulos = harticulos.consultaReportePedidos2("*",nomProv1,nomProv2,nomProv3,nomProv4,nomProv5);
        else if(jComboBox1.getSelectedItem().toString().equals("Nacional"))
        listaArticulos = harticulos.consultaReportePedidos2("N",nomProv1,nomProv2,nomProv3,nomProv4,nomProv5);
        else if(jComboBox1.getSelectedItem().toString().equals("Original"))
        listaArticulos = harticulos.consultaReportePedidos2("O",nomProv1,nomProv2,nomProv3,nomProv4,nomProv5);
        else if(jComboBox1.getSelectedItem().toString().equals("Importado"))
        listaArticulos = harticulos.consultaReportePedidos2("I",nomProv1,nomProv2,nomProv3,nomProv4,nomProv5);
        }else
        {
        if(jComboBox1.getSelectedItem().toString().equals("Todos"))
        listaArticulos = harticulos.consultaReportePedidos3("*",nomProv1,nomProv2,nomProv3,nomProv4,nomProv5);
        else if(jComboBox1.getSelectedItem().toString().equals("Nacional"))
        listaArticulos = harticulos.consultaReportePedidos3("N",nomProv1,nomProv2,nomProv3,nomProv4,nomProv5);
        else if(jComboBox1.getSelectedItem().toString().equals("Original"))
        listaArticulos = harticulos.consultaReportePedidos3("O",nomProv1,nomProv2,nomProv3,nomProv4,nomProv5);
        else if(jComboBox1.getSelectedItem().toString().equals("Importado"))
        listaArticulos = harticulos.consultaReportePedidos3("I",nomProv1,nomProv2,nomProv3,nomProv4,nomProv5);            
        }
        
        
        
           if(!vector.isEmpty())  
                  vector.clear();    
                  int it6 = 0;
                  while(it6 < listaArticulos.size())
                  {
                  Vector<Object> vect = new Vector();
                  vect.add(listaArticulos.get(it6).getCodigo());    
                  vect.add(listaArticulos.get(it6).getDescripcion());
                  vect.add(listaArticulos.get(it6).getExistencia());
                  vect.add(listaArticulos.get(it6).getMinimoPzas());
                  vect.add(listaArticulos.get(it6).getPrecioCompra());
                  vect.add(listaArticulos.get(it6).getABC()); 
                  vect.add(listaArticulos.get(it6).getTipoEtiqueta());
                  vect.add(listaArticulos.get(it6).getClasificacion());
                  vect.add(listaArticulos.get(it6).getIdCompleto());
                  vect.add(listaArticulos.get(it6).getLineaPrincipal());
                  vect.add(listaArticulos.get(it6).getSinonimoPrincipal());
                  vect.add(listaArticulos.get(it6).getProveedor());
                  
                  precio1="";
                  precio2="";
                  precio3="";
                  precio4="";
                  precio5=""; 
                  

                  
                  if(!listaArticulos.get(it6).getClasificacion().isEmpty())
                  precio1 = leerArchivo(listaArticulos.get(it6).getClasificacion(),"listas/prov1.txt");
                  if(!listaArticulos.get(it6).getIdCompleto().isEmpty())
                  precio2 = leerArchivo(listaArticulos.get(it6).getIdCompleto(),"listas/prov2.txt");
                  if(!listaArticulos.get(it6).getLineaPrincipal().isEmpty())
                  precio3 = leerArchivo(listaArticulos.get(it6).getLineaPrincipal(),"listas/prov3.txt");
                  if(!listaArticulos.get(it6).getSinonimoPrincipal().isEmpty())
                  precio4 = leerArchivo(listaArticulos.get(it6).getSinonimoPrincipal(),"listas/prov4.txt");
                  if(!listaArticulos.get(it6).getProveedor().isEmpty())
                  precio5 = leerArchivo(listaArticulos.get(it6).getSinonimoPrincipal(),"listas/prov5.txt");
                  
                  
                  listaArticulos.get(it6).setPedidosPrecio1(precio1);
                  listaArticulos.get(it6).setUbicacion(precio2);
                  listaArticulos.get(it6).setUnidad(precio3);
                  listaArticulos.get(it6).setReportePedidos(precio4); 
                  listaArticulos.get(it6).setPedidosPrecio2(precio5); 
                      
                  vect.add(precio1);
                  vect.add(precio2);
                  vect.add(precio3);
                  vect.add(precio4);
                  vect.add(precio5);
                      
                  boolean bandera = false;
                  for(int it1=0; it1<listaReporte.size(); it1++)
                {
                if(listaArticulos.get(it6).getCodigo().equals(listaReporte.get(it1).getCodigo()))
                {
                  bandera =true;
                  it1 = listaReporte.size();
                }
                } 
                  vect.add(bandera);
                  
                  
                  vector.add(vect);
                  it6++;    
                  }
                  dtm.fireTableDataChanged();
                  
                  
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        if(listaReporte.size() == 0)
        {
            JOptionPane.showMessageDialog(null,"Por favor seleccione partidas antes de generar el reporte");
            return;
        }
        
        String nombreArchivo = JOptionPane.showInputDialog(null, "Por favor escriba el nombre del archivo \n (Verifique en la carpeta de reportes que ese archivo no exista, de lo contrario se reescribirá)");
        
        FileOutputStream fos = null;
        try {
            hCuentasPorCobrar hcc = new hCuentasPorCobrar();
            // TODO add your handling code here:
            Workbook wb = new XSSFWorkbook();
            fos = new FileOutputStream("reportePedidos\\reportePedidos"+nombreArchivo+".xlsx");
            Sheet sh = wb.createSheet(hcc.generarFecha().substring(0,10));
            
            Row encabezado = sh.createRow((short)0);
            Cell ecod = encabezado.createCell((short)0);
            ecod.setCellValue("Código");
            Cell edes = encabezado.createCell((short)1);
            edes.setCellValue("Descripción");
            Cell ecant = encabezado.createCell((short)2);
            ecant.setCellValue("Existencia");
            Cell emin = encabezado.createCell((short)3);
            emin.setCellValue("Mínimo de Piezas");
            Cell ecost = encabezado.createCell((short)4);
            ecost.setCellValue("Último Costo");
            Cell ecosabc = encabezado.createCell((short)5);
            ecosabc.setCellValue("Clasificación");
           Cell ecosabc2 = encabezado.createCell((short)6);
            ecosabc2.setCellValue("Pzas Paretto");
            
            Cell ecot1 = encabezado.createCell((short)7);
            if(jComboBox2.isEnabled())
            ecot1.setCellValue(jComboBox2.getSelectedItem().toString());
            else
            ecot1.setCellValue("Sin proveedor");  
            
            Cell ecot2 = encabezado.createCell((short)8);
            if(jComboBox3.isEnabled())
            ecot2.setCellValue(jComboBox3.getSelectedItem().toString());
            else
            ecot2.setCellValue("Sin proveedor");        
            Cell ecot3 = encabezado.createCell((short)9);
            if(jComboBox4.isEnabled())
            ecot3.setCellValue(jComboBox4.getSelectedItem().toString());
            else
            ecot3.setCellValue("Sin proveedor");        
            Cell ecot4 = encabezado.createCell((short)10);
            
            if(jComboBox5.isEnabled())
            ecot4.setCellValue(jComboBox5.getSelectedItem().toString());
            else
            ecot4.setCellValue("Sin proveedor");    
            
            Cell ecot5 = encabezado.createCell((short)11);
            if(jComboBox6.isEnabled())
            ecot5.setCellValue(jComboBox6.getSelectedItem().toString());
            else
            ecot5.setCellValue("Sin proveedor");        
            
            Cell pecot1 = encabezado.createCell((short)12);
            if(jComboBox2.isEnabled())
            pecot1.setCellValue("Precio de "+jComboBox2.getSelectedItem().toString());
            else
            pecot1.setCellValue("Sin proveedor");        
            
            Cell pecot2 = encabezado.createCell((short)13);
            if(jComboBox3.isEnabled())
            pecot2.setCellValue("Precio de "+jComboBox3.getSelectedItem().toString());
            else
            pecot2.setCellValue("Sin proveedor");        
            
            Cell pecot3 = encabezado.createCell((short)14);
            if(jComboBox4.isEnabled())
            pecot3.setCellValue("Precio de "+jComboBox4.getSelectedItem().toString());
            else
            pecot3.setCellValue("Sin proveedor");        
            
            Cell pecot4 = encabezado.createCell((short)15);
            if(jComboBox5.isEnabled())
            pecot4.setCellValue("Precio de "+jComboBox5.getSelectedItem().toString());
            else
            pecot4.setCellValue("Sin proveedor");        
            
            Cell pecot5 = encabezado.createCell((short)16);
            if(jComboBox6.isEnabled())
            pecot5.setCellValue("Precio de "+jComboBox6.getSelectedItem().toString());
            else
            pecot5.setCellValue("Sin proveedor");        
            
            Cell ganador = encabezado.createCell((short)17);
            ganador.setCellValue("Ganador");           
            
            int indice= 0;
            for (int k = 1; k < listaReporte.size()+1; k++) {
            Row row = sh.createRow((short)k);
            Cell cod = row.createCell((short)0);
            cod.setCellValue(listaReporte.get(k-1).getCodigo()); //A
            Cell des = row.createCell((short)1);
            des.setCellValue(listaReporte.get(k-1).getDescripcion()); //B
            Cell cant = row.createCell((short)2);
            cant.setCellValue(listaReporte.get(k-1).getExistencia()); //C
            Cell cmin = row.createCell((short)3);
            cmin.setCellValue(listaReporte.get(k-1).getExistencia()); //C
            Cell cost = row.createCell((short)4);
            cost.setCellValue(listaReporte.get(k-1).getPrecioCompra()); //D
            Cell cosabc = row.createCell((short)5);
            cosabc.setCellValue(listaReporte.get(k-1).getABC()); //D
            Cell cot1 = row.createCell((short)6);
            cot1.setCellValue(listaReporte.get(k-1).getTipoEtiqueta()); //F
            Cell cot11 = row.createCell((short)7);
            cot11.setCellValue(listaReporte.get(k-1).getClasificacion()); //G            
            Cell cot2 = row.createCell((short)8);
            cot2.setCellValue(listaReporte.get(k-1).getIdCompleto()); //H
            Cell cot3 = row.createCell((short)9);
            cot3.setCellValue(listaReporte.get(k-1).getLineaPrincipal()); //I
            
            Cell cot4 = row.createCell((short)10);
            cot4.setCellValue(listaReporte.get(k-1).getSinonimoPrincipal()); //J
            
            Cell cot5 = row.createCell((short)11);
            cot5.setCellValue(listaReporte.get(k-1).getProveedor()); //J
            
            Cell pcot1 = row.createCell((short)12);
            if(listaReporte.get(k-1).getPedidosPrecio1().isEmpty())
            pcot1.setCellValue(listaReporte.get(k-1).getPedidosPrecio1()); //K
            else
            pcot1.setCellValue(Double.valueOf(listaReporte.get(k-1).getPedidosPrecio1())); //I    
            Cell pcot2 = row.createCell((short)13);
            if(listaReporte.get(k-1).getUbicacion().isEmpty())
            pcot2.setCellValue(listaReporte.get(k-1).getUbicacion()); //J
            else
            pcot2.setCellValue(Double.valueOf(listaReporte.get(k-1).getUbicacion())); //J    
            Cell pcot3 = row.createCell((short)14);
            if(listaReporte.get(k-1).getUnidad().isEmpty())
            pcot3.setCellValue(listaReporte.get(k-1).getUnidad()); //K
            else
            pcot3.setCellValue(Double.valueOf(listaReporte.get(k-1).getUnidad())); //K    
            Cell pcot4 = row.createCell((short)15);
            if(listaReporte.get(k-1).getReportePedidos().isEmpty())
            pcot4.setCellValue(listaReporte.get(k-1).getReportePedidos()); //L
            else
            pcot4.setCellValue(Double.valueOf(listaReporte.get(k-1).getReportePedidos())); //L    
            
            Cell pcot5 = row.createCell((short)16);
            if(listaReporte.get(k-1).getPedidosPrecio2().isEmpty())
            pcot5.setCellValue(listaReporte.get(k-1).getPedidosPrecio2()); //L
            else
            pcot5.setCellValue(Double.valueOf(listaReporte.get(k-1).getPedidosPrecio2())); //L                
            
            Cell vganador = row.createCell((short)17);
            indice = k+1;
            vganador.setCellValue("=BUSCAR(MIN(M"+indice+":Q"+indice+"),M"+indice+":Q"+indice+",$H$1:$L$1)");     //       
            }
            wb.write(fos);
            fos.close();
        } catch (IOException ex) {
            Logger.getLogger(V_ReportePedidos.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                fos.close();
            } catch (IOException ex) {
                Logger.getLogger(V_ReportePedidos.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
         JOptionPane.showMessageDialog(null, "Reporte Generado!");
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount() == 2)
        {
            if(Boolean.valueOf(dtm.getValueAt(jTable1.getSelectedRow(), 17).toString()))
            {
            for(int it1=0; it1<listaReporte.size(); it1++)
            {
                if(listaArticulos.get(jTable1.getSelectedRow()).getCodigo().equals(listaReporte.get(it1).getCodigo()))
                {
                 listaReporte.remove(it1);
                 dtm.setValueAt(false, jTable1.getSelectedRow(), 17);
                }   
            } 
            }else
            {
            dtm.setValueAt(true, jTable1.getSelectedRow(), 17);   
            listaReporte.add(listaArticulos.get(jTable1.getSelectedRow()));
            }
            if(jCheckBox1.isSelected())
            {
                
                generarXML(new File("reportePedidosTemporales/ped"+Calendar.getInstance().get(Calendar.DAY_OF_MONTH)
                        +Calendar.getInstance().get(Calendar.MONTH)+Calendar.getInstance().get(Calendar.YEAR)+
                        +Calendar.getInstance().get(Calendar.HOUR)+Calendar.getInstance().get(Calendar.MINUTE)+".txt"));
            }
            
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int it1=0;
        while(it1 < listaArticulos.size())
        {
            dtm.setValueAt(true, it1, 17);   
            listaReporte.add(listaArticulos.get(it1));
            it1++;
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        fc.setCurrentDirectory(new File("pedidosTemporales"));
        int valor = fc.showSaveDialog(null);

        if (valor == JFileChooser.APPROVE_OPTION) {
            generarXML(fc.getSelectedFile());
        }
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        fc.setCurrentDirectory(new File("reportePedidosTemporales"));
        fc.setName("ignore_upper_case");
        int valor = fc.showOpenDialog(null);
        if(valor == JFileChooser.APPROVE_OPTION)
        {
            try {
                Document configuracion = DOMUtils.cargarArchivoConfiguracion(fc.getSelectedFile());
                
                String cadenaOriginal = configuracion.getElementsByTagName("tipo").item(0).getTextContent()+configuracion.getElementsByTagName("criterio").item(0).getTextContent()+configuracion.getElementsByTagName("elecciones").item(0).getTextContent();
                MessageDigest cript = MessageDigest.getInstance("SHA-1");
                cript.reset();
                cript.update(cadenaOriginal.getBytes("utf8"));
                String sha1 = new String(Hex.encode(cript.digest()), 
                Charset.forName("UTF-8")); 
                
             if(!sha1.equals(configuracion.getElementsByTagName("sha1").item(0).getTextContent()))
            {
             JOptionPane.showMessageDialog(null, "El contenido de este archivo no coincide con la información original que se encontraba en él", "Contenido inválido", JOptionPane.ERROR_MESSAGE);   
             return;   
            }
             
             String criterio = configuracion.getElementsByTagName("criterio").item(0).getTextContent();
             
             if(criterio.equals("Piezas"))
                 jRadioButton1.setSelected(true);
             else if(criterio.equals("Paretto"))
                 jRadioButton2.setSelected(true);
             else
                 jRadioButton3.setSelected(true);
             
             jComboBox1.setSelectedIndex(Integer.valueOf(configuracion.getElementsByTagName("tipo").item(0).getTextContent()));
             
             jButton4.doClick();
             
             String elecciones[] = cadenaOriginal.split("@");
             for(int i = 0; i<elecciones.length; i++)
             {     
               for(int o=0; o<listaArticulos.size(); o++)
               {
            if(elecciones[i].equals(listaArticulos.get(o).getCodigo()))     
                   {
            dtm.setValueAt(true, o, 17);   
            listaReporte.add(listaArticulos.get(o));
                    }
                 }
             }
                     
                
                       }catch (Exception ex) {
                Logger.getLogger(V_ReportePedidos.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JComboBox jComboBox5;
    private javax.swing.JComboBox jComboBox6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
    DefaultTableModel dtm;
    Vector vector,vectorEncabezado;
    hArticulos harticulos;
    List<Articulos> listaArticulos;
    List<Articulos> listaReporte;
    List<Proveedores> prov1;
    List<Proveedores> prov2;
    List<Proveedores> prov3;
    List<Proveedores> prov4;
    List<Proveedores> prov5;
    String precio1="";
    String precio2="";
    String precio3="";
    String precio4="";
    String precio5="";
    JFileChooser fc;
    
    public void inicializar()
    {
        vectorEncabezado = new Vector();
        vector = new Vector();
        
    prov1 = new ArrayList<Proveedores>(); 
    prov2 = new ArrayList<Proveedores>(); 
    prov3 = new ArrayList<Proveedores>(); 
    prov4 = new ArrayList<Proveedores>(); 
    prov5 = new ArrayList<Proveedores>(); 
        
        vectorEncabezado.add("Código");
        vectorEncabezado.add("Descripción");
        vectorEncabezado.add("Cantidad");
        vectorEncabezado.add("Mínimo Pzas");
        vectorEncabezado.add("Último Costo");
        vectorEncabezado.add("Clasificación");
        vectorEncabezado.add("Fecha / Pzas. Paretto");
        vectorEncabezado.add("Prov 1");
        vectorEncabezado.add("Prov 2");
        vectorEncabezado.add("Prov 3");
        vectorEncabezado.add("Prov 4");
        vectorEncabezado.add("Prov 5");
        vectorEncabezado.add("Prov 1 $");
        vectorEncabezado.add("Prov 2 $");
        vectorEncabezado.add("Prov 3 $");
        vectorEncabezado.add("Prov 4 $");        
        vectorEncabezado.add("Prov 5 $");        
        vectorEncabezado.add("Seleccionar");
        
        harticulos = new hArticulos();
        listaArticulos = new ArrayList<Articulos>();
        listaReporte = new ArrayList<Articulos>();
        
         dtm = new DefaultTableModel(vector,vectorEncabezado) {

              @Override
              public boolean isCellEditable(int row, int column) {
              return false;
                }
              
               @Override
             public Class<?> getColumnClass(int columnIndex) {
              if (columnIndex == 17) {
              return Boolean.class;
               }
               return super.getColumnClass(columnIndex);
                }
              
              };
     //   jTable1.setSelectionMode(DefaultListSelectionModel.SINGLE_SELECTION); 
    //    dtm = new DefaultTableModel(vector, vectorEncabezado);
        jTable1.setModel(dtm);  
        
        final ButtonGroup group = new ButtonGroup();
        group.add(jRadioButton1);
        group.add(jRadioButton2);
        group.add(jRadioButton3);
        
        jComboBox2.removeAllItems();
        jComboBox3.removeAllItems();
        jComboBox4.removeAllItems();
        jComboBox5.removeAllItems();
        jComboBox6.removeAllItems();
        
        hProveedores hprov = new hProveedores();
        
        if(CGlobalConfig.getProv1().equals("0"))
        jComboBox2.setEnabled(false);
        if(CGlobalConfig.getProv2().equals("0"))
        jComboBox3.setEnabled(false);
        if(CGlobalConfig.getProv3().equals("0"))
        jComboBox4.setEnabled(false);
        if(CGlobalConfig.getProv4().equals("0"))
        jComboBox5.setEnabled(false);
        if(CGlobalConfig.getProv5().equals("0"))
        jComboBox6.setEnabled(false);
        
        if(jComboBox2.isEnabled())
        prov1 = hprov.consultaProveedores("id", "=", CGlobalConfig.getProv1()); //35 RADEC
        if(jComboBox3.isEnabled())
        prov2 = hprov.consultaProveedores("id", "=", CGlobalConfig.getProv2()); // DISTRIBUIDORA DE PARTES
        if(jComboBox4.isEnabled())
        prov3 = hprov.consultaProveedores("id", "=", CGlobalConfig.getProv3()); //OPTIMO
        if(jComboBox5.isEnabled())
        prov4 = hprov.consultaProveedores("id", "=", CGlobalConfig.getProv4()); //TYC
        if(jComboBox6.isEnabled())
        prov5 = hprov.consultaProveedores("id", "=", CGlobalConfig.getProv5()); //FABIAN
        
        for(int it1=0; it1<prov1.size(); it1++)
        {
        jComboBox2.addItem(prov1.get(it1).getNombre());    
        }
        for(int it1=0; it1<prov2.size(); it1++)
        {
        jComboBox3.addItem(prov2.get(it1).getNombre());    
        }
        for(int it1=0; it1<prov3.size(); it1++)
        {
        jComboBox4.addItem(prov3.get(it1).getNombre());    
        }
        for(int it1=0; it1<prov4.size(); it1++)
        {
        jComboBox5.addItem(prov4.get(it1).getNombre());    
        }        
        for(int it1=0; it1<prov5.size(); it1++)
        {
        jComboBox6.addItem(prov5.get(it1).getNombre());    
        }        
        fc = new JFileChooser();
    }
    
         public String leerArchivo(String sinonimo,String archivo)
         {
      File expediente = null;
      FileReader fr = null;
      BufferedReader br = null;
      String precio = "";
    
      try {
         // Apertura del fichero y creacion de BufferedReader para poder
         // hacer una lectura comoda (disponer del metodo readLine()).
         expediente = new File (archivo);
         fr = new FileReader (expediente);
         br = new BufferedReader(fr);

         // Lectura del fichero
         String linea;
         boolean bandera = false;
         while((linea=br.readLine())!=null && bandera == false)
         {
         String[] catalogo = linea.split("@");   
         if(catalogo[0].equals(sinonimo))
         {
          precio = catalogo[1];         
          bandera = true;
         }
          
         }
         
      }      catch(Exception e){
         e.printStackTrace();
      }finally{
         // En el finally cerramos el fichero, para asegurarnos
         // que se cierra tanto si todo va bien como si salta 
         // una excepcion.
         try{                    
            if( null != fr ){   
               fr.close();
            }                  
         }catch (Exception e2){ 
            e2.printStackTrace();
         }
      }
         return precio;   
         }
         
          public void generarXML(File archivo)
    {

        String cadenaSeleccionados="@";
        
        for(int i=0; i<dtm.getRowCount(); i++)
        {
            
        
        if(String.valueOf(dtm.getValueAt(i, 17)).equals("true"))
        {
        cadenaSeleccionados = cadenaSeleccionados + listaArticulos.get(i).getCodigo() + "@";
        }
            
        
        }
                    
        
        
        try {
                DocumentBuilderFactory  factory  = DocumentBuilderFactory.newInstance();  
                DocumentBuilder         builder  = factory.newDocumentBuilder();  
                Document                document = builder.newDocument();    
                
            Element pedido = document.createElement("pedido");
            
            Element tipo = document.createElement("tipo");
            tipo.setTextContent(String.valueOf(jComboBox1.getSelectedIndex())); 
            pedido.appendChild(tipo);    
            
            Element criterio = document.createElement("criterio");
            String criterioElegido="";
            if(jRadioButton1.isSelected())
            criterioElegido = "Piezas";
            else if (jRadioButton2.isSelected())
            criterioElegido = "Paretto";
            else
            criterioElegido = "Ambos";    
            
            criterio.setTextContent(criterioElegido);    
            
            pedido.appendChild(criterio);    
            
            Element elecciones = document.createElement("elecciones");
            elecciones.setTextContent(cadenaSeleccionados);
            pedido.appendChild(elecciones);
            
         
            
            String cadenaOriginal = jComboBox1.getSelectedIndex()+criterioElegido+cadenaSeleccionados;
            
            
            MessageDigest cript = MessageDigest.getInstance("SHA-1");
            cript.reset();
            cript.update(cadenaOriginal.getBytes("utf8"));
            String sha1 = new String(Hex.encode(cript.digest()), 
                             Charset.forName("UTF-8")); 
            
            
            
            Element msha1 = document.createElement("sha1");
        
            msha1.setTextContent(sha1); 
            
        
            pedido.appendChild(msha1);
            document.appendChild(pedido);   
            
          try {
                DOMUtils.nuevaConfig(document, archivo);
            } catch (Exception ex) {
                Logger.getLogger(VConfiguracion.class.getName()).log(Level.SEVERE, null, ex);
            }
          
            } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(V_ReportePedidos.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NoSuchAlgorithmException ex) {
            Logger.getLogger(V_ReportePedidos.class.getName()).log(Level.SEVERE, null, ex);
        }catch (ParserConfigurationException ex) {
                Logger.getLogger(V_ReportePedidos.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
         
}
