/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.paedeias.vistas;


import com.paedeias.controladores.CGlobalConfig;
import com.paedeias.helpers.hPartidasAnticipos;
import com.paedeias.identidades.PartidasEnAnticipos;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ALL
 */
public class CatalogoArticulosAnticipos extends javax.swing.JPanel {

    /**
     * Creates new form CatalogoArticulosAnticipos
     */
    public CatalogoArticulosAnticipos() {
        initComponents();
        inicializar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setCellSelectionEnabled(true);
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 942, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 520, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
    DefaultTableModel dtm;
    Vector encabezado,vector;
    hPartidasAnticipos hpartidasreservaciones;
    List<PartidasEnAnticipos> partidas,partidasSinSurtir;
    
public void inicializar()
{
    hpartidasreservaciones =new hPartidasAnticipos();
    partidas = new ArrayList<PartidasEnAnticipos>();
    partidasSinSurtir = new ArrayList<PartidasEnAnticipos>();
    
    encabezado = new Vector<String>();
    
    encabezado.add("Código Articulo");
    encabezado.add("Descripción");
    encabezado.add("Cantidad");
    encabezado.add("Anticipo");
    encabezado.add("Fecha");
    encabezado.add("Referencia");
    encabezado.add(CGlobalConfig.getCampoa1());
    encabezado.add(CGlobalConfig.getCampoa6());

    partidas = hpartidasreservaciones.buscarPartidas();
    partidasSinSurtir = hpartidasreservaciones.buscarPartidasSinSurtir();
    
    
    vector = new Vector();
    
    dtm = new DefaultTableModel(vector,encabezado){

              @Override
              public boolean isCellEditable(int row, int column) {
              return false;
                }
              };
    
             for(Object o: partidas){
             PartidasEnAnticipos iarticulos = (PartidasEnAnticipos)o;
             Vector<Object> unaFila = new Vector<Object>();
             unaFila.add(iarticulos.getCodigo());
             unaFila.add(iarticulos.getDescripcion());
             unaFila.add(iarticulos.getCantidad());
             unaFila.add(iarticulos.getAnticipo());
             unaFila.add(iarticulos.getFecha());
             unaFila.add(iarticulos.getReferencia());
             unaFila.add(iarticulos.getPropietario());
             unaFila.add(iarticulos.getModelo());
             vector.add(unaFila);
             }
             
             for(Object o: partidasSinSurtir){
             PartidasEnAnticipos iarticulos = (PartidasEnAnticipos)o;
             Vector<Object> unaFila = new Vector<Object>();
             unaFila.add(iarticulos.getCodigo());
             unaFila.add(iarticulos.getDescripcion());
             unaFila.add(iarticulos.getCantidad());
             unaFila.add(iarticulos.getAnticipo());
             unaFila.add(iarticulos.getFecha());
             unaFila.add(iarticulos.getReferencia());
             unaFila.add(iarticulos.getPropietario());
             unaFila.add(iarticulos.getModelo());
             vector.add(unaFila);
             }             
             
    jTable1.setModel(dtm);
    dtm.fireTableDataChanged();
    
}
}