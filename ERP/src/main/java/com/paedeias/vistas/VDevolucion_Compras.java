/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.paedeias.vistas;

import com.paedeias.controladores.CConfiguracion;
import com.paedeias.controladores.CGlobalConfig;
import com.paedeias.controladores.CPrincipal;
import com.paedeias.controladores.impresiones.ImpresionCancelacionCompras;
import com.paedeias.controladores.impresiones.ImpresionVenta;
import com.paedeias.controladores.impresiones.PageableText;
import com.paedeias.helpers.*;
import com.paedeias.identidades.*;
import java.awt.GridLayout;
import java.awt.Window;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.print.PageFormat;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.io.IOException;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ALL
 */
public class VDevolucion_Compras extends javax.swing.JPanel {

    /**
     * Creates new form VAltaCompras
     */
    public VDevolucion_Compras(Compras obcompra) {
        initComponents();
        inicializar(obcompra);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox();
        jLabel19 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jButton3 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jLabel28 = new javax.swing.JLabel();
        jTextField16 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos del Artículo"));

        jLabel4.setText("Proveedor");

        jLabel19.setText("Referencia");

        jTextField12.setText("0");

        jCheckBox1.setText("Devuelta");
        jCheckBox1.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox1)
                .addContainerGap(100, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBox1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos de los Artículos Registrados"));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jButton3.setText("Eliminar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton3)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel15.setText("Partidas");

        jLabel16.setText("0000");

        jLabel17.setText("Subtotal");

        jLabel18.setText("0000.00");

        jLabel23.setText("IVA");

        jLabel24.setText("0000");

        jLabel25.setText("Total");

        jLabel26.setText("0000.00");

        jLabel29.setText("Subtotal con cargos y descuentos");

        jLabel30.setText("0000.00");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel29)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel30)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel23)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel24)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel25)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel26)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17)
                    .addComponent(jLabel18)
                    .addComponent(jLabel23)
                    .addComponent(jLabel24)
                    .addComponent(jLabel25)
                    .addComponent(jLabel26)
                    .addComponent(jLabel29)
                    .addComponent(jLabel30))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton4.setText("Devolver");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel28.setText("Observaciones");

        jButton1.setText("Ver Devueltos");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel28)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton4)
                            .addComponent(jButton1))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel28)
                            .addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        
        
        if(listapr.get(jTable2.getSelectedRow()).getIva() == 1)       
        {    
        subtotalcondesc = total / (CGlobalConfig.getIvaVenta()+1);
        subtotalcondesc = subtotalcondesc - listapr.get(jTable2.getSelectedRow()).getTotal();
        iva = subtotalcondesc * CGlobalConfig.getIvaVenta();
        total = subtotalcondesc + iva;
        }
        else
        {
        iva = 0.0;
        subtotalcondesc = total;
        subtotalcondesc = subtotalcondesc - listapr.get(jTable2.getSelectedRow()).getTotal();
        total = subtotalcondesc;
        }
        subtotal = subtotal - listapr.get(jTable2.getSelectedRow()).getTotal();
        
        jLabel18.setText(String.valueOf(df.format(subtotal)));    
        jLabel30.setText(String.valueOf(df.format(subtotalcondesc)));    
        jLabel24.setText(String.valueOf(df.format(iva)));
        jLabel26.setText(String.valueOf(df.format(total)));
        
        
        respaldopartidas.add(listapr.get(jTable2.getSelectedRow()));
        listapr.remove(jTable2.getSelectedRow());
        dtmPartidas.removeRow(jTable2.getSelectedRow());
        dtmPartidas.fireTableDataChanged();
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        try{
            
        ConexionWeb conexionweb = new ConexionWeb();
        String transaccion="";    
            
        if(respaldopartidas.size()==0)
        {
            JOptionPane.showMessageDialog(null, "No hay partidas que devolver");
            return;
        }
        
       VConfirmaAlmacenista confirmaalmacenista = new VConfirmaAlmacenista((JFrame)Window.getWindows()[0],true);
       confirmaalmacenista.setLocationRelativeTo(null);
       confirmaalmacenista.setVisible(true);
                
       if(confirmaalmacenista.isExito())
       {
       
       if(!CPrincipal.getConexion().crearTransaccion())
       return;    
       
       if(CGlobalConfig.isWeb())
       transaccion = conexionweb.iniciarTransaccion() + " "; 
           
       List<Partidas> listaImpresion = new ArrayList<Partidas>();    
           
        int indparti=0;
        while(indparti<respaldopartidas.size())
        {
            Partidas partidaImpresion = new Partidas();
            partidaImpresion.setDescripcionArticulo(respaldopartidas.get(indparti).getDescripcion());
            partidaImpresion.setCodigoArticulo(respaldopartidas.get(indparti).getArticulo());
            partidaImpresion.setCantidad(respaldopartidas.get(indparti).getCantidad());
            partidaImpresion.setConBeneficio(respaldopartidas.get(indparti).getTotal());
            listaImpresion.add(partidaImpresion);
           
           if(!CGlobalConfig.isWeb()) 
           hpartidascompras.devolver("id", "=", String.valueOf(respaldopartidas.get(indparti).getId()));
           else
           transaccion = transaccion  + hpartidascompras.crearQueryDevolver("id", "=", String.valueOf(respaldopartidas.get(indparti).getId())) + " ";
               
           Kardex renglon = new Kardex();
           kardex = hkardex.consultaUltimoRenglon("articulo", "=", respaldopartidas.get(indparti).getArticulo());
           int cantidadKardex = kardex.getExistencias() - respaldopartidas.get(indparti).getCantidad();
           
           
           
            if(kardex == null)
                {
                    //Se registra la pieza en Kardex
                    List<Articulos> listaArticulos = articulos.consultaArticulos("codigo", "=", respaldopartidas.get(indparti).getArticulo());
                    kardex = new Kardex(); 
                    kardex.setAlmacenista("");
                    kardex.setAnticipos(listaArticulos.get(0).getAnticipos());
                    kardex.setArticulo(listaArticulos.get(0).getCodigo());
                    kardex.setEntrada(0);
                    kardex.setExistencias((int)listaArticulos.get(0).getExistencia());
                    kardex.setIdArticulo(listaArticulos.get(0).getId());
                    kardex.setModificacion("Registro");
                    kardex.setMovimiento("Registro de Artículo");
                    kardex.setNoMov("1");
                    kardex.setPrecioVenta(listaArticulos.get(0).getPrecioVenta());
                    kardex.setRefFerrari("Registro");
                    kardex.setReservados((int)listaArticulos.get(0).getReservado());
                    kardex.setResponsable("1");
                    kardex.setResponsable2("Registro Automático");
                    kardex.setSalida(0);
                    kardex.setUltimoCosto(listaArticulos.get(0).getUltimoCosto());
                    kardex.setVendidoEn(0.0);
                    
                if(!CGlobalConfig.isWeb())
                hkardex.guardarEnKardex(kardex); 
                else
                transaccion = transaccion + hkardex.crearQueryGuardarEnKardexCompleto(kardex) + " ";        
                    //19
                }
           
           
           renglon.setExistencias(cantidadKardex);
           renglon.setAlmacenista("");
           renglon.setEntrada(0);
           renglon.setModificacion("Devolución de Compra con Referencia "+jTextField12.getText());
           renglon.setMovimiento("Devolución de compra con Folio "+compras.getId());
           renglon.setNoMov(String.valueOf(Long.valueOf(kardex.getNoMov())+1));
           renglon.setPrecioVenta(respaldopartidas.get(indparti).getPrecioVenta());
           renglon.setRefFerrari("Dev. Compra "+jTextField12.getText());
           renglon.setReservados(kardex.getReservados());
           renglon.setAnticipos(kardex.getAnticipos());
           renglon.setResponsable(String.valueOf(CConfiguracion.getId()));
           renglon.setSalida(respaldopartidas.get(indparti).getCantidad());
           renglon.setUltimoCosto(respaldopartidas.get(indparti).getPrecioUni());
           renglon.setResponsable2(CConfiguracion.getNombres()+" "+CConfiguracion.getApellidoP()+" "+CConfiguracion.getApellidoM());
           renglon.setVendidoEn(0.00);
           
        if(!CGlobalConfig.isWeb())
        hkardex.guardarEnKardex(renglon); 
        else
        transaccion = transaccion + hkardex.crearQueryGuardarEnKardexCompleto(renglon) + " ";  
           
           
            indparti++;
        }
  
        compras.setObservacion(jTextField16.getText());
        compras.setDevolucion(1);
        
        
       hCuentasPorPagar hcp = new hCuentasPorPagar();
       
       if(!CGlobalConfig.isWeb())
       hcp.borrarCuentasPorPagar("compra", "=", String.valueOf(compras.getId()));
       else
       transaccion = transaccion + hcp.crearQueryBorrarCuentasPorPagar("compra", "=", String.valueOf(compras.getId())) + " ";      
       
       
       CPrincipal.getConexion().finalizarTransaccion();
       
       
      if(CGlobalConfig.isWeb())
               {
               transaccion = transaccion + conexionweb.finalizarTransaccion();    
               conexionweb.escribirEnWeb(transaccion);
               }
       
       try{
       String fecha = hcompras.generarFecha();
       ImpresionCancelacionCompras impresioncc = new ImpresionCancelacionCompras();  
       impresioncc.inicializar(String.valueOf(compras.getId()), compras.getObservacion(), CConfiguracion.getNombres() + " "+ CConfiguracion.getApellidoP()+" "+CConfiguracion.getApellidoM(), 
                               confirmaalmacenista.getAlmacenista(), fecha ,listaImpresion, 
                               jComboBox3.getSelectedItem().toString(), String.valueOf(compras.getId()), compras.getNumRefComp(), 
                               jLabel18.getText(), jLabel24.getText(), jLabel26.getText(), 
                               confirmaalmacenista.getAdministrador(), 
                               jTextField16.getText(), fecha);
       PrinterJob job = PrinterJob.getPrinterJob();
       // job.setPrintable(impresioncc);
        PageFormat format = job.pageDialog(job.defaultPage());
        job.setPageable(new PageableText(impresioncc.generarCadenaImpresion(), format));
       if (job.printDialog())
            job.print();
        }   catch (IOException ex) {
                Logger.getLogger(VDevolucion_Compras.class.getName()).log(Level.SEVERE, null, ex);
            } catch (PrinterException ex) {
            Logger.getLogger(ImpresionVenta.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        JOptionPane.showMessageDialog(null,"Compra Devuelta!");
                }
               }catch(Exception e)
        {
            CPrincipal.getConexion().cancelarTransaccion();
            e.printStackTrace();            
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        VDevolucion_Compras.PVerDevoluciones seleccionar = new VDevolucion_Compras.PVerDevoluciones();
        JDialog dialogo = new JDialog((JFrame)Window.getWindows()[0],"Partidas Devueltas",true);
        dialogo.getContentPane().add(seleccionar);
        dialogo.setSize(600, 400);
        dialogo.setLocationRelativeTo((JFrame)Window.getWindows()[0]);
        dialogo.setVisible(true);  
    }//GEN-LAST:event_jButton1ActionPerformed

   
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField16;
    // End of variables declaration//GEN-END:variables
    DecimalFormat df;
    hArticulos articulos;
    hComprasMayoreo hcompras;
    hPartidasCompras hpartidascompras;
    List<Articulos> listaArticulos;
    List<Partidascompras> listapr;
    List<Partidascompras> respaldopartidas;
    Vector vector,vectorPartidas;
    hAlmacendevoluciones halmacendevoluciones;
    DefaultTableModel dtm,dtmPartidas;
    Vector<String> encabezadoArticulos,encabezadoPartidas;
    List <Proveedores> proveedor;
    hProveedores hproveedor;
    Compras compras;
    Double subtotal=0.00;
    Double subtotalcondesc=0.00;
    Double iva=0.0;
    Double total = 0.0;
    Double desadi = 0.0;
    Kardex kardex;
    hKardex hkardex;
    
    private void inicializar(Compras obcompra) {
    kardex = new Kardex();
    hkardex = new hKardex();    
    df = new DecimalFormat("#.##");
    articulos = new hArticulos();
    listaArticulos = new ArrayList<Articulos>();
    halmacendevoluciones = new hAlmacendevoluciones();
    
        encabezadoArticulos = new Vector<String>();
        encabezadoArticulos.add("Código");
        encabezadoArticulos.add("Descripción");
        encabezadoArticulos.add("Compra");
        encabezadoArticulos.add("Ultimo Costo");
        encabezadoArticulos.add("Existencia");
        encabezadoArticulos.add("En A. Devoluciones");
        encabezadoArticulos.add("Reservados");
        
        
        vector = new Vector();
        dtm = new DefaultTableModel(vector,encabezadoArticulos) {

              @Override
              public boolean isCellEditable(int row, int column) {
              return false;
                }
              };

        encabezadoPartidas = new Vector<String>();
        encabezadoPartidas.add("Código");
        encabezadoPartidas.add("Cantidad");
        encabezadoPartidas.add("Compra");
        encabezadoPartidas.add("Costo con Descuento");
        encabezadoPartidas.add("Subtotal");
        encabezadoPartidas.add("Total");
        vectorPartidas = new Vector();
        dtmPartidas = new DefaultTableModel(vectorPartidas,encabezadoPartidas) {

              @Override
              public boolean isCellEditable(int row, int column) {
              return false;
                }
              };

           jTable2.setModel(dtmPartidas);   
           listapr = new ArrayList<Partidascompras>();
           
           proveedor = new ArrayList<Proveedores>();
           hproveedor = new hProveedores();
           proveedor = hproveedor.consultaProveedores("","*","");
           
           int indprov = 0;
           while(indprov < proveedor.size()) 
           {
               jComboBox3.addItem(proveedor.get(indprov).getNombre());
               indprov++;
           }
           
           compras = new Compras();
           compras.setId(obcompra.getId());
           compras.setBanco(obcompra.getBanco());
           compras.setCargos(obcompra.getCargos());
           compras.setCheque(obcompra.getCheque());
           compras.setCodigoPedido(obcompra.getCodigoPedido());
           compras.setCodigoProveedor(obcompra.getCodigoProveedor());
           compras.setCompra(obcompra.getCompra());
           compras.setDescAdic(obcompra.getDescAdic());
           compras.setDevolucion(obcompra.getDevolucion());
           compras.setDiasCred(obcompra.getDiasCred());
           compras.setFechaCompra(obcompra.getFechaCompra());
           compras.setImporte(obcompra.getImporte());
           compras.setNumRefComp(obcompra.getNumRefComp());
           compras.setObservacion(obcompra.getObservacion());
           compras.setPedido(obcompra.getPedido());
           compras.setTipoPago(obcompra.getTipoPago());
           
           if(compras.getDevolucion() == 1)
           {
               jCheckBox1.setSelected(true);
               jButton4.setEnabled(false);
           }

           int indiproveedor = 0;
           while(indiproveedor<proveedor.size())
           {
             if(obcompra.getCodigoProveedor() == proveedor.get(indiproveedor).getId())  
             {
                 jComboBox3.setSelectedIndex(indiproveedor);
             } 
             indiproveedor++;  
           }
           
                 
           
           jLabel26.setText(String.valueOf(obcompra.getImporte()));
           jTextField12.setText(obcompra.getNumRefComp());
           jTextField16.setText(obcompra.getObservacion());

           hpartidascompras = new hPartidasCompras();
           
             respaldopartidas = new ArrayList<Partidascompras>();
             listapr = hpartidascompras.consultaPCompras("compra", "=", String.valueOf(obcompra.getId()));
           
             int indparcomp = 0;
             while(indparcomp<listapr.size())
             {
             if(listapr.get(indparcomp).getDevuelta() == 0)    
             {
             Vector<Object> unaFila = new Vector<Object>();
             unaFila.add(listapr.get(indparcomp).getArticulo());
             unaFila.add(listapr.get(indparcomp).getCantidad());
             unaFila.add(String.valueOf(listapr.get(indparcomp).getPrecioUni()));
             unaFila.add(String.valueOf(listapr.get(indparcomp).getCostoDesc()));
             unaFila.add(String.valueOf(listapr.get(indparcomp).getSubtotal()));                 
             unaFila.add(String.valueOf(listapr.get(indparcomp).getTotal()));    
             vectorPartidas.add(unaFila);
             subtotal = subtotal + listapr.get(indparcomp).getTotal();
             }
             indparcomp++;
             }
             dtmPartidas = new DefaultTableModel(vectorPartidas,encabezadoPartidas) {

              @Override
              public boolean isCellEditable(int row, int column) {
              return false;
                }
              };
            
           jTable2.setModel(dtmPartidas);
           jTable2.getSelectionModel().setSelectionInterval(0, 0);
           
           jLabel16.setText(String.valueOf(listapr.size()));
           jLabel18.setText(String.valueOf(subtotal));
           
           desadi = Double.valueOf(obcompra.getDescAdic());
           subtotalcondesc = subtotal - desadi;
           
           jLabel30.setText(String.valueOf(subtotalcondesc));
           
           iva = subtotalcondesc * CGlobalConfig.getIvaVenta();
           jLabel24.setText(String.valueOf(iva));
           
            total =  obcompra.getImporte();   
           
    }
    
    public class PVerDevoluciones extends JPanel   {

    JPanel panelPrincipal, panelEncabezado, panelTabla;
    JTable tablaCompras;
    hPartidasCompras hcompras;
    Vector vector,encabezadoCompras;
    DefaultTableModel dtm;
    List<Partidascompras> listaCompras;
    int indice = 0;

    public PVerDevoluciones(){
     tablaCompras = new JTable();
     encabezadoCompras = new Vector<String>();
     encabezadoCompras.add("Código");
     encabezadoCompras.add("Descripción");

     hcompras = new hPartidasCompras();
     listaCompras = hcompras.consultaPDevueltas("compra","=",String.valueOf(compras.getId()));
     vector = new Vector();

       for(Object o: listaCompras){
             Partidascompras lin = (Partidascompras)o;
             Vector<Object> unaFila = new Vector<Object>();
             unaFila.add(lin.getArticulo());
             unaFila.add(lin.getDescripcion());
             vector.add(unaFila);
         }

      dtm = new DefaultTableModel(vector,encabezadoCompras) {

              @Override
              public boolean isCellEditable(int row, int column) {
              return false;
                }
              };
      
      tablaCompras.setModel(dtm);
    
      tablaCompras.getColumn("Descripción").setPreferredWidth(350);

      add(new JScrollPane(tablaCompras));
      setLayout(new GridLayout());
    }

}
    
}
