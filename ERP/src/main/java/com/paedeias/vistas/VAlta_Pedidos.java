/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.paedeias.vistas;

import com.paedeias.controladores.CConfiguracion;
import com.paedeias.controladores.CGlobalConfig;
import com.paedeias.controladores.CPrincipal;
import com.paedeias.controladores.Validadores;
import com.paedeias.controladores.facturacion.DOMUtils;
import com.paedeias.helpers.*;
import com.paedeias.identidades.*;
import java.awt.Rectangle;
import java.awt.Window;
import java.io.File;
import java.io.UnsupportedEncodingException;
import java.nio.charset.Charset;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.JPanel;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import org.bouncycastle.util.encoders.Hex;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.NodeList;

/**
 *
 * @author ALL
 */
public class VAlta_Pedidos extends JPanel {

    /**
     * Creates new form VAltaCompras
     */
    public VAlta_Pedidos() {
        initComponents();
        inicializar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel19 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jTextField17 = new javax.swing.JTextField();
        jButton8 = new javax.swing.JButton();
        jLabel30 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel10 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jButton10 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jTextField11 = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jTextField13 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jTextField14 = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jTextField15 = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel28 = new javax.swing.JLabel();
        jTextField16 = new javax.swing.JTextField();
        jButton7 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jCheckBox2 = new javax.swing.JCheckBox();

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos del Artículo", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(102, 102, 102)));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setText("Buscar artículos en donde");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Sinónimo", "Código", "Descripción", "Línea" }));

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 102, 102));
        jLabel2.setText("sea");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "igual", "como" }));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 102, 102));
        jLabel3.setText("a");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mainicons/btn_buscar.png"))); // NOI18N
        jButton1.setBorderPainted(false);
        jButton1.setContentAreaFilled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        jLabel4.setText("Proveedor");

        jComboBox3.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox3ItemStateChanged(evt);
            }
        });
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(102, 102, 102));
        jLabel19.setText("Compra");

        jTextField12.setEditable(false);
        jTextField12.setText("0");

        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(102, 102, 102));
        jLabel29.setText("Busca proveedor");

        jTextField17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField17ActionPerformed(evt);
            }
        });

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mainicons/btn_buscar.png"))); // NOI18N
        jButton8.setBorderPainted(false);
        jButton8.setContentAreaFilled(false);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jLabel30.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(102, 102, 102));
        jLabel30.setText("Escala");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel29)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel2)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel30)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jComboBox2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel29)
                        .addComponent(jTextField17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel30)
                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3))
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos de Registro del Artículo", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(102, 102, 102)));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(102, 102, 102));
        jLabel8.setText("Descuento");

        jTextField4.setText("0");
        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });

        jTextField5.setText("0");
        jTextField5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField5ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(102, 102, 102));
        jLabel7.setText("Precio Compra");

        jTextField2.setText("1");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 102, 102));
        jLabel5.setText("Cantidad");

        jButton9.setText("QI");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 102, 102));
        jLabel6.setText("Cargos");

        jTextField3.setText("0");
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jCheckBox1.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBox1.setForeground(new java.awt.Color(102, 102, 102));
        jCheckBox1.setText("Cascada");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(102, 102, 102));
        jLabel10.setText("Precio Total");

        jTextField6.setEditable(false);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField6)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 8, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)
                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8)
                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton9)
                        .addComponent(jCheckBox1)
                        .addComponent(jLabel10)
                        .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Define el precio de venta"));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(102, 102, 102));
        jLabel9.setText("Descuento");

        jTextField7.setText("0");
        jTextField7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField7ActionPerformed(evt);
            }
        });

        jTextField8.setText("0");
        jTextField8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField8ActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(102, 102, 102));
        jLabel11.setText("Importe Total con IVA");

        jButton10.setText("QI");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(102, 102, 102));
        jLabel13.setText("Stock Mínimo");

        jTextField10.setText("0");

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(102, 102, 102));
        jLabel14.setText("Stock Máximo");

        jTextField11.setText("0");

        jLabel31.setText("|");

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(102, 102, 102));
        jLabel12.setText("Utilidad");

        jTextField9.setText("0");
        jTextField9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel31)
                .addGap(26, 26, 26)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel13)
                        .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel14)
                        .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel31))
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel12)
                        .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel11)
                        .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9)
                        .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton10))))
        );

        jButton3.setBackground(new java.awt.Color(11, 70, 119));
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Eliminar");
        jButton3.setContentAreaFilled(false);
        jButton3.setOpaque(true);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(11, 70, 119));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Agregar");
        jButton2.setContentAreaFilled(false);
        jButton2.setOpaque(true);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 786, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton2)))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos de los Artículos Registrados", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(102, 102, 102)));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(102, 102, 102));
        jLabel15.setText("Partidas");

        jLabel16.setText("0000");

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(102, 102, 102));
        jLabel17.setText("Subtotal");

        jLabel18.setText("0000.00");

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(102, 102, 102));
        jLabel23.setText("IVA");

        jLabel24.setText("0000");

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(102, 102, 102));
        jLabel25.setText("Total");

        jLabel26.setText("0000.00");

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(102, 102, 102));
        jLabel20.setText("Descuento adicional");

        jTextField13.setText("0.0");

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(102, 102, 102));
        jLabel21.setText("Descuento adicional (en %)");

        jTextField14.setText("0");

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(102, 102, 102));
        jLabel22.setText("%");

        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(102, 102, 102));
        jLabel27.setText("Cargo Adicional");

        jTextField15.setText("0.0");

        jButton6.setBackground(new java.awt.Color(11, 70, 119));
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Aplicar");
        jButton6.setContentAreaFilled(false);
        jButton6.setOpaque(true);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel24)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel25)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel26))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel27)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton6)))
                .addContainerGap(70, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17)
                    .addComponent(jLabel18)
                    .addComponent(jLabel23)
                    .addComponent(jLabel24)
                    .addComponent(jLabel25)
                    .addComponent(jLabel26))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21)
                    .addComponent(jTextField14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22)
                    .addComponent(jLabel27)
                    .addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jButton4.setBackground(new java.awt.Color(11, 70, 119));
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Guardar");
        jButton4.setContentAreaFilled(false);
        jButton4.setOpaque(true);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(102, 102, 102));
        jLabel28.setText("Observaciones");

        jButton7.setBackground(new java.awt.Color(11, 70, 119));
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setText("Cancelar");
        jButton7.setContentAreaFilled(false);
        jButton7.setOpaque(true);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel28)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, 391, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton4)
                            .addComponent(jButton7))
                        .addGap(0, 3, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel28)
                            .addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Archivo", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(102, 102, 102)));

        jButton11.setBackground(new java.awt.Color(11, 70, 119));
        jButton11.setForeground(new java.awt.Color(255, 255, 255));
        jButton11.setText("Abrir");
        jButton11.setContentAreaFilled(false);
        jButton11.setOpaque(true);
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton12.setBackground(new java.awt.Color(11, 70, 119));
        jButton12.setForeground(new java.awt.Color(255, 255, 255));
        jButton12.setText("Guardar en Archivo");
        jButton12.setContentAreaFilled(false);
        jButton12.setOpaque(true);
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jCheckBox2.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jCheckBox2.setForeground(new java.awt.Color(102, 102, 102));
        jCheckBox2.setText("Guardado Automático");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCheckBox2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton11)
                .addGap(6, 6, 6))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jButton11)
                .addComponent(jButton12)
                .addComponent(jCheckBox2))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        bandera = false;
               String valores [] = {"sinonimo","codigo","descripcion","lineaPrincipal"};
        String comparadores [] = {"=","LIKE"};
        
        String campo = valores[jComboBox1.getSelectedIndex()];
        String compara = comparadores[jComboBox2.getSelectedIndex()];
        String condicion = jTextField1.getText();
        
        listaArticulos.clear();
        if(campo.equals("sinonimo"))
        listaArticulos = harticuloproveedor.consultaArticulos(condicion);
        else
        listaArticulos = articulos.consultaArticulos(campo,compara,condicion);
        vector = new Vector();

         for(Object o: listaArticulos){
             Articulos iarticulos = (Articulos)o;
             Vector<Object> unaFila = new Vector<Object>();
             unaFila.add(iarticulos.getCodigo());
             unaFila.add(iarticulos.getDescripcion());
             unaFila.add(iarticulos.getLineaPrincipal());
             unaFila.add(df.format(iarticulos.getPrecioCompra()));
             unaFila.add(df.format(iarticulos.getUltimoCosto()));
             unaFila.add(iarticulos.getExistencia());
             ivaArticulo = iarticulos.getIva();
             
          /*   int acumulado = 0;
             List<Almacendevoluciones> listadev = halmacendevoluciones.consultaPartidas("codigoArticulo", "=", iarticulos.getCodigo());
             int suma=0;
             while(suma<listadev.size())
             {
                 acumulado = acumulado + listadev.get(suma).getCantidad();
                 suma++;
             } */
             unaFila.add(iarticulos.getAlmacenDevoluciones());
             unaFila.add(iarticulos.getReservado());
             vector.add(unaFila);
         }
         
            dtm = new DefaultTableModel(vector,encabezadoArticulos) {

              @Override
              public boolean isCellEditable(int row, int column) {
              return false;
                }
              };

           jTable1.setModel(dtm);
           jTable1.getSelectionModel().setSelectionInterval(0, 0);
           jTable1.getColumn("Descripción").setPreferredWidth(400);
           bandera = true; 
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if(jTable1.getSelectedRow() == -1)
        {
            JOptionPane.showMessageDialog(null, "Por favor seleccione primero una fila");
            return;
        }
        
        if(jComboBox3.getSelectedIndex() == -1)
        {
            JOptionPane.showMessageDialog(null, "Por favor seleccione primero un proveedor");
            return;            
        }
        
        if(!bajarPartida)
        {
        JOptionPane.showMessageDialog(null, "Por favor de enter en los campos precio compra, descuento o cargos antes de bajar esta partida");
        return;            
        }
        
        boolean banderaValidador = false;
        for(int i=0; i<listapr.size(); i++)
        {
            if(listapr.get(i).getArticulo().equals(listaArticulos.get(jTable1.getSelectedRow()).getCodigo()))
                banderaValidador=true;
        }
        
        if(banderaValidador)
        {
            JOptionPane.showMessageDialog(null, "Este código ya se encuentra en la lista de partidas");
           return; 
        }
        
           Kardex ultimoRenglon = hkardex.consultaUltimoRenglon("articulo", "=", listaArticulos.get(jTable1.getSelectedRow()).getCodigo());
        
        if(ultimoRenglon.getUltimoCosto() > Double.valueOf(jTextField6.getText()))
        {
        VEleccionPCompra veleccionpcompra = new VEleccionPCompra((JFrame)Window.getWindows()[0],true);
        veleccionpcompra.setLocationRelativeTo(null);
        veleccionpcompra.setVisible(true);
        
        if(veleccionpcompra.isBandera())
        {
            if(veleccionpcompra.getEleccion() == 1)
            {
               jTextField8.setText(df.format(ultimoRenglon.getPrecioVenta()));
               porcostodesc = ultimoRenglon.getUltimoCosto();
               jTextField9.setText("-1");
            }
            else if(veleccionpcompra.getEleccion() == 2)
            {
               jTextField8.setText(df.format(veleccionpcompra.getPrecio()));
               jTextField9.setText("-1");                
            }
        }else
            return;
        }
        
        bandera = false;
        Partidascomprasmayoreo pc = new Partidascomprasmayoreo();
        
        pc.setDescuento(Double.valueOf(porcentajeDesc));
     //   double descarti = (Double.valueOf(jTextField5.getText())/100) * Double.valueOf(jTextField4.getText());       
        
        pc.setDescuentoArti(descuento);
        
        
        pc.setPorcCargo(porcentajeCosto);
     //   double cargoarti = (Integer.parseInt(jTextField3.getText())/100) * Double.valueOf(jTextField4.getText());
                
        pc.setCargoArticulo(cargos);
        
        // double porcostodesc = Double.valueOf(jTextField4.getText()) +cargoarti - descarti;
    /*    if(jCheckBox1.isSelected())
        {
        porcostodesc = porcostodesc - ((proveedor.get(jComboBox3.getSelectedIndex()).getDesc1().doubleValue() /100  )* porcostodesc);    
        porcostodesc = porcostodesc - ((proveedor.get(jComboBox3.getSelectedIndex()).getDesc2().doubleValue()/100)* porcostodesc);
        porcostodesc = porcostodesc - ((proveedor.get(jComboBox3.getSelectedIndex()).getDesc3().doubleValue()/100)* porcostodesc);
        porcostodesc = porcostodesc - ((proveedor.get(jComboBox3.getSelectedIndex()).getDesc4().doubleValue()/100)* porcostodesc);
        porcostodesc = porcostodesc - ((proveedor.get(jComboBox3.getSelectedIndex()).getDesc5().doubleValue()/100)* porcostodesc);
        porcostodesc = porcostodesc - ((proveedor.get(jComboBox3.getSelectedIndex()).getDesc6().doubleValue() /100)* porcostodesc);
        pc.setCascada(1);
        }else
        pc.setCascada(0);     */       
        
        pc.setCascada(cascada);
        String cadenaCascada="SIN CASCADA";
        if(cascada==1)
        {
        cadenaCascada = "C "+proveedor.get(jComboBox3.getSelectedIndex()).getDesc1()+"+"+proveedor.get(jComboBox3.getSelectedIndex()).getDesc2()+"+"+proveedor.get(jComboBox3.getSelectedIndex()).getDesc3()+"+"+
                              proveedor.get(jComboBox3.getSelectedIndex()).getDesc4()+"+"+proveedor.get(jComboBox3.getSelectedIndex()).getDesc5()+"+"+proveedor.get(jComboBox3.getSelectedIndex()).getDesc6();   
        }    
        pc.setCadenaCascada(cadenaCascada);
        pc.setCostoDesc(porcostodesc);
        pc.setPrecioUni(Double.valueOf(jTextField4.getText())); 
        pc.setIva(listaArticulos.get(jTable1.getSelectedRow()).getIva());  
        pc.setArticulo(listaArticulos.get(jTable1.getSelectedRow()).getCodigo());
        pc.setCantidad(Integer.valueOf(jTextField2.getText()));
        pc.setSubtotal(Double.valueOf(pc.getCostoDesc()*pc.getCantidad()));
        pc.setMontoIva(pc.getSubtotal() * (pc.getIva().doubleValue() / 100));
        pc.setTotal(pc.getMontoIva() + pc.getSubtotal());
        
        pc.setPrecioCompra(Double.valueOf(jTextField4.getText()));
        pc.setUtilidad(Double.valueOf(jTextField9.getText()));
        pc.setStockMin(Integer.valueOf(jTextField10.getText()));
        pc.setStockMax(Integer.valueOf(jTextField11.getText()));
        
        // pc.setCompra(Long.valueOf(jTextField4.getText())); //poner id de la compra al final de la partida
        
     //   double cargo = 0;
     //   double descuento = 0;asdsad
     //   double importeConIva=Double.valueOf(jTextField8.getText());
     //   cargo = importeConIva * Double.valueOf(jTextField9.getText());
     //   descuento = importeConIva * (Double.valueOf(jTextField7.getText())/100);
     //   importeConIva = importeConIva + cargo - descuento;
     //   jTextField8.setText(df.format(importeConIva));
     //   listaArticulos.get(jTable1.getSelectedRow()).setPrecioVenta(Double.valueOf(jTextField8.getText()));
        pc.setPrecioVenta(Double.valueOf(jTextField8.getText()));
        pc.setDescripcion(listaArticulos.get(jTable1.getSelectedRow()).getDescripcion());
        System.out.println(pc.getPrecioVenta());
        
     //    actualizarArticulos.add(listaArticulos.get(jTable1.getSelectedRow()));
         
        if(!listapr.isEmpty())
        {
            for(int i=0; i<listapr.size(); i++)
            {
                if(pc.getArticulo().equals(listapr.get(i).getArticulo()) &&
                   Double.compare(pc.getPrecioCompra(),listapr.get(i).getPrecioCompra()) == 0 &&
                   Double.compare(pc.getPrecioVenta(),listapr.get(i).getPrecioVenta())==0)     
                                        {
                    JOptionPane.showMessageDialog(null, "No se puede agregar el mismo artículo con el mismo precio y el mismo costo");
                    return;
                }
            }
        }

         
         
         listapr.add(pc);
        
            Vector<Object> unaFila = new Vector<Object>();
             unaFila.add(pc.getArticulo());
             unaFila.add(pc.getDescripcion());
             unaFila.add(pc.getCantidad());
             unaFila.add(String.valueOf(df.format(pc.getPrecioUni())));
             unaFila.add(String.valueOf(df.format(pc.getDescuento())));
             unaFila.add(pc.getCadenaCascada());    
             unaFila.add(String.valueOf(df.format(pc.getCargoArticulo())));
             unaFila.add(String.valueOf(df.format(pc.getCostoDesc())));
             unaFila.add(String.valueOf(df.format(pc.getSubtotal()))); 
             unaFila.add(String.valueOf(df.format(pc.getIva()))); 
             unaFila.add(String.valueOf(df.format(pc.getMontoIva()))); 
             unaFila.add(String.valueOf(df.format(pc.getTotal())));
             
         //    if(String.valueOf(pc.getSubtotal()).length() > 7)
        //     unaFila.add(String.valueOf(pc.getSubtotal()).substring(0, 7));
       //      else
                             
       //      if(String.valueOf(pc.getTotal()).length() > 7)
       //      unaFila.add(String.valueOf(pc.getTotal()).substring(0, 7));
       //      else
                 
             vectorPartidas.add(unaFila);
             dtmPartidas = new DefaultTableModel(vectorPartidas,encabezadoPartidas) {

              @Override
              public boolean isCellEditable(int row, int column) {
              return false;
                }
              };
            
              jTable2.setModel(dtmPartidas);
              int row =  jTable2.getRowCount () - 1;
              Rectangle rect = jTable2.getCellRect(row, 0, true);
              jTable2.scrollRectToVisible(rect);
              jTable2.clearSelection();
              jTable2.setRowSelectionInterval(row, row);
              jTable2.getColumn("Descripción").setPreferredWidth(270);
              
              
              
          // jTable2.getSelectionModel().setSelectionInterval(jTable2.getRowCount()-1, jTable2.getRowCount()-1);
           
          subtotal =  subtotal + pc.getSubtotal();
          
          iva = iva + pc.getMontoIva();
          total = total + pc.getTotal();
          
         
          
          jLabel16.setText(String.valueOf(listapr.size()));
          jLabel18.setText(df.format(subtotal));
          jLabel24.setText(df.format(iva));
          jLabel26.setText(df.format(total));
          if(jCheckBox1.isSelected())
             jCheckBox1.setSelected(false);
          jTextField2.setText("1");
          jTextField9.setText("0");
          bandera = true; 
          bajarPartida = false;  
         
          if(jCheckBox2.isSelected())
          {
              generarXML(new File("pedidosTemporales/"+jTextField12.getText()+".xml"));
          }
          
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
          if(jTable2.getSelectedRow() == -1)
        {
            JOptionPane.showMessageDialog(null, "Por favor seleccione primero una fila");
            return;
        }
          
              
        iva = iva - listapr.get(jTable2.getSelectedRow()).getMontoIva();
        subtotal = subtotal-listapr.get(jTable2.getSelectedRow()).getSubtotal();
        total = total - listapr.get(jTable2.getSelectedRow()).getTotal();
        
        
        jLabel18.setText(String.valueOf(df.format(subtotal)));    
        jLabel24.setText(String.valueOf(df.format(iva)));
        jLabel26.setText(String.valueOf(df.format(total)));
  
        listapr.remove(jTable2.getSelectedRow());
     //   actualizarArticulos.remove(jTable2.getSelectedRow());
        dtmPartidas.removeRow(jTable2.getSelectedRow());
        dtmPartidas.fireTableDataChanged();
        jTable2.getColumn("Descripción").setPreferredWidth(270);
      /*     total = total - listapr.get(jTable2.getSelectedRow()).getTotal();
      
           jLabel26.setText(String.valueOf(df.format(total)));    
           
           if(jCheckBox2.isSelected())
           subtotal =  total/(1+CGlobalConfig.getIvaVenta());
           else
           subtotal = total; 
           
           if(jCheckBox2.isSelected())
           iva = total - subtotal;
           else
           iva = 0.0;       
           jLabel24.setText(String.valueOf(df.format(iva)));
           jLabel18.setText(String.valueOf(df.format(subtotal)));  */
           jTextField2.setText("1");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
                try   
        {
        
        if(listapr.size()==0)
        {
            JOptionPane.showMessageDialog(null, "No hay partidas que guardar");
            return;
        }
        
        if(jComboBox3.getSelectedIndex() == -1)
        {
            JOptionPane.showMessageDialog(null, "Por favor seleccione primero un proveedor");
            return;
        }
               
        jButton4.setEnabled(false);
        ComprasMayoreo comprafinal = new ComprasMayoreo();    

        comprafinal.setTipoPago("Crédito");    
        comprafinal.setCheque(" ");
        comprafinal.setBanco(" ");           
        comprafinal.setCargos(Double.valueOf(jTextField15.getText()));    
        comprafinal.setCodigoPedido((long)0);
        comprafinal.setCodigoProveedor(proveedor.get(jComboBox3.getSelectedIndex()).getId());
        comprafinal.setCompra(0);
        comprafinal.setDescAdic(String.valueOf(desadi));
        comprafinal.setDevolucion(0);
        comprafinal.setDiasCred(proveedor.get(jComboBox3.getSelectedIndex()).getDiasCredito());
        comprafinal.setImporte(total);
        comprafinal.setNumRefComp(jTextField12.getText());
        comprafinal.setPedido(0);
        comprafinal.setObservacion(jTextField16.getText());
        comprafinal.setFactura("");
        comprafinal.setIdUsuario(String.valueOf(CConfiguracion.getId()));
        comprafinal.setTn("SIN TN");
        
        int cantidadArticulo = 0;
        for(int i=0; i<listapr.size();i++)
        {
            cantidadArticulo = cantidadArticulo + listapr.get(i).getCantidad();
        }
        
        
        comprafinal.setCantidadArticulos(String.valueOf(cantidadArticulo));
        

        ConexionWeb conexionweb = new ConexionWeb();
        String transaccion="";
        
        if(!CPrincipal.getConexion().crearTransaccion())
        return;
        
        if(CGlobalConfig.isWeb())
        transaccion = conexionweb.iniciarTransaccion();
        
        
        int numcompra = 0;
        if(!CGlobalConfig.isWeb())
        numcompra = hcompras.guardarComprasLast(comprafinal);      
         else            
            {
        transaccion = transaccion + hcompras.crearQueryGuardar(comprafinal) + " ";
        transaccion = transaccion + conexionweb.ultimoId() + " ";
            }
        
        
        int indparti=0;
        while(indparti<listapr.size())
        {
            
            
            
        if(!CGlobalConfig.isWeb())
        {
            listapr.get(indparti).setCompra((long)numcompra);
            hpartidascompras.guardarPCompras(listapr.get(indparti));     
        }else
        {
        transaccion = transaccion + hpartidascompras.crearQueryPCompras(listapr.get(indparti)) + " ";   
        }           
            indparti++;
        }
        CPrincipal.getConexion().finalizarTransaccion();
        
        if(CGlobalConfig.isWeb())
               {
               transaccion = transaccion + conexionweb.finalizarTransaccion();    
               conexionweb.escribirEnWeb(transaccion);
               numcompra = (int)hcompras.consultaComprasUltima();
               }
        
        
        JOptionPane.showMessageDialog(null,"Compra Guardada con Folio "+numcompra);
        limpiar();
        } catch(Exception e)
        {
            CPrincipal.getConexion().cancelarTransaccion();
            e.printStackTrace();            
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void limpiar()
    {
        
        listapr.clear();
        listaArticulos.clear();
        jComboBox1.setSelectedIndex(0);
        jComboBox2.setSelectedIndex(0);
        jTextField1.setText("");
        jComboBox3.setSelectedIndex(0);
        jTextField12.setText("0");
        vector.removeAllElements();
        dtm.fireTableDataChanged();
        jTextField2.setText("1");
        jTextField3.setText("0");
        jTextField4.setText("0");
        jTextField5.setText("0");
        jTextField10.setText("0");
        jTextField11.setText("0");
        jTextField7.setText("0");
        jTextField8.setText("0");
        jTextField9.setText("0");
        vectorPartidas.removeAllElements();
        dtmPartidas.fireTableDataChanged();
        jLabel16.setText("0000");
        jLabel18.setText("0000.00");
        jLabel24.setText("0000");
        jLabel26.setText("0000.00");
        jTextField13.setText("0.0");
        jTextField14.setText("0");
        jTextField15.setText("0.0");
        jTextField16.setText("");
        
        subtotal=0.00;
        iva=0.0;
        total = 0.0;
        desadi = 0.0;

    }
    
    
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        double totalnuevo = Double.valueOf(jLabel18.getText()) + Double.valueOf(jTextField15.getText()) - Double.valueOf(jTextField13.getText()) -
                            (Double.valueOf(jLabel18.getText()) * Double.valueOf(jTextField14.getText())/100);  
        
        desadi = (Double.valueOf(jLabel18.getText()) * Double.valueOf(jTextField14.getText())) + Double.valueOf(jTextField13.getText());
        
        subtotal = totalnuevo;
     //   if(String.valueOf(total).length() > 7)
     //      jLabel26.setText(String.valueOf(total).substring(0, 7));
     //      else
           jLabel18.setText(df.format(subtotal));
           
           iva = subtotal * CGlobalConfig.getIvaVenta();
    //       if(String.valueOf(iva).length() > 7)
    //       jLabel24.setText(String.valueOf(iva).substring(0, 7));
    //       else
           jLabel24.setText(df.format(iva));
    
           total = subtotal + iva;
  //         if(String.valueOf(total).length() > 7)
  //         jLabel26.setText(String.valueOf(total).substring(0, 7));
  //         else
           jLabel26.setText(df.format(total));
        
        jTextField13.setEditable(false);
        jTextField14.setEditable(false);
        jTextField15.setEditable(false);
        jButton6.setEnabled(false);
        if(jCheckBox2.isSelected())
        {
        generarXML(new File("pedidosTemporales/"+jTextField12.getText()+".xml"));
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        limpiar();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed

        // TODO add your handling code here:
        if(!proveedor.isEmpty())
        {
            proveedor.clear();
            jComboBox3.removeAllItems();
        }
        
        proveedor = hproveedor.consultaProveedores("nombre","LIKE",jTextField17.getText());
           
        if(!proveedor.isEmpty())
        {
        
           int indprov = 0;
           while(indprov < proveedor.size()) 
           {
               jComboBox3.addItem(proveedor.get(indprov).getNombre());
               indprov++;
           }
         
           
           
        }  
           
        
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jComboBox3ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox3ItemStateChanged
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jComboBox3ItemStateChanged

    private void jTextField17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField17ActionPerformed
        // TODO add your handling code here:
        jButton8.doClick();
    }//GEN-LAST:event_jTextField17ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
        jButton1.doClick();
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        // TODO add your handling code here:
        if(jComboBox3.getSelectedIndex() == -1)
        {
            JOptionPane.showMessageDialog(null, "No hay proveedor seleccionado");
            return;
        }
        jComboBox4.removeAllItems();
        jComboBox4.addItem(proveedor.get(jComboBox3.getSelectedIndex()).getDesc1());
        jComboBox4.addItem(proveedor.get(jComboBox3.getSelectedIndex()).getDesc2());
        jComboBox4.addItem(proveedor.get(jComboBox3.getSelectedIndex()).getDesc3());
        jComboBox4.addItem(proveedor.get(jComboBox3.getSelectedIndex()).getDesc4());
        jComboBox4.addItem(proveedor.get(jComboBox3.getSelectedIndex()).getDesc5());
        jComboBox4.addItem(proveedor.get(jComboBox3.getSelectedIndex()).getDesc6());
    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void jTextField9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField9ActionPerformed
        // TODO add your handling code here:
        double utilidad = 0;
        double descuentoVenta = 0;
        importeConIva=Double.valueOf(jTextField8.getText());
  //      utilidad = importeConIva * ((Double.valueOf(jTextField9.getText() )/100));
  //      descuentoVenta = importeConIva * ((Double.valueOf(jTextField7.getText())/100));
  //      importeConIva = importeConIva + utilidad - descuentoVenta;
        
        descuentoVenta = importeConIva * ((Double.valueOf(jTextField7.getText())/100));             
        importeConIva = importeConIva - descuentoVenta;
        utilidad = ((Double.valueOf(jTextField9.getText() )/100)) * importeConIva;
        importeConIva = importeConIva + utilidad;
        
        
        jTextField8.setText(df.format(importeConIva));
        jTextField9.setText("0");
        jTextField7.setText("0");
    }//GEN-LAST:event_jTextField9ActionPerformed

    private void jTextField7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField7ActionPerformed
        // TODO add your handling code here:
        double utilidad = 0;
        double descuentoVenta = 0;
        importeConIva=Double.valueOf(jTextField8.getText());
        // utilidad = importeConIva * ((Double.valueOf(jTextField9.getText() )/100));
        // descuentoVenta = importeConIva * ((Double.valueOf(jTextField7.getText())/100));
        // importeConIva = importeConIva + utilidad - descuentoVenta;
        
        descuentoVenta = importeConIva * ((Double.valueOf(jTextField7.getText())/100));             
        importeConIva = importeConIva - descuentoVenta;
        utilidad = ((Double.valueOf(jTextField9.getText() )/100)) * importeConIva;
        importeConIva = importeConIva + utilidad;
        
        jTextField8.setText(df.format(importeConIva));
        jTextField9.setText("0");
        jTextField7.setText("0");
    }//GEN-LAST:event_jTextField7ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        
        
        double sinIva = Double.valueOf(jTextField4.getText());
        sinIva = sinIva / (1+CGlobalConfig.getIvaVenta());
        jTextField4.setText(df.format(sinIva));
        
        descuento = (Double.valueOf(jTextField5.getText())/100) * Double.valueOf(jTextField4.getText());              
        porcostodesc = Double.valueOf(jTextField4.getText()) - descuento;
        cargos = (Double.valueOf(jTextField3.getText())/100) * porcostodesc;
        porcostodesc = porcostodesc + cargos;
        
        if(jCheckBox1.isSelected())
        {
        porcostodesc = porcostodesc - ((proveedor.get(jComboBox3.getSelectedIndex()).getDesc1().doubleValue() /100  )* porcostodesc);    
        porcostodesc = porcostodesc - ((proveedor.get(jComboBox3.getSelectedIndex()).getDesc2().doubleValue()/100)* porcostodesc);
        porcostodesc = porcostodesc - ((proveedor.get(jComboBox3.getSelectedIndex()).getDesc3().doubleValue()/100)* porcostodesc);
        porcostodesc = porcostodesc - ((proveedor.get(jComboBox3.getSelectedIndex()).getDesc4().doubleValue()/100)* porcostodesc);
        porcostodesc = porcostodesc - ((proveedor.get(jComboBox3.getSelectedIndex()).getDesc5().doubleValue()/100)* porcostodesc);
        porcostodesc = porcostodesc - ((proveedor.get(jComboBox3.getSelectedIndex()).getDesc6().doubleValue() /100)* porcostodesc);
        }
        
        
        
    //    jTextField6.setText(df.format(porcostodesc));
   //     importeConIva=(porcostodesc * 1.3) * (1 + CGlobalConfig.getIvaVenta()); 
        
        
                jTextField6.setText(df.format(porcostodesc));
        importeConIva=porcostodesc+(porcostodesc * 0.3);
      //  System.out.println(porcostodesc);
        importeConIva=importeConIva+(importeConIva * CGlobalConfig.getIvaVenta());
      //  System.out.println(importeConIva);
        jTextField8.setText(df.format(importeConIva));
        
    //    jTextField8.setText(df.format(importeConIva));
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        double sinIva = Double.valueOf(jTextField8.getText());
        sinIva = sinIva / (1+CGlobalConfig.getIvaVenta());
        jTextField8.setText(df.format(sinIva));
        
        // TODO add your handling code here:
        double utilidad = 0;
        double descuentoVenta = 0;
        importeConIva=Double.valueOf(jTextField8.getText());
        utilidad = importeConIva * ((Double.valueOf(jTextField9.getText() )/100));
        descuentoVenta = importeConIva * (Double.valueOf(jTextField7.getText())/100);
        importeConIva = importeConIva + utilidad - descuentoVenta;
        jTextField8.setText(df.format(importeConIva));
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
        if(jTable1.getSelectedRow() == -1)
         {
         JOptionPane.showMessageDialog(null, "Por favor verifique que exista un artículo seleccionado");    
         return;           
         }
        
        if(!Validadores.validarEntero("Descuento", jTextField5.getText()))
        return;
        if(!Validadores.validarDoble("Precio Compra", jTextField4.getText()))
        return; 
        if(!Validadores.validarEntero("Cargos", jTextField3.getText()))
        return;         
        
        porcentajeDesc = Integer.valueOf(jTextField5.getText());
        porcentajeCosto = Integer.valueOf(jTextField3.getText());
        cascada = 0; 
        descuento = (Double.valueOf(jTextField5.getText())/100) * Double.valueOf(jTextField4.getText());              
        porcostodesc = Double.valueOf(jTextField4.getText()) - descuento;
        cargos = (Double.valueOf(jTextField3.getText())/100) * porcostodesc;
        porcostodesc = porcostodesc + cargos;

        
        if(jCheckBox1.isSelected())
        {
        porcostodesc = porcostodesc - ((proveedor.get(jComboBox3.getSelectedIndex()).getDesc1().doubleValue() /100  )* porcostodesc);    
        porcostodesc = porcostodesc - ((proveedor.get(jComboBox3.getSelectedIndex()).getDesc2().doubleValue()/100)* porcostodesc);
        porcostodesc = porcostodesc - ((proveedor.get(jComboBox3.getSelectedIndex()).getDesc3().doubleValue()/100)* porcostodesc);
        porcostodesc = porcostodesc - ((proveedor.get(jComboBox3.getSelectedIndex()).getDesc4().doubleValue()/100)* porcostodesc);
        porcostodesc = porcostodesc - ((proveedor.get(jComboBox3.getSelectedIndex()).getDesc5().doubleValue()/100)* porcostodesc);
        porcostodesc = porcostodesc - ((proveedor.get(jComboBox3.getSelectedIndex()).getDesc6().doubleValue() /100)* porcostodesc);
        cascada = 1;
        }
        
        
        
        jTextField6.setText(df.format(porcostodesc));
        importeConIva=porcostodesc+(porcostodesc * 0.3);
      //  System.out.println(porcostodesc);
        importeConIva=importeConIva+(importeConIva * (Double.valueOf(listaArticulos.get(jTable1.getSelectedRow()).getIva())/100));
      //  System.out.println(importeConIva);
        jTextField8.setText(df.format(importeConIva));
        bajarPartida = true;
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
        
         if(jTable1.getSelectedRow() == -1)
         {
         JOptionPane.showMessageDialog(null, "Por favor verifique que exista un artículo seleccionado");    
         return;           
         }
         
        if(!Validadores.validarEntero("Descuento", jTextField5.getText()))
        return;
        if(!Validadores.validarDoble("Precio Compra", jTextField4.getText()))
        return; 
        if(!Validadores.validarEntero("Cargos", jTextField3.getText()))
        return;      
        
        porcentajeDesc = Integer.valueOf(jTextField5.getText());
        porcentajeCosto = Integer.valueOf(jTextField3.getText());
        cascada = 0;
        descuento = (Double.valueOf(jTextField5.getText())/100) * Double.valueOf(jTextField4.getText());              
        porcostodesc = Double.valueOf(jTextField4.getText()) - descuento;
        cargos = (Double.valueOf(jTextField3.getText())/100) * porcostodesc;
        porcostodesc = porcostodesc + cargos;
        
        if(jCheckBox1.isSelected())
        {
        porcostodesc = porcostodesc - ((proveedor.get(jComboBox3.getSelectedIndex()).getDesc1().doubleValue() /100  )* porcostodesc);    
        porcostodesc = porcostodesc - ((proveedor.get(jComboBox3.getSelectedIndex()).getDesc2().doubleValue()/100)* porcostodesc);
        porcostodesc = porcostodesc - ((proveedor.get(jComboBox3.getSelectedIndex()).getDesc3().doubleValue()/100)* porcostodesc);
        porcostodesc = porcostodesc - ((proveedor.get(jComboBox3.getSelectedIndex()).getDesc4().doubleValue()/100)* porcostodesc);
        porcostodesc = porcostodesc - ((proveedor.get(jComboBox3.getSelectedIndex()).getDesc5().doubleValue()/100)* porcostodesc);
        porcostodesc = porcostodesc - ((proveedor.get(jComboBox3.getSelectedIndex()).getDesc6().doubleValue() /100)* porcostodesc);
        cascada = 1;
        }
        
        jTextField6.setText(df.format(porcostodesc));
        importeConIva=porcostodesc+(porcostodesc * 0.3);
      //  System.out.println(porcostodesc);
        importeConIva=importeConIva+(importeConIva * (Double.valueOf(listaArticulos.get(jTable1.getSelectedRow()).getIva())/100));
      //  System.out.println(importeConIva);
        jTextField8.setText(df.format(importeConIva));
        bajarPartida = true;
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
        
         if(jTable1.getSelectedRow() == -1)
         {
         JOptionPane.showMessageDialog(null, "Por favor verifique que exista un artículo seleccionado");    
         return;           
         }
         
        if(!Validadores.validarEntero("Descuento", jTextField5.getText()))
        return;
        if(!Validadores.validarDoble("Precio Compra", jTextField4.getText()))
        return; 
        if(!Validadores.validarEntero("Cargos", jTextField3.getText()))
        return;       
        
        porcentajeDesc = Integer.valueOf(jTextField5.getText());
        porcentajeCosto = Integer.valueOf(jTextField3.getText());
        cascada = 0;
        descuento = (Double.valueOf(jTextField5.getText())/100) * Double.valueOf(jTextField4.getText());              
        porcostodesc = Double.valueOf(jTextField4.getText()) - descuento;
        cargos = (Double.valueOf(jTextField3.getText())/100) * porcostodesc;
        porcostodesc = porcostodesc + cargos;
        
        if(jCheckBox1.isSelected())
        {
        porcostodesc = porcostodesc - ((proveedor.get(jComboBox3.getSelectedIndex()).getDesc1().doubleValue() /100  )* porcostodesc);    
        porcostodesc = porcostodesc - ((proveedor.get(jComboBox3.getSelectedIndex()).getDesc2().doubleValue()/100)* porcostodesc);
        porcostodesc = porcostodesc - ((proveedor.get(jComboBox3.getSelectedIndex()).getDesc3().doubleValue()/100)* porcostodesc);
        porcostodesc = porcostodesc - ((proveedor.get(jComboBox3.getSelectedIndex()).getDesc4().doubleValue()/100)* porcostodesc);
        porcostodesc = porcostodesc - ((proveedor.get(jComboBox3.getSelectedIndex()).getDesc5().doubleValue()/100)* porcostodesc);
        porcostodesc = porcostodesc - ((proveedor.get(jComboBox3.getSelectedIndex()).getDesc6().doubleValue() /100)* porcostodesc);
        cascada = 1;
        }
        
         jTextField6.setText(df.format(porcostodesc));
        importeConIva=porcostodesc+(porcostodesc * 0.3);
      //  System.out.println(porcostodesc);
        importeConIva=importeConIva+(importeConIva * (Double.valueOf(listaArticulos.get(jTable1.getSelectedRow()).getIva())/100));
      //  System.out.println(importeConIva);
        jTextField8.setText(df.format(importeConIva));
        bajarPartida = true;
    }//GEN-LAST:event_jTextField5ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
        
         if(jTable1.getSelectedRow() == -1)
         {
         JOptionPane.showMessageDialog(null, "Por favor verifique que exista un artículo seleccionado");    
         return;           
         }
                 
        if(jTextField5.getText().isEmpty())
        jTextField5.setText("0");
        if(jTextField3.getText().isEmpty())
        jTextField3.setText("0");
        if(jTextField4.getText().isEmpty())
        jTextField4.setText("0");
        
        porcentajeDesc = Integer.valueOf(jTextField5.getText());
        porcentajeCosto = Integer.valueOf(jTextField3.getText());
        cascada = 0;
        descuento = (Double.valueOf(jTextField5.getText())/100) * Double.valueOf(jTextField4.getText());       
        cargos = (Double.valueOf(jTextField3.getText())/100) * Double.valueOf(jTextField4.getText());
        porcostodesc = Double.valueOf(jTextField4.getText()) +cargos - descuento;
        
        if(jCheckBox1.isSelected())
        {
        porcostodesc = porcostodesc - ((proveedor.get(jComboBox3.getSelectedIndex()).getDesc1().doubleValue() /100  )* porcostodesc);    
        porcostodesc = porcostodesc - ((proveedor.get(jComboBox3.getSelectedIndex()).getDesc2().doubleValue()/100)* porcostodesc);
        porcostodesc = porcostodesc - ((proveedor.get(jComboBox3.getSelectedIndex()).getDesc3().doubleValue()/100)* porcostodesc);
        porcostodesc = porcostodesc - ((proveedor.get(jComboBox3.getSelectedIndex()).getDesc4().doubleValue()/100)* porcostodesc);
        porcostodesc = porcostodesc - ((proveedor.get(jComboBox3.getSelectedIndex()).getDesc5().doubleValue()/100)* porcostodesc);
        porcostodesc = porcostodesc - ((proveedor.get(jComboBox3.getSelectedIndex()).getDesc6().doubleValue() /100)* porcostodesc);
        cascada = 1;
        }
        
        
        
        jTextField6.setText(df.format(porcostodesc));
        importeConIva=porcostodesc+(porcostodesc * 0.3);
      //  System.out.println(porcostodesc);
        importeConIva=importeConIva+(importeConIva * (Double.valueOf(listaArticulos.get(jTable1.getSelectedRow()).getIva())/100));
      //  System.out.println(importeConIva);
        jTextField8.setText(df.format(importeConIva));
        bajarPartida = true;
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jTextField8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField8ActionPerformed
        // TODO add your handling code here:
        double utilidad = 0;
        double descuentoVenta = 0;
        importeConIva=Double.valueOf(jTextField8.getText());
      //  utilidad = importeConIva * ((Double.valueOf(jTextField9.getText() )/100));
      //  descuentoVenta = importeConIva * (Double.valueOf(jTextField7.getText())/100);
      //  importeConIva = importeConIva + utilidad - descuentoVenta;
        descuentoVenta = importeConIva * ((Double.valueOf(jTextField7.getText())/100));             
        importeConIva = importeConIva - descuentoVenta;
        utilidad = ((Double.valueOf(jTextField9.getText() )/100)) * importeConIva;
        importeConIva = importeConIva + utilidad;
        
        jTextField8.setText(df.format(importeConIva));
        jTextField9.setText("0");
        jTextField7.setText("0");
    }//GEN-LAST:event_jTextField8ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        fc.setCurrentDirectory(new File("pedidosTemporales"));
        fc.setName("ignore_upper_case");
        int valor = fc.showOpenDialog(null);
        if(valor == JFileChooser.APPROVE_OPTION)
        {
            try {
                Document configuracion = DOMUtils.cargarArchivoConfiguracion(fc.getSelectedFile());
                
                
                String cadenaOriginal = "";
                String cadenaOriginalPartidas="";
                int vindice=0;
                String [] varregloArticulos = new String[100]; 
        for(int i=0; i<configuracion.getElementsByTagName("partida").getLength(); i++)
        {
          NodeList nodos =  configuracion.getElementsByTagName("partida").item(i).getChildNodes();
          vindice = 0;
          for(int o=0; o<nodos.getLength(); o++)
          {
            // System.out.println(nodos.item(o).getTextContent());  
            if(!nodos.item(o).getNodeName().equals("#text"))
            {
           varregloArticulos[vindice] = nodos.item(o).getTextContent();
            vindice++;
            }
          }
          
          cadenaOriginalPartidas = cadenaOriginalPartidas + varregloArticulos[7] + varregloArticulos[9] + varregloArticulos[13] + varregloArticulos[14]
                  + varregloArticulos[18] + varregloArticulos[19];
          
           }     
                
           cadenaOriginal = configuracion.getElementsByTagName("codigoProveedor").item(0).getTextContent() + 
                            configuracion.getElementsByTagName("descuentoVenta").item(0).getTextContent() +
                            configuracion.getElementsByTagName("desadi").item(0).getTextContent() +
                            configuracion.getElementsByTagName("tsubtotal").item(0).getTextContent() +
                            configuracion.getElementsByTagName("tiva").item(0).getTextContent() +
                            configuracion.getElementsByTagName("ttotal").item(0).getTextContent() +
                            cadenaOriginalPartidas;
           

           
            MessageDigest cript = MessageDigest.getInstance("SHA-1");
            cript.reset();
            cript.update(cadenaOriginal.getBytes("utf8"));
            String sha1 = new String(Hex.encode(cript.digest()), 
                             Charset.forName("UTF-8")); 
            
            if(!sha1.equals(configuracion.getElementsByTagName("sha1").item(0).getTextContent()))
            {
             JOptionPane.showMessageDialog(null, "El contenido de este archivo no coincide con la información original que se encontraba en él", "Contenido inválido", JOptionPane.ERROR_MESSAGE);   
             return;   
            }
                
                
        proveedor = hproveedor.consultaProveedores("id","=",configuracion.getElementsByTagName("codigoProveedor").item(0).getTextContent());

        if(!proveedor.isEmpty())
        {
        
           int indprov = 0;
           while(indprov < proveedor.size()) 
           {
               jComboBox3.addItem(proveedor.get(indprov).getNombre());
               indprov++;
           }
           
        jComboBox4.removeAllItems();
        jComboBox4.addItem(proveedor.get(jComboBox3.getSelectedIndex()).getDesc1());
        jComboBox4.addItem(proveedor.get(jComboBox3.getSelectedIndex()).getDesc2());
        jComboBox4.addItem(proveedor.get(jComboBox3.getSelectedIndex()).getDesc3());
        jComboBox4.addItem(proveedor.get(jComboBox3.getSelectedIndex()).getDesc4());
        jComboBox4.addItem(proveedor.get(jComboBox3.getSelectedIndex()).getDesc5());
        jComboBox4.addItem(proveedor.get(jComboBox3.getSelectedIndex()).getDesc6());
        
        
        jTextField16.setText(configuracion.getElementsByTagName("observacion").item(0).getTextContent());
        
        String [] arregloArticulos = new String[100]; 
       
        int indice = 0;
        for(int i=0; i<configuracion.getElementsByTagName("partida").getLength(); i++)
        {
          NodeList nodos =  configuracion.getElementsByTagName("partida").item(i).getChildNodes();
          indice = 0;
          for(int o=0; o<nodos.getLength(); o++)
          {
            // System.out.println(nodos.item(o).getTextContent());  
            if(!nodos.item(o).getNodeName().equals("#text"))
            {
            arregloArticulos[indice] = nodos.item(o).getTextContent();
            indice++;
            }
          }
        
        
        Partidascomprasmayoreo pc = new Partidascomprasmayoreo();  
        pc.setDescuento(Double.valueOf(arregloArticulos[0]));   
        pc.setDescuentoArti(Double.valueOf(arregloArticulos[1]));
        pc.setPorcCargo(Integer.valueOf(arregloArticulos[2]));
        pc.setCargoArticulo(Double.valueOf(arregloArticulos[3]));
        pc.setCascada(Integer.valueOf(arregloArticulos[4])); 
        pc.setCadenaCascada(arregloArticulos[5]);
        pc.setCostoDesc(Double.valueOf(arregloArticulos[6]));
        pc.setPrecioUni(Double.valueOf(arregloArticulos[7])); 
        pc.setIva(Integer.valueOf(arregloArticulos[8]));  
        pc.setArticulo(arregloArticulos[9]);
        pc.setCantidad(Integer.valueOf(arregloArticulos[10]));
        pc.setSubtotal(Double.valueOf(arregloArticulos[11]));
        pc.setMontoIva(Double.valueOf(arregloArticulos[12]));
        pc.setTotal(Double.valueOf(arregloArticulos[13]));
        pc.setPrecioCompra(Double.valueOf(arregloArticulos[14]));
        pc.setUtilidad(Double.valueOf(arregloArticulos[15]));
        pc.setStockMin(Integer.valueOf(arregloArticulos[16]));
        pc.setStockMax(Integer.valueOf(arregloArticulos[17]));
        pc.setPrecioVenta(Double.valueOf(arregloArticulos[18]));
        pc.setDescripcion(arregloArticulos[19]);
        
        if(!listapr.isEmpty())
        {
            for(int ia=0; ia<listapr.size(); ia++)
            {
                if(pc.getArticulo().equals(listapr.get(ia).getArticulo()) &&
                   Double.compare(pc.getPrecioCompra(),listapr.get(ia).getPrecioCompra()) == 0 &&
                   Double.compare(pc.getPrecioVenta(),listapr.get(ia).getPrecioVenta())==0)     
                                        {
                    JOptionPane.showMessageDialog(null, "No se puede agregar el mismo artículo con el mismo precio y el mismo costo");
                    return;
                }
            }
        }
        
        listapr.add(pc);
        
        
             Vector<Object> unaFila = new Vector<Object>();
             unaFila.add(pc.getArticulo());
             unaFila.add(pc.getDescripcion());
             unaFila.add(pc.getCantidad());
             unaFila.add(String.valueOf(df.format(pc.getPrecioUni())));
             unaFila.add(String.valueOf(df.format(pc.getDescuento())));
             unaFila.add(pc.getCadenaCascada());    
             unaFila.add(String.valueOf(df.format(pc.getCargoArticulo())));
             unaFila.add(String.valueOf(df.format(pc.getCostoDesc())));
             unaFila.add(String.valueOf(df.format(pc.getSubtotal()))); 
             unaFila.add(String.valueOf(df.format(pc.getIva()))); 
             unaFila.add(String.valueOf(df.format(pc.getMontoIva()))); 
             unaFila.add(String.valueOf(df.format(pc.getTotal())));
             vectorPartidas.add(unaFila);                

           
          subtotal =  subtotal + pc.getSubtotal();
          
          iva = iva + pc.getMontoIva();
          total = total + pc.getTotal();
        
        }
        


        
         }     
        
             
             dtmPartidas = new DefaultTableModel(vectorPartidas,encabezadoPartidas) {

              @Override
              public boolean isCellEditable(int row, int column) {
              return false;
                }
              };
            
              jTable2.setModel(dtmPartidas);
              int row =  jTable2.getRowCount () - 1;
              Rectangle rect = jTable2.getCellRect(row, 0, true);
              jTable2.scrollRectToVisible(rect);
              jTable2.clearSelection();
              jTable2.setRowSelectionInterval(row, row);
              jTable2.getColumn("Descripción").setPreferredWidth(270);
        
              jLabel16.setText(String.valueOf(listapr.size()));
              
              
              if(Boolean.valueOf(configuracion.getElementsByTagName("descuentoVenta").item(0).getTextContent()))
              {
               desadi = Double.valueOf(configuracion.getElementsByTagName("desadi").item(0).getTextContent());
               subtotal = Double.valueOf(configuracion.getElementsByTagName("tsubtotal").item(0).getTextContent());
               iva = Double.valueOf(configuracion.getElementsByTagName("tiva").item(0).getTextContent());
               total = Double.valueOf(configuracion.getElementsByTagName("ttotal").item(0).getTextContent());
               jButton6.setEnabled(false);
               jTextField13.setEditable(false);
               jTextField14.setEditable(false);
               jTextField15.setEditable(false);
              }
              
              jLabel18.setText(df.format(subtotal));
              jLabel24.setText(df.format(iva));
              jLabel26.setText(df.format(total));
              
              if(jCheckBox1.isSelected())
              jCheckBox1.setSelected(false);
              jTextField2.setText("1");
              jTextField9.setText("0");
              
              jTextField13.setText(configuracion.getElementsByTagName("cdescAdi").item(0).getTextContent());
              jTextField14.setText(configuracion.getElementsByTagName("cdescAdiPor").item(0).getTextContent());
              jTextField15.setText(configuracion.getElementsByTagName("cargoAdi").item(0).getTextContent());
              
              
              bandera = true; 
              bajarPartida = false;  
        
            } catch (Exception ex) {
                Logger.getLogger(VAlta_Pedidos.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        
        
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        fc.setCurrentDirectory(new File("pedidosTemporales"));
        int valor = fc.showSaveDialog(null);

        if (valor == JFileChooser.APPROVE_OPTION) {
            generarXML(fc.getSelectedFile());
        }
    }//GEN-LAST:event_jButton12ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JTextField jTextField17;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables
    hArticulos articulos;
    hComprasMayoreo hcompras;
    hPartidasComprasMayoreo hpartidascompras;
    List<Articulos> listaArticulos;
    List<Articulos> actualizarArticulos;
    List<Partidascomprasmayoreo> listapr;
    Vector vector,vectorPartidas;
    hAlmacendevoluciones halmacendevoluciones;
    DefaultTableModel dtm,dtmPartidas;
    Vector<String> encabezadoArticulos,encabezadoPartidas;
    List <Proveedores> proveedor;
    hProveedores hproveedor;
    ComprasMayoreo compras;
    Double subtotal=0.00;
    Double iva=0.0;
    Double total = 0.0;
    Double desadi = 0.0;
    DecimalFormat df;
    Kardex kardex;
    hKardex hkardex;
    hArticuloProveedor harticuloproveedor;
    boolean bandera=false;
    Double importeConIva = 0.0;
    Double cargos = 0.0;
    Double descuento = 0.0;
    Double porcostodesc = 0.0;
    Double importeCompra = 0.0;
    Integer porcentajeDesc = 0;
    Integer porcentajeCosto = 0;
    Integer cascada = 0;
    Integer ivaArticulo=0;
    boolean bajarPartida = false;
    JFileChooser fc;
    
    private void inicializar() {
    kardex = new Kardex();
    hkardex = new hKardex();
    df = new DecimalFormat("0.00");
    articulos = new hArticulos();
    listaArticulos = new ArrayList<Articulos>();
    actualizarArticulos = new ArrayList<Articulos>();
    halmacendevoluciones = new hAlmacendevoluciones();
    harticuloproveedor =  new hArticuloProveedor();
    
        encabezadoArticulos = new Vector<String>();
        encabezadoArticulos.add("Código");
        encabezadoArticulos.add("Descripción");
        encabezadoArticulos.add("Línea");
        encabezadoArticulos.add("Compra");
        encabezadoArticulos.add("Ultimo Costo");
        encabezadoArticulos.add("Existencia");
        encabezadoArticulos.add("En A. Devoluciones");
        encabezadoArticulos.add("Reservados");
        
        
        vector = new Vector();
        dtm = new DefaultTableModel(vector,encabezadoArticulos) {

              @Override
              public boolean isCellEditable(int row, int column) {
              return false;
                }
              };

           jTable1.setModel(dtm);
           jTable1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
           
           jTable1.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent e) {
        
         if(bandera)       
         {
             
        if(jTable1.getRowCount()>0||jTable1.getRowCount()<listaArticulos.size())
        {

            if(jTable1.getSelectedRow() > -1)
            {
        jTextField4.setText(df.format(listaArticulos.get(jTable1.convertRowIndexToModel(jTable1.getSelectedRow())).getPrecioCompra()));
        jTextField6.setText(df.format(listaArticulos.get(jTable1.convertRowIndexToModel(jTable1.getSelectedRow())).getPrecioCompra()));
        jTextField10.setText(String.valueOf(listaArticulos.get(jTable1.convertRowIndexToModel(jTable1.getSelectedRow())).getMinimoPzas()));
        jTextField11.setText(String.valueOf(listaArticulos.get(jTable1.convertRowIndexToModel(jTable1.getSelectedRow())).getMaximoPzas()));  
            }
        
        double cargo = 0;
        double descuento = 0;
        double importeConIva=(Double.valueOf(jTextField4.getText()) * 1.3) * (1 + CGlobalConfig.getIvaVenta()); 

        jTextField7.setText("0"); 
        cargo = importeConIva * Double.valueOf(jTextField3.getText());
        descuento = importeConIva * (Double.valueOf(jTextField5.getText())/100);
        importeConIva = importeConIva + cargo - descuento;
        jTextField8.setText(df.format(importeConIva));
        jTextField9.setText("0");
        
        porcentajeDesc = 0;
        porcentajeCosto = 0;
        cascada = 0;
        descuento = 0.0;       
        cargos = 0.0;
        porcostodesc = listaArticulos.get(jTable1.convertRowIndexToModel(jTable1.getSelectedRow())).getPrecioCompra();
        
        }
        
         }
        
        
            }
        });

        encabezadoPartidas = new Vector<String>();
        encabezadoPartidas.add("Código");
        encabezadoPartidas.add("Descripción");
        encabezadoPartidas.add("Cantidad");
        encabezadoPartidas.add("Precio Unitario");
        encabezadoPartidas.add("Descuento");
        encabezadoPartidas.add("Cascada");
        encabezadoPartidas.add("Cargos");
        encabezadoPartidas.add("Costo");
        encabezadoPartidas.add("Subtotal");
        encabezadoPartidas.add("IVA");
        encabezadoPartidas.add("Monto Iva");
        encabezadoPartidas.add("Total");
        
        vectorPartidas = new Vector();
        dtmPartidas = new DefaultTableModel(vectorPartidas,encabezadoPartidas) {

              @Override
              public boolean isCellEditable(int row, int column) {
              return false;
                }
              };

           jTable2.setModel(dtmPartidas);   
           listapr = new ArrayList<Partidascomprasmayoreo>();
           
           proveedor = new ArrayList<Proveedores>();
           hproveedor = new hProveedores();
           
           jTable1.getColumn("Descripción").setPreferredWidth(400);
           jTable2.getColumn("Descripción").setPreferredWidth(270);
           jTable2.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
           
           compras = new ComprasMayoreo();
           compras.setBanco("");
           compras.setCargos(0.0);
           compras.setCheque("");
           compras.setCodigoPedido((long)0);
           compras.setCodigoProveedor((long)0);
           compras.setCompra(0);
           compras.setDescAdic("");
           compras.setDevolucion(0);
           compras.setDiasCred(0);
           compras.setFechaCompra("");
           compras.setImporte(0.0);
           compras.setNumRefComp("");
           compras.setObservacion("");
           compras.setPedido(0);
           compras.setTipoPago("");
           hcompras = new hComprasMayoreo();
           hpartidascompras = new hPartidasComprasMayoreo();
           
           long idCompra = hcompras.consultaComprasUltima();
           jTextField12.setText(String.valueOf(idCompra+1));
           fc = new JFileChooser();
           
    }
    
    public void generarXML(File archivo)
    {
        if(jComboBox3.getSelectedIndex() == -1 || proveedor.isEmpty())
        {
            JOptionPane.showMessageDialog(null, "Por favor seleccione al proveedor de esta compra para realizar el respaldo","Respaldo no realizado",JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        
        try {
                DocumentBuilderFactory  factory  = DocumentBuilderFactory.newInstance();  
                DocumentBuilder         builder  = factory.newDocumentBuilder();  
                Document                document = builder.newDocument();    
                
                Element pedido = document.createElement("pedido");
            
            Element codigoProveedor = document.createElement("codigoProveedor");
            codigoProveedor.setTextContent(String.valueOf(proveedor.get(jComboBox3.getSelectedIndex()).getId()));
            pedido.appendChild(codigoProveedor);
            
            Element cdescAdi = document.createElement("cdescAdi");
            Element cdescAdiPor = document.createElement("cdescAdiPor");
            Element cargoAdi = document.createElement("cargoAdi");
            Element descuentoVenta = document.createElement("descuentoVenta");
            Element cdesadi = document.createElement("desadi");
            Element csubtotal = document.createElement("tsubtotal");
            Element civa = document.createElement("tiva");
            Element ctotal = document.createElement("ttotal");
            cdescAdi.setTextContent(jTextField13.getText());   
            cdescAdiPor.setTextContent(jTextField14.getText());   
            cargoAdi.setTextContent(jTextField15.getText());    
            if(jButton6.isEnabled())
            {
             descuentoVenta.setTextContent("false");   
             cdesadi.setTextContent("0.00");   
             csubtotal.setTextContent("0.00");   
             civa.setTextContent("0.00");   
             ctotal.setTextContent("0.00");   
            }else
            {
             descuentoVenta.setTextContent("true");   
             cdesadi.setTextContent(String.valueOf(desadi));   
             csubtotal.setTextContent(String.valueOf(subtotal));   
             civa.setTextContent(String.valueOf(iva));   
             ctotal.setTextContent(String.valueOf(total));    
            }
            
            pedido.appendChild(cdescAdi);
            pedido.appendChild(cdescAdiPor);
            pedido.appendChild(cargoAdi);
            pedido.appendChild(descuentoVenta);
            pedido.appendChild(cdesadi);
            pedido.appendChild(csubtotal);
            pedido.appendChild(civa);
            pedido.appendChild(ctotal);
            
            
            Element observacion = document.createElement("observacion");
            observacion.setTextContent(jTextField16.getText());
            pedido.appendChild(observacion);
            
            
            
            
            Element partidas = document.createElement("partidas");
            String cadenaOriginalPartidas="";
            for(int i=0; i<listapr.size(); i++)
            {
            Element partida = document.createElement("partida");
            
            Element descuento2 = document.createElement("descuento");
            descuento2.setTextContent(String.valueOf(listapr.get(i).getDescuento()));
            partida.appendChild(descuento2);            
            
            Element descuentoArti = document.createElement("descuentoArti");
            descuentoArti.setTextContent(String.valueOf(listapr.get(i).getDescuentoArti()));
            partida.appendChild(descuentoArti);
            
            Element porcCargo = document.createElement("porcCargo");
            porcCargo.setTextContent(String.valueOf(listapr.get(i).getPorcCargo()));
            partida.appendChild(porcCargo);
            
            Element cargoArticulo = document.createElement("cargoArticulo");
            cargoArticulo.setTextContent(String.valueOf(listapr.get(i).getCargoArticulo()));
            partida.appendChild(cargoArticulo);
            
            Element cascada = document.createElement("cascada");
            cascada.setTextContent(String.valueOf(listapr.get(i).getCascada()));
            partida.appendChild(cascada);
            
            Element cadenaCascada = document.createElement("cadenaCascada");
            cadenaCascada.setTextContent(String.valueOf(listapr.get(i).getCadenaCascada()));
            partida.appendChild(cadenaCascada);
            
            Element costoDesc = document.createElement("costoDesc");
            costoDesc.setTextContent(String.valueOf(listapr.get(i).getCostoDesc()));
            partida.appendChild(costoDesc);
            
            Element precioUni = document.createElement("precioUni");
            precioUni.setTextContent(String.valueOf(listapr.get(i).getPrecioUni()));
            partida.appendChild(precioUni);
            
            cadenaOriginalPartidas = cadenaOriginalPartidas + String.valueOf(listapr.get(i).getPrecioUni());
            
            Element iva2 = document.createElement("iva");
            iva2.setTextContent(String.valueOf(listapr.get(i).getIva()));
            partida.appendChild(iva2);
            
            Element articulo = document.createElement("articulo");
            articulo.setTextContent(String.valueOf(listapr.get(i).getArticulo()));
            partida.appendChild(articulo);
            
            cadenaOriginalPartidas = cadenaOriginalPartidas + String.valueOf(listapr.get(i).getArticulo());
            
            Element cantidad = document.createElement("cantidad");
            cantidad.setTextContent(String.valueOf(listapr.get(i).getCantidad()));
            partida.appendChild(cantidad);
            
            Element subtotal2 = document.createElement("subtotal");
            subtotal2.setTextContent(String.valueOf(listapr.get(i).getSubtotal()));
            partida.appendChild(subtotal2);
            
            Element montoIva = document.createElement("montoIva");
            montoIva.setTextContent(String.valueOf(listapr.get(i).getMontoIva()));
            partida.appendChild(montoIva);
            
            Element total2 = document.createElement("total");
            total2.setTextContent(String.valueOf(listapr.get(i).getTotal()));
            partida.appendChild(total2);
            
            cadenaOriginalPartidas = cadenaOriginalPartidas + String.valueOf(listapr.get(i).getTotal());
            
            Element precioCompra = document.createElement("precioCompra");
            precioCompra.setTextContent(String.valueOf(listapr.get(i).getPrecioCompra()));
            partida.appendChild(precioCompra);
            
            cadenaOriginalPartidas = cadenaOriginalPartidas + String.valueOf(listapr.get(i).getPrecioCompra());
            
            Element utilidad = document.createElement("utilidad");
            utilidad.setTextContent(String.valueOf(listapr.get(i).getUtilidad()));
            partida.appendChild(utilidad);
            
            Element stockMin = document.createElement("stockMin");
            stockMin.setTextContent(String.valueOf(listapr.get(i).getStockMin()));
            partida.appendChild(stockMin);
            
            Element stockMax = document.createElement("stockMax");
            stockMax.setTextContent(String.valueOf(listapr.get(i).getStockMax()));
            partida.appendChild(stockMax);
            
            Element precioVenta = document.createElement("precioVenta");
            precioVenta.setTextContent(String.valueOf(listapr.get(i).getPrecioVenta()));
            partida.appendChild(precioVenta);
            
            cadenaOriginalPartidas = cadenaOriginalPartidas + String.valueOf(listapr.get(i).getPrecioVenta());
            
            Element descripcion = document.createElement("descripcion");
            descripcion.setTextContent(String.valueOf(listapr.get(i).getDescripcion()));
            partida.appendChild(descripcion);
            
            cadenaOriginalPartidas = cadenaOriginalPartidas + String.valueOf(listapr.get(i).getDescripcion());
            
            partidas.appendChild(partida);
            }
            
            String cadenaOriginal = String.valueOf(proveedor.get(jComboBox3.getSelectedIndex()).getId())  +
                                    descuentoVenta.getTextContent() +  
                                    cdesadi.getTextContent() +
                                    csubtotal.getTextContent() +   
                                    civa.getTextContent() +   
                                    ctotal.getTextContent() +   
                                    cadenaOriginalPartidas;
            
            
            MessageDigest cript = MessageDigest.getInstance("SHA-1");
            cript.reset();
            cript.update(cadenaOriginal.getBytes("utf8"));
            String sha1 = new String(Hex.encode(cript.digest()), 
                             Charset.forName("UTF-8")); 
            
            
            
            Element msha1 = document.createElement("sha1");
        
            msha1.setTextContent(sha1); 
            
            pedido.appendChild(partidas);
            pedido.appendChild(msha1);
            document.appendChild(pedido);   
            
          try {
                DOMUtils.nuevaConfig(document, archivo);
            } catch (Exception ex) {
                Logger.getLogger(VConfiguracion.class.getName()).log(Level.SEVERE, null, ex);
            }
          
            } catch (UnsupportedEncodingException ex) {
            Logger.getLogger(VAlta_Pedidos.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NoSuchAlgorithmException ex) {
            Logger.getLogger(VAlta_Pedidos.class.getName()).log(Level.SEVERE, null, ex);
        }catch (ParserConfigurationException ex) {
                Logger.getLogger(VAlta_Pedidos.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
    
}

